<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta name="viewport" content="width=device-width, initial-scale=1" />
<meta property="og:title" content="并发执行" />
<meta property="og:type" content="website" />
<meta property="og:url" content="https://docs.python.org/3/library/concurrency.xhtml" />
<meta property="og:site_name" content="Python documentation" />
<meta property="og:description" content="本章中描述的模块支持并发执行代码。 适当的工具选择取决于要执行的任务（CPU密集型或IO密集型）和偏好的开发风格（事件驱动的协作式多任务或抢占式多任务处理）。 这是一个概述： threading--- 基于线程的并行- 线程本地数据, 线程对象, 锁对象, 递归锁对象, 条件对象, 信号量对象- Semaphore 例子., 事件对象, 定时器对象, 栅栏对象, 在 with 语句中使用锁、..." />
<meta property="og:image" content="https://docs.python.org/3/_static/og-image.png" />
<meta property="og:image:alt" content="Python documentation" />
<meta name="description" content="本章中描述的模块支持并发执行代码。 适当的工具选择取决于要执行的任务（CPU密集型或IO密集型）和偏好的开发风格（事件驱动的协作式多任务或抢占式多任务处理）。 这是一个概述： threading--- 基于线程的并行- 线程本地数据, 线程对象, 锁对象, 递归锁对象, 条件对象, 信号量对象- Semaphore 例子., 事件对象, 定时器对象, 栅栏对象, 在 with 语句中使用锁、..." />
<meta property="og:image:width" content="200" />
<meta property="og:image:height" content="200" />
<meta name="theme-color" content="#3776ab" />

    <title>并发执行</title>
    <link rel="stylesheet" type="text/css" href="../_static/pygments.css" />
    <link rel="stylesheet" type="text/css" href="../_static/epub.css" />
    <link rel="canonical" href="https://docs.python.org/3/library/concurrency.html" />
    
      
    

    
    <style>
      @media only screen {
        table.full-width-table {
            width: 100%;
        }
      }
    </style>
 

  </head><body>


    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <section id="concurrent-execution">
<span id="concurrency"></span><h1>并发执行</h1>
<p>本章中描述的模块支持并发执行代码。 适当的工具选择取决于要执行的任务（CPU密集型或IO密集型）和偏好的开发风格（事件驱动的协作式多任务或抢占式多任务处理）。 这是一个概述：</p>
<div class="toctree-wrapper compound">
<ul>
<li class="toctree-l1"><a class="reference internal" href="threading.xhtml"><code class="xref py py-mod docutils literal notranslate"><span class="pre">threading</span></code> --- 基于线程的并行</a><ul>
<li class="toctree-l2"><a class="reference internal" href="threading.xhtml#thread-local-data">线程本地数据</a></li>
<li class="toctree-l2"><a class="reference internal" href="threading.xhtml#thread-objects">线程对象</a></li>
<li class="toctree-l2"><a class="reference internal" href="threading.xhtml#lock-objects">锁对象</a></li>
<li class="toctree-l2"><a class="reference internal" href="threading.xhtml#rlock-objects">递归锁对象</a></li>
<li class="toctree-l2"><a class="reference internal" href="threading.xhtml#condition-objects">条件对象</a></li>
<li class="toctree-l2"><a class="reference internal" href="threading.xhtml#semaphore-objects">信号量对象</a><ul>
<li class="toctree-l3"><a class="reference internal" href="threading.xhtml#semaphore-example"><code class="xref py py-class docutils literal notranslate"><span class="pre">Semaphore</span></code> 例子</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="threading.xhtml#event-objects">事件对象</a></li>
<li class="toctree-l2"><a class="reference internal" href="threading.xhtml#timer-objects">定时器对象</a></li>
<li class="toctree-l2"><a class="reference internal" href="threading.xhtml#barrier-objects">栅栏对象</a></li>
<li class="toctree-l2"><a class="reference internal" href="threading.xhtml#using-locks-conditions-and-semaphores-in-the-with-statement">在 <code class="xref std std-keyword docutils literal notranslate"><span class="pre">with</span></code> 语句中使用锁、条件和信号量</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="multiprocessing.xhtml"><code class="xref py py-mod docutils literal notranslate"><span class="pre">multiprocessing</span></code> --- Process-based parallelism</a><ul>
<li class="toctree-l2"><a class="reference internal" href="multiprocessing.xhtml#introduction">概述</a><ul>
<li class="toctree-l3"><a class="reference internal" href="multiprocessing.xhtml#the-process-class"><code class="xref py py-class docutils literal notranslate"><span class="pre">Process</span></code> 类</a></li>
<li class="toctree-l3"><a class="reference internal" href="multiprocessing.xhtml#contexts-and-start-methods">上下文和启动方法</a></li>
<li class="toctree-l3"><a class="reference internal" href="multiprocessing.xhtml#exchanging-objects-between-processes">在进程之间交换对象</a></li>
<li class="toctree-l3"><a class="reference internal" href="multiprocessing.xhtml#synchronization-between-processes">进程间同步</a></li>
<li class="toctree-l3"><a class="reference internal" href="multiprocessing.xhtml#sharing-state-between-processes">进程间共享状态</a></li>
<li class="toctree-l3"><a class="reference internal" href="multiprocessing.xhtml#using-a-pool-of-workers">使用工作进程</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="multiprocessing.xhtml#reference">参考</a><ul>
<li class="toctree-l3"><a class="reference internal" href="multiprocessing.xhtml#process-and-exceptions"><code class="xref py py-class docutils literal notranslate"><span class="pre">Process</span></code> 和异常</a></li>
<li class="toctree-l3"><a class="reference internal" href="multiprocessing.xhtml#pipes-and-queues">管道和队列</a></li>
<li class="toctree-l3"><a class="reference internal" href="multiprocessing.xhtml#miscellaneous">杂项</a></li>
<li class="toctree-l3"><a class="reference internal" href="multiprocessing.xhtml#connection-objects">连接对象（Connection）</a></li>
<li class="toctree-l3"><a class="reference internal" href="multiprocessing.xhtml#synchronization-primitives">同步原语</a></li>
<li class="toctree-l3"><a class="reference internal" href="multiprocessing.xhtml#shared-ctypes-objects">共享 <code class="xref py py-mod docutils literal notranslate"><span class="pre">ctypes</span></code> 对象</a><ul>
<li class="toctree-l4"><a class="reference internal" href="multiprocessing.xhtml#module-multiprocessing.sharedctypes"><code class="xref py py-mod docutils literal notranslate"><span class="pre">multiprocessing.sharedctypes</span></code> 模块</a></li>
</ul>
</li>
<li class="toctree-l3"><a class="reference internal" href="multiprocessing.xhtml#managers">管理器</a><ul>
<li class="toctree-l4"><a class="reference internal" href="multiprocessing.xhtml#customized-managers">自定义管理器</a></li>
<li class="toctree-l4"><a class="reference internal" href="multiprocessing.xhtml#using-a-remote-manager">使用远程管理器</a></li>
</ul>
</li>
<li class="toctree-l3"><a class="reference internal" href="multiprocessing.xhtml#proxy-objects">代理对象</a><ul>
<li class="toctree-l4"><a class="reference internal" href="multiprocessing.xhtml#cleanup">清理</a></li>
</ul>
</li>
<li class="toctree-l3"><a class="reference internal" href="multiprocessing.xhtml#module-multiprocessing.pool">进程池</a></li>
<li class="toctree-l3"><a class="reference internal" href="multiprocessing.xhtml#module-multiprocessing.connection">监听器及客户端</a><ul>
<li class="toctree-l4"><a class="reference internal" href="multiprocessing.xhtml#address-formats">地址格式</a></li>
</ul>
</li>
<li class="toctree-l3"><a class="reference internal" href="multiprocessing.xhtml#authentication-keys">认证密码</a></li>
<li class="toctree-l3"><a class="reference internal" href="multiprocessing.xhtml#logging">日志记录</a></li>
<li class="toctree-l3"><a class="reference internal" href="multiprocessing.xhtml#module-multiprocessing.dummy"><code class="xref py py-mod docutils literal notranslate"><span class="pre">multiprocessing.dummy</span></code> 模块</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="multiprocessing.xhtml#programming-guidelines">编程指导</a><ul>
<li class="toctree-l3"><a class="reference internal" href="multiprocessing.xhtml#all-start-methods">所有start方法</a></li>
<li class="toctree-l3"><a class="reference internal" href="multiprocessing.xhtml#the-spawn-and-forkserver-start-methods"><em>spawn</em> 和 <em>forkserver</em> 启动方式</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="multiprocessing.xhtml#examples">例子</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="multiprocessing.shared_memory.xhtml"><code class="xref py py-mod docutils literal notranslate"><span class="pre">multiprocessing.shared_memory</span></code> --- 可跨进程直接访问的共享内存</a></li>
<li class="toctree-l1"><a class="reference internal" href="concurrent.xhtml"><code class="xref py py-mod docutils literal notranslate"><span class="pre">concurrent</span></code> 包</a></li>
<li class="toctree-l1"><a class="reference internal" href="concurrent.futures.xhtml"><code class="xref py py-mod docutils literal notranslate"><span class="pre">concurrent.futures</span></code> --- 启动并行任务</a><ul>
<li class="toctree-l2"><a class="reference internal" href="concurrent.futures.xhtml#executor-objects">Executor 对象</a></li>
<li class="toctree-l2"><a class="reference internal" href="concurrent.futures.xhtml#threadpoolexecutor">ThreadPoolExecutor</a><ul>
<li class="toctree-l3"><a class="reference internal" href="concurrent.futures.xhtml#threadpoolexecutor-example">ThreadPoolExecutor 例子</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="concurrent.futures.xhtml#processpoolexecutor">ProcessPoolExecutor</a><ul>
<li class="toctree-l3"><a class="reference internal" href="concurrent.futures.xhtml#processpoolexecutor-example">ProcessPoolExecutor 例子</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="concurrent.futures.xhtml#future-objects">Future 对象</a></li>
<li class="toctree-l2"><a class="reference internal" href="concurrent.futures.xhtml#module-functions">模块函数</a></li>
<li class="toctree-l2"><a class="reference internal" href="concurrent.futures.xhtml#exception-classes">Exception 类</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="subprocess.xhtml"><code class="xref py py-mod docutils literal notranslate"><span class="pre">subprocess</span></code> --- 子进程管理</a><ul>
<li class="toctree-l2"><a class="reference internal" href="subprocess.xhtml#using-the-subprocess-module">使用 <code class="xref py py-mod docutils literal notranslate"><span class="pre">subprocess</span></code> 模块</a><ul>
<li class="toctree-l3"><a class="reference internal" href="subprocess.xhtml#frequently-used-arguments">常用参数</a></li>
<li class="toctree-l3"><a class="reference internal" href="subprocess.xhtml#popen-constructor">Popen 构造函数</a></li>
<li class="toctree-l3"><a class="reference internal" href="subprocess.xhtml#exceptions">异常</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="subprocess.xhtml#security-considerations">安全考量</a></li>
<li class="toctree-l2"><a class="reference internal" href="subprocess.xhtml#popen-objects">Popen 对象</a></li>
<li class="toctree-l2"><a class="reference internal" href="subprocess.xhtml#windows-popen-helpers">Windows Popen 助手</a><ul>
<li class="toctree-l3"><a class="reference internal" href="subprocess.xhtml#windows-constants">Windows 常数</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="subprocess.xhtml#older-high-level-api">较旧的高阶 API</a></li>
<li class="toctree-l2"><a class="reference internal" href="subprocess.xhtml#replacing-older-functions-with-the-subprocess-module">使用 <code class="xref py py-mod docutils literal notranslate"><span class="pre">subprocess</span></code> 模块替换旧函数</a><ul>
<li class="toctree-l3"><a class="reference internal" href="subprocess.xhtml#replacing-bin-sh-shell-command-substitution">替代 <strong class="program">/bin/sh</strong> shell 命令替换</a></li>
<li class="toctree-l3"><a class="reference internal" href="subprocess.xhtml#replacing-shell-pipeline">替代 shell 管道</a></li>
<li class="toctree-l3"><a class="reference internal" href="subprocess.xhtml#replacing-os-system">替代 <code class="xref py py-func docutils literal notranslate"><span class="pre">os.system()</span></code></a></li>
<li class="toctree-l3"><a class="reference internal" href="subprocess.xhtml#replacing-the-os-spawn-family">替代 <code class="xref py py-func docutils literal notranslate"><span class="pre">os.spawn</span></code> 函数族</a></li>
<li class="toctree-l3"><a class="reference internal" href="subprocess.xhtml#replacing-os-popen-os-popen2-os-popen3">替代 <code class="xref py py-func docutils literal notranslate"><span class="pre">os.popen()</span></code>, <code class="xref py py-func docutils literal notranslate"><span class="pre">os.popen2()</span></code>, <code class="xref py py-func docutils literal notranslate"><span class="pre">os.popen3()</span></code></a></li>
<li class="toctree-l3"><a class="reference internal" href="subprocess.xhtml#replacing-functions-from-the-popen2-module">替换来自 <code class="xref py py-mod docutils literal notranslate"><span class="pre">popen2</span></code> 模块的函数</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="subprocess.xhtml#legacy-shell-invocation-functions">旧式的 Shell 发起函数</a></li>
<li class="toctree-l2"><a class="reference internal" href="subprocess.xhtml#notes">备注</a><ul>
<li class="toctree-l3"><a class="reference internal" href="subprocess.xhtml#converting-an-argument-sequence-to-a-string-on-windows">在 Windows 上将参数列表转换为一个字符串</a></li>
<li class="toctree-l3"><a class="reference internal" href="subprocess.xhtml#disabling-use-of-vfork-or-posix-spawn">禁用 <code class="docutils literal notranslate"><span class="pre">vfork()</span></code> 或 <code class="docutils literal notranslate"><span class="pre">posix_spawn()</span></code></a></li>
</ul>
</li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="sched.xhtml"><code class="xref py py-mod docutils literal notranslate"><span class="pre">sched</span></code> --- 事件调度器</a><ul>
<li class="toctree-l2"><a class="reference internal" href="sched.xhtml#scheduler-objects">调度器对象</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="queue.xhtml"><code class="xref py py-mod docutils literal notranslate"><span class="pre">queue</span></code> --- A synchronized queue class</a><ul>
<li class="toctree-l2"><a class="reference internal" href="queue.xhtml#queue-objects">Queue对象</a></li>
<li class="toctree-l2"><a class="reference internal" href="queue.xhtml#simplequeue-objects">SimpleQueue 对象</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="contextvars.xhtml"><code class="xref py py-mod docutils literal notranslate"><span class="pre">contextvars</span></code> --- 上下文变量</a><ul>
<li class="toctree-l2"><a class="reference internal" href="contextvars.xhtml#context-variables">上下文变量</a></li>
<li class="toctree-l2"><a class="reference internal" href="contextvars.xhtml#manual-context-management">手动上下文管理</a></li>
<li class="toctree-l2"><a class="reference internal" href="contextvars.xhtml#asyncio-support">asyncio 支持</a></li>
</ul>
</li>
</ul>
</div>
<p>以下是上述某些服务的支持模块：</p>
<div class="toctree-wrapper compound">
<ul>
<li class="toctree-l1"><a class="reference internal" href="_thread.xhtml"><code class="xref py py-mod docutils literal notranslate"><span class="pre">_thread</span></code> --- 低层级多线程 API</a></li>
</ul>
</div>
</section>


            <div class="clearer"></div>
          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>