<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta name="viewport" content="width=device-width, initial-scale=1" />
<meta property="og:title" content="dbm --- Unix &quot;数据库&quot; 接口" />
<meta property="og:type" content="website" />
<meta property="og:url" content="https://docs.python.org/3/library/dbm.xhtml" />
<meta property="og:site_name" content="Python documentation" />
<meta property="og:description" content="源代码: Lib/dbm/__init__.py[https://github.com/python/cpython/tree/3.12/Lib/dbm/__init__.py] dbm 是一种泛用接口，针对各种 DBM 数据库 --- 包括 dbm.gnu 或 dbm.ndbm 。 如果未安装这些模块中的任何一种，则将使用 dbm.dumb 模块中慢速但简单的实现。 还有一个适用于 Ora..." />
<meta property="og:image" content="https://docs.python.org/3/_static/og-image.png" />
<meta property="og:image:alt" content="Python documentation" />
<meta name="description" content="源代码: Lib/dbm/__init__.py[https://github.com/python/cpython/tree/3.12/Lib/dbm/__init__.py] dbm 是一种泛用接口，针对各种 DBM 数据库 --- 包括 dbm.gnu 或 dbm.ndbm 。 如果未安装这些模块中的任何一种，则将使用 dbm.dumb 模块中慢速但简单的实现。 还有一个适用于 Ora..." />
<meta property="og:image:width" content="200" />
<meta property="og:image:height" content="200" />
<meta name="theme-color" content="#3776ab" />

    <title>dbm --- Unix &#34;数据库&#34; 接口</title>
    <link rel="stylesheet" type="text/css" href="../_static/pygments.css" />
    <link rel="stylesheet" type="text/css" href="../_static/epub.css" />
    <link rel="canonical" href="https://docs.python.org/3/library/dbm.html" />
    
      
    

    
    <style>
      @media only screen {
        table.full-width-table {
            width: 100%;
        }
      }
    </style>
 

  </head><body>


    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <section id="module-dbm">
<span id="dbm-interfaces-to-unix-databases"></span><h1><code class="xref py py-mod docutils literal notranslate"><span class="pre">dbm</span></code> --- Unix &quot;数据库&quot; 接口</h1>
<p><strong>源代码:</strong> <a class="reference external" href="https://github.com/python/cpython/tree/3.12/Lib/dbm/__init__.py">Lib/dbm/__init__.py</a><span class="link-target"> [https://github.com/python/cpython/tree/3.12/Lib/dbm/__init__.py]</span></p>
<hr class="docutils" />
<p><a class="reference internal" href="#module-dbm" title="dbm: Interfaces to various Unix &quot;database&quot; formats."><code class="xref py py-mod docutils literal notranslate"><span class="pre">dbm</span></code></a> 是一种泛用接口，针对各种 DBM 数据库 --- 包括 <a class="reference internal" href="#module-dbm.gnu" title="dbm.gnu: GNU database manager (Unix)"><code class="xref py py-mod docutils literal notranslate"><span class="pre">dbm.gnu</span></code></a> 或 <a class="reference internal" href="#module-dbm.ndbm" title="dbm.ndbm: The New Database Manager (Unix)"><code class="xref py py-mod docutils literal notranslate"><span class="pre">dbm.ndbm</span></code></a>。 如果未安装这些模块中的任何一种，则将使用 <a class="reference internal" href="#module-dbm.dumb" title="dbm.dumb: Portable implementation of the simple DBM interface."><code class="xref py py-mod docutils literal notranslate"><span class="pre">dbm.dumb</span></code></a> 模块中慢速但简单的实现。 还有一个适用于 Oracle Berkeley DB 的 <a class="reference external" href="https://www.jcea.es/programacion/pybsddb.htm">第三方接口</a><span class="link-target"> [https://www.jcea.es/programacion/pybsddb.htm]</span>。</p>
<dl class="py exception">
<dt class="sig sig-object py" id="dbm.error">
<em class="property"><span class="pre">exception</span><span class="w"> </span></em><span class="sig-prename descclassname"><span class="pre">dbm.</span></span><span class="sig-name descname"><span class="pre">error</span></span></dt>
<dd><p>一个元组，其中包含每个受支持的模块可引发的异常，另外还有一个名为 <a class="reference internal" href="#dbm.error" title="dbm.error"><code class="xref py py-exc docutils literal notranslate"><span class="pre">dbm.error</span></code></a> 的特殊异常作为第一项 --- 后者最在引发 <a class="reference internal" href="#dbm.error" title="dbm.error"><code class="xref py py-exc docutils literal notranslate"><span class="pre">dbm.error</span></code></a> 时被使用。</p>
</dd></dl>

<dl class="py function">
<dt class="sig sig-object py" id="dbm.whichdb">
<span class="sig-prename descclassname"><span class="pre">dbm.</span></span><span class="sig-name descname"><span class="pre">whichdb</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">filename</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>此函数会猜测各种简单数据库模块中的哪一个是可用的 --- <a class="reference internal" href="#module-dbm.gnu" title="dbm.gnu: GNU database manager (Unix)"><code class="xref py py-mod docutils literal notranslate"><span class="pre">dbm.gnu</span></code></a>, <a class="reference internal" href="#module-dbm.ndbm" title="dbm.ndbm: The New Database Manager (Unix)"><code class="xref py py-mod docutils literal notranslate"><span class="pre">dbm.ndbm</span></code></a> 还是 <a class="reference internal" href="#module-dbm.dumb" title="dbm.dumb: Portable implementation of the simple DBM interface."><code class="xref py py-mod docutils literal notranslate"><span class="pre">dbm.dumb</span></code></a> --- 应该被用来打开给定的文件。</p>
<p>返回下列值中的一个：</p>
<ul class="simple">
<li><p>如果文件因其不可读或不存在而无法打开则返回 <code class="docutils literal notranslate"><span class="pre">None</span></code></p></li>
<li><p>如果文件格式无法猜测则返回空字符串 (<code class="docutils literal notranslate"><span class="pre">''</span></code>)</p></li>
<li><p>包含所需模块名称的字符串，如 <code class="docutils literal notranslate"><span class="pre">'dbm.ndbm'</span></code> 或 <code class="docutils literal notranslate"><span class="pre">'dbm.gnu'</span></code></p></li>
</ul>
<div class="versionchanged">
<p><span class="versionmodified changed">在 3.11 版本发生变更: </span><em>filename</em> 接受一个 <a class="reference internal" href="../glossary.xhtml#term-path-like-object"><span class="xref std std-term">path-like object</span></a>。</p>
</div>
</dd></dl>

<dl class="py function">
<dt class="sig sig-object py" id="dbm.open">
<span class="sig-prename descclassname"><span class="pre">dbm.</span></span><span class="sig-name descname"><span class="pre">open</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">file</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">flag</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">'r'</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">mode</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">0o666</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>打开一个数据库并返回相应的数据库对象。</p>
<dl class="field-list simple">
<dt class="field-odd">参数<span class="colon">:</span></dt>
<dd class="field-odd"><ul class="simple">
<li><p><strong>file</strong> (<a class="reference internal" href="../glossary.xhtml#term-path-like-object"><span class="xref std std-term">path-like object</span></a>) -- 要打开的数据库文件。 如果数据库文件已存在，则使用 <a class="reference internal" href="#dbm.whichdb" title="dbm.whichdb"><code class="xref py py-func docutils literal notranslate"><span class="pre">whichdb()</span></code></a> 来确定其类型和要使用的适当模块；如果文件不存在，则会使用上述可导入子模块中的第一个。</p></li>
<li><p><strong>flag</strong> (<a class="reference internal" href="stdtypes.xhtml#str" title="str"><em>str</em></a>) -- <ul>
<li><p><code class="docutils literal notranslate"><span class="pre">'r'</span></code> (default): Open existing database for reading only.</p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">'w'</span></code>: Open existing database for reading and writing.</p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">'c'</span></code>: Open database for reading and writing, creating it if it doesn't exist.</p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">'n'</span></code>: Always create a new, empty database, open for reading and writing.</p></li>
</ul>
</p></li>
<li><p><strong>mode</strong> (<a class="reference internal" href="functions.xhtml#int" title="int"><em>int</em></a>) -- The Unix file access mode of the file (default: octal <code class="docutils literal notranslate"><span class="pre">0o666</span></code>),
used only when the database has to be created.</p></li>
</ul>
</dd>
</dl>
<div class="versionchanged">
<p><span class="versionmodified changed">在 3.11 版本发生变更: </span><em>file</em> 接受一个 <a class="reference internal" href="../glossary.xhtml#term-path-like-object"><span class="xref std std-term">path-like object</span></a>。</p>
</div>
</dd></dl>

<p><a class="reference internal" href="#dbm.open" title="dbm.open"><code class="xref py py-func docutils literal notranslate"><span class="pre">open()</span></code></a> 所返回的对象支持与 <a class="reference internal" href="stdtypes.xhtml#dict" title="dict"><code class="xref py py-class docutils literal notranslate"><span class="pre">dict</span></code></a> 相同的基本功能；可以存储、获取和删除键及其对应的值，并可使用 <a class="reference internal" href="../reference/expressions.xhtml#in"><code class="xref std std-keyword docutils literal notranslate"><span class="pre">in</span></code></a> 运算符和 <code class="xref py py-meth docutils literal notranslate"><span class="pre">keys()</span></code> 方法，以及 <code class="xref py py-meth docutils literal notranslate"><span class="pre">get()</span></code> 和 <code class="xref py py-meth docutils literal notranslate"><span class="pre">setdefault()</span></code> 方法。</p>
<p>键和值总是被存储为 <a class="reference internal" href="stdtypes.xhtml#bytes" title="bytes"><code class="xref py py-class docutils literal notranslate"><span class="pre">bytes</span></code></a>。 这意味着当使用字符串时它们会在被存储之前隐式地转换至默认编码格式。</p>
<p>这些对象也支持在 <a class="reference internal" href="../reference/compound_stmts.xhtml#with"><code class="xref std std-keyword docutils literal notranslate"><span class="pre">with</span></code></a> 语句中使用，当语句结束时将自动关闭它们。</p>
<div class="versionchanged">
<p><span class="versionmodified changed">在 3.2 版本发生变更: </span>现在 <code class="xref py py-meth docutils literal notranslate"><span class="pre">get()</span></code> 和 <code class="xref py py-meth docutils literal notranslate"><span class="pre">setdefault()</span></code> 方法对所有 <a class="reference internal" href="#module-dbm" title="dbm: Interfaces to various Unix &quot;database&quot; formats."><code class="xref py py-mod docutils literal notranslate"><span class="pre">dbm</span></code></a> 后端均可用。</p>
</div>
<div class="versionchanged">
<p><span class="versionmodified changed">在 3.4 版本发生变更: </span>向 <a class="reference internal" href="#dbm.open" title="dbm.open"><code class="xref py py-func docutils literal notranslate"><span class="pre">open()</span></code></a> 所返回的对象添加了对上下文管理协议的原生支持。</p>
</div>
<div class="versionchanged">
<p><span class="versionmodified changed">在 3.8 版本发生变更: </span>从只读数据库中删除键将引发数据库模块专属的异常而不是 <a class="reference internal" href="exceptions.xhtml#KeyError" title="KeyError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">KeyError</span></code></a>。</p>
</div>
<p>以下示例记录了一些主机名和对应的标题，随后将数据库的内容打印出来。:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="kn">import</span> <span class="nn">dbm</span>

<span class="c1"># Open database, creating it if necessary.</span>
<span class="k">with</span> <span class="n">dbm</span><span class="o">.</span><span class="n">open</span><span class="p">(</span><span class="s1">&#39;cache&#39;</span><span class="p">,</span> <span class="s1">&#39;c&#39;</span><span class="p">)</span> <span class="k">as</span> <span class="n">db</span><span class="p">:</span>

    <span class="c1"># Record some values</span>
    <span class="n">db</span><span class="p">[</span><span class="sa">b</span><span class="s1">&#39;hello&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="sa">b</span><span class="s1">&#39;there&#39;</span>
    <span class="n">db</span><span class="p">[</span><span class="s1">&#39;www.python.org&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="s1">&#39;Python Website&#39;</span>
    <span class="n">db</span><span class="p">[</span><span class="s1">&#39;www.cnn.com&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="s1">&#39;Cable News Network&#39;</span>

    <span class="c1"># Note that the keys are considered bytes now.</span>
    <span class="k">assert</span> <span class="n">db</span><span class="p">[</span><span class="sa">b</span><span class="s1">&#39;www.python.org&#39;</span><span class="p">]</span> <span class="o">==</span> <span class="sa">b</span><span class="s1">&#39;Python Website&#39;</span>
    <span class="c1"># Notice how the value is now in bytes.</span>
    <span class="k">assert</span> <span class="n">db</span><span class="p">[</span><span class="s1">&#39;www.cnn.com&#39;</span><span class="p">]</span> <span class="o">==</span> <span class="sa">b</span><span class="s1">&#39;Cable News Network&#39;</span>

    <span class="c1"># Often-used methods of the dict interface work too.</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">db</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">&#39;python.org&#39;</span><span class="p">,</span> <span class="sa">b</span><span class="s1">&#39;not present&#39;</span><span class="p">))</span>

    <span class="c1"># Storing a non-string key or value will raise an exception (most</span>
    <span class="c1"># likely a TypeError).</span>
    <span class="n">db</span><span class="p">[</span><span class="s1">&#39;www.yahoo.com&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="mi">4</span>

<span class="c1"># db is automatically closed when leaving the with statement.</span>
</pre></div>
</div>
<div class="admonition seealso">
<p class="admonition-title">参见</p>
<dl class="simple">
<dt>模块 <a class="reference internal" href="shelve.xhtml#module-shelve" title="shelve: Python object persistence."><code class="xref py py-mod docutils literal notranslate"><span class="pre">shelve</span></code></a></dt><dd><p>存储非字符串数据的持久化模块。</p>
</dd>
</dl>
</div>
<p>以下部分描述了各个单独的子模块。</p>
<section id="module-dbm.gnu">
<span id="dbm-gnu-gnu-database-manager"></span><h2><a class="reference internal" href="#module-dbm.gnu" title="dbm.gnu: GNU database manager (Unix)"><code class="xref py py-mod docutils literal notranslate"><span class="pre">dbm.gnu</span></code></a> --- GNU 数据库管理器</h2>
<p><strong>源代码:</strong> <a class="reference external" href="https://github.com/python/cpython/tree/3.12/Lib/dbm/gnu.py">Lib/dbm/gnu.py</a><span class="link-target"> [https://github.com/python/cpython/tree/3.12/Lib/dbm/gnu.py]</span></p>
<hr class="docutils" />
<p><a class="reference internal" href="#module-dbm.gnu" title="dbm.gnu: GNU database manager (Unix)"><code class="xref py py-mod docutils literal notranslate"><span class="pre">dbm.gnu</span></code></a> 模块提供了针对 <abbr title="GNU dbm">GDBM</abbr> 库的接口，类似于 <a class="reference internal" href="#module-dbm.ndbm" title="dbm.ndbm: The New Database Manager (Unix)"><code class="xref py py-mod docutils literal notranslate"><span class="pre">dbm.ndbm</span></code></a> 模块，但带有额外的功能如对崩溃的容忍。</p>
<div class="admonition note">
<p class="admonition-title">备注</p>
<p>由 <a class="reference internal" href="#module-dbm.gnu" title="dbm.gnu: GNU database manager (Unix)"><code class="xref py py-mod docutils literal notranslate"><span class="pre">dbm.gnu</span></code></a> 和 <a class="reference internal" href="#module-dbm.ndbm" title="dbm.ndbm: The New Database Manager (Unix)"><code class="xref py py-mod docutils literal notranslate"><span class="pre">dbm.ndbm</span></code></a> 创建的文件格式是不兼容的因而无法互换使用。</p>
</div>
<dl class="py exception">
<dt class="sig sig-object py" id="dbm.gnu.error">
<em class="property"><span class="pre">exception</span><span class="w"> </span></em><span class="sig-prename descclassname"><span class="pre">dbm.gnu.</span></span><span class="sig-name descname"><span class="pre">error</span></span></dt>
<dd><p>针对 <a class="reference internal" href="#module-dbm.gnu" title="dbm.gnu: GNU database manager (Unix)"><code class="xref py py-mod docutils literal notranslate"><span class="pre">dbm.gnu</span></code></a> 专属错误例如 I/O 错误引发。 <a class="reference internal" href="exceptions.xhtml#KeyError" title="KeyError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">KeyError</span></code></a> 的引发则针对一般映射错误例如指定了不正确的键。</p>
</dd></dl>

<dl class="py function">
<dt class="sig sig-object py" id="dbm.gnu.open">
<span class="sig-prename descclassname"><span class="pre">dbm.gnu.</span></span><span class="sig-name descname"><span class="pre">open</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">filename</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">flag</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">'r'</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">mode</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">0o666</span></span></em>, <em class="sig-param"><span class="o"><span class="pre">/</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>打开 GDBM 数据库并返回一个 <code class="xref py py-class docutils literal notranslate"><span class="pre">gdbm</span></code> 对象。</p>
<dl class="field-list simple">
<dt class="field-odd">参数<span class="colon">:</span></dt>
<dd class="field-odd"><ul class="simple">
<li><p><strong>filename</strong> (<a class="reference internal" href="../glossary.xhtml#term-path-like-object"><span class="xref std std-term">path-like object</span></a>) -- 要打开的数据库文件。</p></li>
<li><p><strong>flag</strong> (<a class="reference internal" href="stdtypes.xhtml#str" title="str"><em>str</em></a>) -- <ul>
<li><p><code class="docutils literal notranslate"><span class="pre">'r'</span></code> (default): Open existing database for reading only.</p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">'w'</span></code>: Open existing database for reading and writing.</p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">'c'</span></code>: Open database for reading and writing, creating it if it doesn't exist.</p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">'n'</span></code>: Always create a new, empty database, open for reading and writing.</p></li>
</ul>
<p>可以添加下列额外字符来控制数据库的打开方式：</p>
<ul>
<li><p><code class="docutils literal notranslate"><span class="pre">'f'</span></code>: 以快速模式打开数据库。 对数据库的写入将不是同步的。</p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">'s'</span></code>: 同步模式。 对数据库的修改将立即写入到文件。</p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">'u'</span></code>: 不锁定数据库。</p></li>
</ul>
<p>并非所有旗标都对所有 GDBM 版本可用。 请参阅 <a class="reference internal" href="#dbm.gnu.open_flags" title="dbm.gnu.open_flags"><code class="xref py py-data docutils literal notranslate"><span class="pre">open_flags</span></code></a> 成员获取受支持旗标字符的列表。</p>
</p></li>
<li><p><strong>mode</strong> (<a class="reference internal" href="functions.xhtml#int" title="int"><em>int</em></a>) -- The Unix file access mode of the file (default: octal <code class="docutils literal notranslate"><span class="pre">0o666</span></code>),
used only when the database has to be created.</p></li>
</ul>
</dd>
<dt class="field-even">抛出<span class="colon">:</span></dt>
<dd class="field-even"><p><a class="reference internal" href="#dbm.gnu.error" title="dbm.gnu.error"><strong>error</strong></a> -- 如果传入了不可用的 <em>flag</em> 参数。</p>
</dd>
</dl>
<div class="versionchanged">
<p><span class="versionmodified changed">在 3.11 版本发生变更: </span><em>filename</em> 接受一个 <a class="reference internal" href="../glossary.xhtml#term-path-like-object"><span class="xref std std-term">path-like object</span></a>。</p>
</div>
<dl class="py data">
<dt class="sig sig-object py" id="dbm.gnu.open_flags">
<span class="sig-prename descclassname"><span class="pre">dbm.gnu.</span></span><span class="sig-name descname"><span class="pre">open_flags</span></span></dt>
<dd><p>由 <a class="reference internal" href="#dbm.gnu.open" title="dbm.gnu.open"><code class="xref py py-meth docutils literal notranslate"><span class="pre">open()</span></code></a> 的 <em>flag</em> 形参所支持的字符组成的字符串。</p>
</dd></dl>

<p><code class="xref py py-class docutils literal notranslate"><span class="pre">gdbm</span></code> 对象的行为类似于 <a class="reference internal" href="../glossary.xhtml#term-mapping"><span class="xref std std-term">映射</span></a>，但不支持 <code class="xref py py-meth docutils literal notranslate"><span class="pre">items()</span></code> 和 <code class="xref py py-meth docutils literal notranslate"><span class="pre">values()</span></code> 方法。 还提供了以下方法：</p>
<dl class="py method">
<dt class="sig sig-object py" id="dbm.gnu.gdbm.firstkey">
<span class="sig-prename descclassname"><span class="pre">gdbm.</span></span><span class="sig-name descname"><span class="pre">firstkey</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>可以使用此方法和 <a class="reference internal" href="#dbm.gnu.gdbm.nextkey" title="dbm.gnu.gdbm.nextkey"><code class="xref py py-meth docutils literal notranslate"><span class="pre">nextkey()</span></code></a> 方法循环遍历数据库中的每个键。 遍历的顺序是按照 GDBM 的内部哈希值，而不会根据键的值排序。 此方法将返回起始的键。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="dbm.gnu.gdbm.nextkey">
<span class="sig-prename descclassname"><span class="pre">gdbm.</span></span><span class="sig-name descname"><span class="pre">nextkey</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">key</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>在遍历中返回 <em>key</em> 之后的的下一个键。 以下代码将打印数据库 <code class="docutils literal notranslate"><span class="pre">db</span></code> 中的每个键，而不会在内存中创建一个包含所有键的列表:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="n">k</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="n">firstkey</span><span class="p">()</span>
<span class="k">while</span> <span class="n">k</span> <span class="ow">is</span> <span class="ow">not</span> <span class="kc">None</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">k</span><span class="p">)</span>
    <span class="n">k</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="n">nextkey</span><span class="p">(</span><span class="n">k</span><span class="p">)</span>
</pre></div>
</div>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="dbm.gnu.gdbm.reorganize">
<span class="sig-prename descclassname"><span class="pre">gdbm.</span></span><span class="sig-name descname"><span class="pre">reorganize</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>如果你进行了大量删除操作并且想要缩减 GDBM 文件所使用的空间，此例程可将可重新组织数据库。 除非使用此重组功能否则 <code class="xref py py-class docutils literal notranslate"><span class="pre">gdbm</span></code> 对象不会缩减数据库文件大小；在其他情况下，被删除的文件空间将会保留并在添加新的 (键, 值) 对时被重用。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="dbm.gnu.gdbm.sync">
<span class="sig-prename descclassname"><span class="pre">gdbm.</span></span><span class="sig-name descname"><span class="pre">sync</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>当以快速模式打开数据库时，此方法会将任何未写入数据强制写入磁盘。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="dbm.gnu.gdbm.close">
<span class="sig-prename descclassname"><span class="pre">gdbm.</span></span><span class="sig-name descname"><span class="pre">close</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>关闭 GDBM 数据库。</p>
</dd></dl>

</dd></dl>

</section>
<section id="module-dbm.ndbm">
<span id="dbm-ndbm-new-database-manager"></span><h2><a class="reference internal" href="#module-dbm.ndbm" title="dbm.ndbm: The New Database Manager (Unix)"><code class="xref py py-mod docutils literal notranslate"><span class="pre">dbm.ndbm</span></code></a> --- 新数据库管理器</h2>
<p><strong>源代码:</strong> <a class="reference external" href="https://github.com/python/cpython/tree/3.12/Lib/dbm/ndbm.py">Lib/dbm/ndbm.py</a><span class="link-target"> [https://github.com/python/cpython/tree/3.12/Lib/dbm/ndbm.py]</span></p>
<hr class="docutils" />
<p><a class="reference internal" href="#module-dbm.ndbm" title="dbm.ndbm: The New Database Manager (Unix)"><code class="xref py py-mod docutils literal notranslate"><span class="pre">dbm.ndbm</span></code></a> 模块提供了对 <abbr title="New Database Manager">NDBM</abbr> 库的接口。 此模块可与 &quot;经典&quot; NDBM 接口或 <abbr title="GNU dbm">GDBM</abbr> 兼容接口配合使用。</p>
<div class="admonition note">
<p class="admonition-title">备注</p>
<p>由 <a class="reference internal" href="#module-dbm.gnu" title="dbm.gnu: GNU database manager (Unix)"><code class="xref py py-mod docutils literal notranslate"><span class="pre">dbm.gnu</span></code></a> 和 <a class="reference internal" href="#module-dbm.ndbm" title="dbm.ndbm: The New Database Manager (Unix)"><code class="xref py py-mod docutils literal notranslate"><span class="pre">dbm.ndbm</span></code></a> 创建的文件格式是不兼容的因而无法互换使用。</p>
</div>
<div class="admonition warning">
<p class="admonition-title">警告</p>
<p>作为 macOS 的组成部分提供的 NDBM 库对值的大小有一个未写入文档的限制，当存储的值大于此限制时可能会导致数据库文件损坏。 读取这种已损坏的文件可能会导致硬崩溃（段错误）。</p>
</div>
<dl class="py exception">
<dt class="sig sig-object py" id="dbm.ndbm.error">
<em class="property"><span class="pre">exception</span><span class="w"> </span></em><span class="sig-prename descclassname"><span class="pre">dbm.ndbm.</span></span><span class="sig-name descname"><span class="pre">error</span></span></dt>
<dd><p>针对 <a class="reference internal" href="#module-dbm.ndbm" title="dbm.ndbm: The New Database Manager (Unix)"><code class="xref py py-mod docutils literal notranslate"><span class="pre">dbm.ndbm</span></code></a> 专属错误例如 I/O 错误引发。 <a class="reference internal" href="exceptions.xhtml#KeyError" title="KeyError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">KeyError</span></code></a> 的引发则针对一般映射错误例如指定了不正确的键。</p>
</dd></dl>

<dl class="py data">
<dt class="sig sig-object py" id="dbm.ndbm.library">
<span class="sig-prename descclassname"><span class="pre">dbm.ndbm.</span></span><span class="sig-name descname"><span class="pre">library</span></span></dt>
<dd><p>所使用的 NDBM 实现库的名称。</p>
</dd></dl>

<dl class="py function">
<dt class="sig sig-object py" id="dbm.ndbm.open">
<span class="sig-prename descclassname"><span class="pre">dbm.ndbm.</span></span><span class="sig-name descname"><span class="pre">open</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">filename</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">flag</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">'r'</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">mode</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">0o666</span></span></em>, <em class="sig-param"><span class="o"><span class="pre">/</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>打开 NDBM 数据库并返回一个 <code class="xref py py-class docutils literal notranslate"><span class="pre">ndbm</span></code> 对象。</p>
<dl class="field-list simple">
<dt class="field-odd">参数<span class="colon">:</span></dt>
<dd class="field-odd"><ul class="simple">
<li><p><strong>filename</strong> (<a class="reference internal" href="../glossary.xhtml#term-path-like-object"><span class="xref std std-term">path-like object</span></a>) -- 数据库文件的基本名（不带 <code class="file docutils literal notranslate"><span class="pre">.dir</span></code> 或 <code class="file docutils literal notranslate"><span class="pre">.pag</span></code> 扩展名）。</p></li>
<li><p><strong>flag</strong> (<a class="reference internal" href="stdtypes.xhtml#str" title="str"><em>str</em></a>) -- <ul>
<li><p><code class="docutils literal notranslate"><span class="pre">'r'</span></code> (default): Open existing database for reading only.</p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">'w'</span></code>: Open existing database for reading and writing.</p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">'c'</span></code>: Open database for reading and writing, creating it if it doesn't exist.</p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">'n'</span></code>: Always create a new, empty database, open for reading and writing.</p></li>
</ul>
</p></li>
<li><p><strong>mode</strong> (<a class="reference internal" href="functions.xhtml#int" title="int"><em>int</em></a>) -- The Unix file access mode of the file (default: octal <code class="docutils literal notranslate"><span class="pre">0o666</span></code>),
used only when the database has to be created.</p></li>
</ul>
</dd>
</dl>
<p><code class="xref py py-class docutils literal notranslate"><span class="pre">ndbm</span></code> 对象的行为类似于 <a class="reference internal" href="../glossary.xhtml#term-mapping"><span class="xref std std-term">映射</span></a>，但不支持 <code class="xref py py-meth docutils literal notranslate"><span class="pre">items()</span></code> 和 <code class="xref py py-meth docutils literal notranslate"><span class="pre">values()</span></code> 方法。 还提供了以下方法：</p>
<div class="versionchanged">
<p><span class="versionmodified changed">在 3.11 版本发生变更: </span>接受 <a class="reference internal" href="../glossary.xhtml#term-path-like-object"><span class="xref std std-term">path-like object</span></a> 作为文件名。</p>
</div>
<dl class="py method">
<dt class="sig sig-object py" id="dbm.ndbm.ndbm.close">
<span class="sig-prename descclassname"><span class="pre">ndbm.</span></span><span class="sig-name descname"><span class="pre">close</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>关闭 NDBM 数据库。</p>
</dd></dl>

</dd></dl>

</section>
<section id="module-dbm.dumb">
<span id="dbm-dumb-portable-dbm-implementation"></span><h2><a class="reference internal" href="#module-dbm.dumb" title="dbm.dumb: Portable implementation of the simple DBM interface."><code class="xref py py-mod docutils literal notranslate"><span class="pre">dbm.dumb</span></code></a> --- 便携式 DBM 实现</h2>
<p><strong>源代码:</strong> <a class="reference external" href="https://github.com/python/cpython/tree/3.12/Lib/dbm/dumb.py">Lib/dbm/dumb.py</a><span class="link-target"> [https://github.com/python/cpython/tree/3.12/Lib/dbm/dumb.py]</span></p>
<div class="admonition note" id="index-0">
<p class="admonition-title">备注</p>
<p><a class="reference internal" href="#module-dbm.dumb" title="dbm.dumb: Portable implementation of the simple DBM interface."><code class="xref py py-mod docutils literal notranslate"><span class="pre">dbm.dumb</span></code></a> 模块的目的是在更健壮的模块不可用时作为 <a class="reference internal" href="#module-dbm" title="dbm: Interfaces to various Unix &quot;database&quot; formats."><code class="xref py py-mod docutils literal notranslate"><span class="pre">dbm</span></code></a> 模块的最终回退项。 <a class="reference internal" href="#module-dbm.dumb" title="dbm.dumb: Portable implementation of the simple DBM interface."><code class="xref py py-mod docutils literal notranslate"><span class="pre">dbm.dumb</span></code></a> 不是为高速运行而编写的，也不像其他数据库模块一样被经常使用。</p>
</div>
<hr class="docutils" />
<p><a class="reference internal" href="#module-dbm.dumb" title="dbm.dumb: Portable implementation of the simple DBM interface."><code class="xref py py-mod docutils literal notranslate"><span class="pre">dbm.dumb</span></code></a> 模块提供了一个完全以 Python 编写的持久化 <a class="reference internal" href="stdtypes.xhtml#dict" title="dict"><code class="xref py py-class docutils literal notranslate"><span class="pre">dict</span></code></a> 型接口。 不同于其他 <a class="reference internal" href="#module-dbm" title="dbm: Interfaces to various Unix &quot;database&quot; formats."><code class="xref py py-mod docutils literal notranslate"><span class="pre">dbm</span></code></a> 后端，例如 <a class="reference internal" href="#module-dbm.gnu" title="dbm.gnu: GNU database manager (Unix)"><code class="xref py py-mod docutils literal notranslate"><span class="pre">dbm.gnu</span></code></a>，它不需要外部库。</p>
<p><code class="xref py py-mod docutils literal notranslate"><span class="pre">dbm.dumb</span></code> 模块定义了以下对象：</p>
<dl class="py exception">
<dt class="sig sig-object py" id="dbm.dumb.error">
<em class="property"><span class="pre">exception</span><span class="w"> </span></em><span class="sig-prename descclassname"><span class="pre">dbm.dumb.</span></span><span class="sig-name descname"><span class="pre">error</span></span></dt>
<dd><p>针对 <a class="reference internal" href="#module-dbm.dumb" title="dbm.dumb: Portable implementation of the simple DBM interface."><code class="xref py py-mod docutils literal notranslate"><span class="pre">dbm.dumb</span></code></a> 专属错误例如 I/O 错误引发。  <a class="reference internal" href="exceptions.xhtml#KeyError" title="KeyError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">KeyError</span></code></a> 的引发则针对一般映射例如指定了不正确的键。</p>
</dd></dl>

<dl class="py function">
<dt class="sig sig-object py" id="dbm.dumb.open">
<span class="sig-prename descclassname"><span class="pre">dbm.dumb.</span></span><span class="sig-name descname"><span class="pre">open</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">filename</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">flag</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">'c'</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">mode</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">0o666</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>打开一个 <code class="xref py py-mod docutils literal notranslate"><span class="pre">dbm.dumb</span></code> 数据库。 返回的数据库对象的行为类似于 <a class="reference internal" href="../glossary.xhtml#term-mapping"><span class="xref std std-term">mapping</span></a>，并额外提供 <a class="reference internal" href="#dbm.dumb.dumbdbm.sync" title="dbm.dumb.dumbdbm.sync"><code class="xref py py-meth docutils literal notranslate"><span class="pre">sync()</span></code></a> 和 <a class="reference internal" href="#dbm.dumb.dumbdbm.close" title="dbm.dumb.dumbdbm.close"><code class="xref py py-meth docutils literal notranslate"><span class="pre">close()</span></code></a> 等方法。</p>
<dl class="field-list simple">
<dt class="field-odd">参数<span class="colon">:</span></dt>
<dd class="field-odd"><ul class="simple">
<li><p><strong>filename</strong> -- 数据库文件的基本名（不带扩展名）。 新数据库将会创建以下文件:  - <code class="file docutils literal notranslate"><em><span class="pre">filename</span></em><span class="pre">.dat</span></code> - <code class="file docutils literal notranslate"><em><span class="pre">filename</span></em><span class="pre">.dir</span></code></p></li>
<li><p><strong>flag</strong> (<a class="reference internal" href="stdtypes.xhtml#str" title="str"><em>str</em></a>) -- <ul>
<li><p><code class="docutils literal notranslate"><span class="pre">'r'</span></code>: Open existing database for reading only.</p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">'w'</span></code>: Open existing database for reading and writing.</p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">'c'</span></code> (default): Open database for reading and writing, creating it if it doesn't exist.</p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">'n'</span></code>: Always create a new, empty database, open for reading and writing.</p></li>
</ul>
</p></li>
<li><p><strong>mode</strong> (<a class="reference internal" href="functions.xhtml#int" title="int"><em>int</em></a>) -- The Unix file access mode of the file (default: octal <code class="docutils literal notranslate"><span class="pre">0o666</span></code>),
used only when the database has to be created.</p></li>
</ul>
</dd>
</dl>
<div class="admonition warning">
<p class="admonition-title">警告</p>
<p>当载入包含足够巨大/复杂条目的数据库时有可能导致 Python 解释器的崩溃，这是由于 Python AST 编译器有栈深度限制。</p>
</div>
<div class="versionchanged">
<p><span class="versionmodified changed">在 3.5 版本发生变更: </span><a class="reference internal" href="#dbm.dumb.open" title="dbm.dumb.open"><code class="xref py py-func docutils literal notranslate"><span class="pre">open()</span></code></a> 在 <em>flag</em> 为 <code class="docutils literal notranslate"><span class="pre">'n'</span></code> 时将总是创建一个新数据库。</p>
</div>
<div class="versionchanged">
<p><span class="versionmodified changed">在 3.8 版本发生变更: </span>如果 <em>flag</em> 为 <code class="docutils literal notranslate"><span class="pre">'r'</span></code> 则打开的数据库将为只读的。 如果 <em>flag</em> 为 <code class="docutils literal notranslate"><span class="pre">'r'</span></code> 或 <code class="docutils literal notranslate"><span class="pre">'w'</span></code> 则当数据库不存在时不会自动创建它。</p>
</div>
<div class="versionchanged">
<p><span class="versionmodified changed">在 3.11 版本发生变更: </span><em>filename</em> 接受一个 <a class="reference internal" href="../glossary.xhtml#term-path-like-object"><span class="xref std std-term">path-like object</span></a>。</p>
</div>
<p>在 <a class="reference internal" href="collections.abc.xhtml#collections.abc.MutableMapping" title="collections.abc.MutableMapping"><code class="xref py py-class docutils literal notranslate"><span class="pre">collections.abc.MutableMapping</span></code></a> 类所提供的方法之外，还提供了以下方法：</p>
<dl class="py method">
<dt class="sig sig-object py" id="dbm.dumb.dumbdbm.sync">
<span class="sig-prename descclassname"><span class="pre">dumbdbm.</span></span><span class="sig-name descname"><span class="pre">sync</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>同步磁盘上的目录和数据文件。 此方法会由 <code class="xref py py-meth docutils literal notranslate"><span class="pre">Shelve.sync()</span></code> 方法来调用。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="dbm.dumb.dumbdbm.close">
<span class="sig-prename descclassname"><span class="pre">dumbdbm.</span></span><span class="sig-name descname"><span class="pre">close</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>关闭数据库。</p>
</dd></dl>

</dd></dl>

</section>
</section>


            <div class="clearer"></div>
          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>