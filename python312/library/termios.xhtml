<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta name="viewport" content="width=device-width, initial-scale=1" />
<meta property="og:title" content="termios --- POSIX 风格的 tty 控制" />
<meta property="og:type" content="website" />
<meta property="og:url" content="https://docs.python.org/3/library/termios.xhtml" />
<meta property="og:site_name" content="Python documentation" />
<meta property="og:description" content="此模块提供了针对tty I/O 控制的 POSIX 调用的接口。 有关此类调用的完整描述，请参阅 termios(3)[https://manpages.debian.org/termios(3)] Unix 指南页。 它仅在当安装时配置了支持 POSIX termios 风格的 tty I/O 控制的 Unix 版本上可用。 可用性: Unix。 此模块中的所有函数均接受一个文件描述符 f..." />
<meta property="og:image" content="https://docs.python.org/3/_static/og-image.png" />
<meta property="og:image:alt" content="Python documentation" />
<meta name="description" content="此模块提供了针对tty I/O 控制的 POSIX 调用的接口。 有关此类调用的完整描述，请参阅 termios(3)[https://manpages.debian.org/termios(3)] Unix 指南页。 它仅在当安装时配置了支持 POSIX termios 风格的 tty I/O 控制的 Unix 版本上可用。 可用性: Unix。 此模块中的所有函数均接受一个文件描述符 f..." />
<meta property="og:image:width" content="200" />
<meta property="og:image:height" content="200" />
<meta name="theme-color" content="#3776ab" />

    <title>termios --- POSIX 风格的 tty 控制</title>
    <link rel="stylesheet" type="text/css" href="../_static/pygments.css" />
    <link rel="stylesheet" type="text/css" href="../_static/epub.css" />
    <link rel="canonical" href="https://docs.python.org/3/library/termios.html" />
    
      
    

    
    <style>
      @media only screen {
        table.full-width-table {
            width: 100%;
        }
      }
    </style>
 

  </head><body>


    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <section id="module-termios">
<span id="termios-posix-style-tty-control"></span><h1><code class="xref py py-mod docutils literal notranslate"><span class="pre">termios</span></code> --- POSIX 风格的 tty 控制</h1>
<hr class="docutils" id="index-0" />
<p>此模块提供了针对tty I/O 控制的 POSIX 调用的接口。 有关此类调用的完整描述，请参阅 <em class="manpage"><a class="manpage reference external" href="https://manpages.debian.org/termios(3)">termios(3)</a><span class="link-target"> [https://manpages.debian.org/termios(3)]</span></em> Unix 指南页。 它仅在当安装时配置了支持 POSIX <em>termios</em> 风格的 tty I/O 控制的 Unix 版本上可用。</p>
<div class="availability docutils container">
<p><a class="reference internal" href="intro.xhtml#availability"><span class="std std-ref">可用性</span></a>: Unix。</p>
</div>
<p>此模块中的所有函数均接受一个文件描述符 <em>fd</em> 作为第一个参数。 这可以是一个整数形式的文件描述符，例如 <code class="docutils literal notranslate"><span class="pre">sys.stdin.fileno()</span></code> 所返回的对象，或是一个 <a class="reference internal" href="../glossary.xhtml#term-file-object"><span class="xref std std-term">file object</span></a>，例如 <code class="docutils literal notranslate"><span class="pre">sys.stdin</span></code> 本身。</p>
<p>这个模块还定义了与此处所提供的函数一起使用的所有必要的常量；这些常量与它们在 C 中的对应常量同名。 请参考你的系统文档了解有关如何使用这些终端控制接口的更多信息。</p>
<p>这个模块定义了以下函数：</p>
<dl class="py function">
<dt class="sig sig-object py" id="termios.tcgetattr">
<span class="sig-prename descclassname"><span class="pre">termios.</span></span><span class="sig-name descname"><span class="pre">tcgetattr</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">fd</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>对于文件描述符 <em>fd</em> 返回一个包含 tty 属性的列表，形式如下: <code class="docutils literal notranslate"><span class="pre">[iflag,</span> <span class="pre">oflag,</span> <span class="pre">cflag,</span> <span class="pre">lflag,</span> <span class="pre">ispeed,</span> <span class="pre">ospeed,</span> <span class="pre">cc]</span></code>，其中 <em>cc</em> 为一个包含 tty 特殊字符的列表（每一项都是长度为 1 的字符串，索引号为 <code class="xref py py-const docutils literal notranslate"><span class="pre">VMIN</span></code> 和 <code class="xref py py-const docutils literal notranslate"><span class="pre">VTIME</span></code> 的项除外，这些字段如有定义则应为整数）。 对旗标和速度以及 <em>cc</em> 数组中索引的解读必须使用在 <a class="reference internal" href="#module-termios" title="termios: POSIX style tty control. (Unix)"><code class="xref py py-mod docutils literal notranslate"><span class="pre">termios</span></code></a> 模块中定义的符号常量来完成。</p>
</dd></dl>

<dl class="py function">
<dt class="sig sig-object py" id="termios.tcsetattr">
<span class="sig-prename descclassname"><span class="pre">termios.</span></span><span class="sig-name descname"><span class="pre">tcsetattr</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">fd</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">when</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">attributes</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>根据 <em>attributes</em> 为文件描述符 <em>fd</em> 设置 tty 的属性，它是一个类似于 <a class="reference internal" href="#termios.tcgetattr" title="termios.tcgetattr"><code class="xref py py-func docutils literal notranslate"><span class="pre">tcgetattr()</span></code></a> 的返回值的列表。 <em>when</em> 参数决定这些属性在何时被更改：</p>
<dl class="py data">
<dt class="sig sig-object py" id="termios.TCSANOW">
<span class="sig-prename descclassname"><span class="pre">termios.</span></span><span class="sig-name descname"><span class="pre">TCSANOW</span></span></dt>
<dd><p>立即更改属性。</p>
</dd></dl>

<dl class="py data">
<dt class="sig sig-object py" id="termios.TCSADRAIN">
<span class="sig-prename descclassname"><span class="pre">termios.</span></span><span class="sig-name descname"><span class="pre">TCSADRAIN</span></span></dt>
<dd><p>传输完所有队列输出后再更改属性。</p>
</dd></dl>

<dl class="py data">
<dt class="sig sig-object py" id="termios.TCSAFLUSH">
<span class="sig-prename descclassname"><span class="pre">termios.</span></span><span class="sig-name descname"><span class="pre">TCSAFLUSH</span></span></dt>
<dd><p>传输完所有队列输出并丢弃所有队列输入后再更改属性。</p>
</dd></dl>

</dd></dl>

<dl class="py function">
<dt class="sig sig-object py" id="termios.tcsendbreak">
<span class="sig-prename descclassname"><span class="pre">termios.</span></span><span class="sig-name descname"><span class="pre">tcsendbreak</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">fd</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">duration</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>在文件描述符 <em>fd</em> 上发送一个中断。 <em>duration</em> 为零表示发送时长为 0.25--0.5 秒的中断；<em>duration</em> 非零值的含义取决于具体系统。</p>
</dd></dl>

<dl class="py function">
<dt class="sig sig-object py" id="termios.tcdrain">
<span class="sig-prename descclassname"><span class="pre">termios.</span></span><span class="sig-name descname"><span class="pre">tcdrain</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">fd</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>进入等待状态直到写入文件描述符 <em>fd</em> 的所有输出都传送完毕。</p>
</dd></dl>

<dl class="py function">
<dt class="sig sig-object py" id="termios.tcflush">
<span class="sig-prename descclassname"><span class="pre">termios.</span></span><span class="sig-name descname"><span class="pre">tcflush</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">fd</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">queue</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>在文件描述符 <em>fd</em> 上丢弃队列数据。 <em>queue</em> 选择器指定哪个队列: <code class="xref py py-const docutils literal notranslate"><span class="pre">TCIFLUSH</span></code> 表示输入队列，<code class="xref py py-const docutils literal notranslate"><span class="pre">TCOFLUSH</span></code> 表示输出队列，或 <code class="xref py py-const docutils literal notranslate"><span class="pre">TCIOFLUSH</span></code> 表示两个队列同时。</p>
</dd></dl>

<dl class="py function">
<dt class="sig sig-object py" id="termios.tcflow">
<span class="sig-prename descclassname"><span class="pre">termios.</span></span><span class="sig-name descname"><span class="pre">tcflow</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">fd</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">action</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>在文件描述符 <em>fd</em> 上挂起一战恢复输入或输出。 <em>action</em> 参数可以为 <code class="xref py py-const docutils literal notranslate"><span class="pre">TCOOFF</span></code> 表示挂起输出，<code class="xref py py-const docutils literal notranslate"><span class="pre">TCOON</span></code> 表示重启输出，<code class="xref py py-const docutils literal notranslate"><span class="pre">TCIOFF</span></code> 表示挂起输入，或 <code class="xref py py-const docutils literal notranslate"><span class="pre">TCION</span></code> 表示重启输入。</p>
</dd></dl>

<dl class="py function">
<dt class="sig sig-object py" id="termios.tcgetwinsize">
<span class="sig-prename descclassname"><span class="pre">termios.</span></span><span class="sig-name descname"><span class="pre">tcgetwinsize</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">fd</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>返回一个包含文件描述符 <em>fd</em> 的 tty 窗口大小的元组 <code class="docutils literal notranslate"><span class="pre">(ws_row,</span> <span class="pre">ws_col)</span></code>。 需要 <code class="xref py py-const docutils literal notranslate"><span class="pre">termios.TIOCGWINSZ</span></code> 或 <code class="xref py py-const docutils literal notranslate"><span class="pre">termios.TIOCGSIZE</span></code>。</p>
<div class="versionadded">
<p><span class="versionmodified added">Added in version 3.11.</span></p>
</div>
</dd></dl>

<dl class="py function">
<dt class="sig sig-object py" id="termios.tcsetwinsize">
<span class="sig-prename descclassname"><span class="pre">termios.</span></span><span class="sig-name descname"><span class="pre">tcsetwinsize</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">fd</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">winsize</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>将文件描述符 <em>fd</em> 的 tty 窗口大小设置为 <em>winsize</em>，这是一个包含两项的元组 <code class="docutils literal notranslate"><span class="pre">(ws_row,</span> <span class="pre">ws_col)</span></code>，如 <a class="reference internal" href="#termios.tcgetwinsize" title="termios.tcgetwinsize"><code class="xref py py-func docutils literal notranslate"><span class="pre">tcgetwinsize()</span></code></a> 所返回的一样。 要求至少定义了 (<code class="xref py py-const docutils literal notranslate"><span class="pre">termios.TIOCGWINSZ</span></code>, <code class="xref py py-const docutils literal notranslate"><span class="pre">termios.TIOCSWINSZ</span></code>); (<code class="xref py py-const docutils literal notranslate"><span class="pre">termios.TIOCGSIZE</span></code>, <code class="xref py py-const docutils literal notranslate"><span class="pre">termios.TIOCSSIZE</span></code>) 对之一。</p>
<div class="versionadded">
<p><span class="versionmodified added">Added in version 3.11.</span></p>
</div>
</dd></dl>

<div class="admonition seealso">
<p class="admonition-title">参见</p>
<dl class="simple">
<dt>模块 <a class="reference internal" href="tty.xhtml#module-tty" title="tty: Utility functions that perform common terminal control operations. (Unix)"><code class="xref py py-mod docutils literal notranslate"><span class="pre">tty</span></code></a></dt><dd><p>针对常用终端控制操作的便捷函数。</p>
</dd>
</dl>
</div>
<section id="example">
<span id="termios-example"></span><h2>示例</h2>
<p>这个函数可提示输入密码并且关闭回显。 请注意其采取的技巧是使用一个单独的 <a class="reference internal" href="#termios.tcgetattr" title="termios.tcgetattr"><code class="xref py py-func docutils literal notranslate"><span class="pre">tcgetattr()</span></code></a> 调用和一个 <a class="reference internal" href="../reference/compound_stmts.xhtml#try"><code class="xref std std-keyword docutils literal notranslate"><span class="pre">try</span></code></a> ... <a class="reference internal" href="../reference/compound_stmts.xhtml#finally"><code class="xref std std-keyword docutils literal notranslate"><span class="pre">finally</span></code></a> 语句来确保旧的 tty 属性无论在何种情况下都会被原样保存:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="k">def</span> <span class="nf">getpass</span><span class="p">(</span><span class="n">prompt</span><span class="o">=</span><span class="s2">&quot;Password: &quot;</span><span class="p">):</span>
    <span class="kn">import</span> <span class="nn">termios</span><span class="o">,</span> <span class="nn">sys</span>
    <span class="n">fd</span> <span class="o">=</span> <span class="n">sys</span><span class="o">.</span><span class="n">stdin</span><span class="o">.</span><span class="n">fileno</span><span class="p">()</span>
    <span class="n">old</span> <span class="o">=</span> <span class="n">termios</span><span class="o">.</span><span class="n">tcgetattr</span><span class="p">(</span><span class="n">fd</span><span class="p">)</span>
    <span class="n">new</span> <span class="o">=</span> <span class="n">termios</span><span class="o">.</span><span class="n">tcgetattr</span><span class="p">(</span><span class="n">fd</span><span class="p">)</span>
    <span class="n">new</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span> <span class="o">=</span> <span class="n">new</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span> <span class="o">&amp;</span> <span class="o">~</span><span class="n">termios</span><span class="o">.</span><span class="n">ECHO</span>          <span class="c1"># lflags</span>
    <span class="k">try</span><span class="p">:</span>
        <span class="n">termios</span><span class="o">.</span><span class="n">tcsetattr</span><span class="p">(</span><span class="n">fd</span><span class="p">,</span> <span class="n">termios</span><span class="o">.</span><span class="n">TCSADRAIN</span><span class="p">,</span> <span class="n">new</span><span class="p">)</span>
        <span class="n">passwd</span> <span class="o">=</span> <span class="nb">input</span><span class="p">(</span><span class="n">prompt</span><span class="p">)</span>
    <span class="k">finally</span><span class="p">:</span>
        <span class="n">termios</span><span class="o">.</span><span class="n">tcsetattr</span><span class="p">(</span><span class="n">fd</span><span class="p">,</span> <span class="n">termios</span><span class="o">.</span><span class="n">TCSADRAIN</span><span class="p">,</span> <span class="n">old</span><span class="p">)</span>
    <span class="k">return</span> <span class="n">passwd</span>
</pre></div>
</div>
</section>
</section>


            <div class="clearer"></div>
          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>