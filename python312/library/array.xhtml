<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta name="viewport" content="width=device-width, initial-scale=1" />
<meta property="og:title" content="array --- 高效的数字值数组" />
<meta property="og:type" content="website" />
<meta property="og:url" content="https://docs.python.org/3/library/array.xhtml" />
<meta property="og:site_name" content="Python documentation" />
<meta property="og:description" content="此模块定义了一种对象类型，可以紧凑地表示由基本值（字符、整数、浮点数）组成的数组。数组是序列类型，其行为与列表非常相似，不同之处在于其中存储的对象类型是受限的，在数组对象创建时用单个字符的 类型码 来指定。已定义的类型码如下：,,,,, 类型码, C 类型, Python 类型, 以字节为单位的最小大小, 备注,,,'b', signed char, int, 1,,,'B', unsign..." />
<meta property="og:image" content="https://docs.python.org/3/_static/og-image.png" />
<meta property="og:image:alt" content="Python documentation" />
<meta name="description" content="此模块定义了一种对象类型，可以紧凑地表示由基本值（字符、整数、浮点数）组成的数组。数组是序列类型，其行为与列表非常相似，不同之处在于其中存储的对象类型是受限的，在数组对象创建时用单个字符的 类型码 来指定。已定义的类型码如下：,,,,, 类型码, C 类型, Python 类型, 以字节为单位的最小大小, 备注,,,'b', signed char, int, 1,,,'B', unsign..." />
<meta property="og:image:width" content="200" />
<meta property="og:image:height" content="200" />
<meta name="theme-color" content="#3776ab" />

    <title>array --- 高效的数字值数组</title>
    <link rel="stylesheet" type="text/css" href="../_static/pygments.css" />
    <link rel="stylesheet" type="text/css" href="../_static/epub.css" />
    <link rel="canonical" href="https://docs.python.org/3/library/array.html" />
    
      
    

    
    <style>
      @media only screen {
        table.full-width-table {
            width: 100%;
        }
      }
    </style>
 

  </head><body>


    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <section id="module-array">
<span id="array-efficient-arrays-of-numeric-values"></span><h1><code class="xref py py-mod docutils literal notranslate"><span class="pre">array</span></code> --- 高效的数字值数组</h1>
<hr class="docutils" id="index-0" />
<p>此模块定义了一种对象类型，可以紧凑地表示由基本值（字符、整数、浮点数）组成的数组。数组是序列类型，其行为与列表非常相似，不同之处在于其中存储的对象类型是受限的，在数组对象创建时用单个字符的 <em class="dfn">类型码</em> 来指定。已定义的类型码如下：</p>
<table class="docutils align-default">
<thead>
<tr class="row-odd"><th class="head"><p>类型码</p></th>
<th class="head"><p>C 类型</p></th>
<th class="head"><p>Python 类型</p></th>
<th class="head"><p>以字节为单位的最小大小</p></th>
<th class="head"><p>备注</p></th>
</tr>
</thead>
<tbody>
<tr class="row-even"><td><p><code class="docutils literal notranslate"><span class="pre">'b'</span></code></p></td>
<td><p>signed char</p></td>
<td><p>int</p></td>
<td><p>1</p></td>
<td></td>
</tr>
<tr class="row-odd"><td><p><code class="docutils literal notranslate"><span class="pre">'B'</span></code></p></td>
<td><p>unsigned char</p></td>
<td><p>int</p></td>
<td><p>1</p></td>
<td></td>
</tr>
<tr class="row-even"><td><p><code class="docutils literal notranslate"><span class="pre">'u'</span></code></p></td>
<td><p>wchar_t</p></td>
<td><p>Unicode 字符</p></td>
<td><p>2</p></td>
<td><p>(1)</p></td>
</tr>
<tr class="row-odd"><td><p><code class="docutils literal notranslate"><span class="pre">'h'</span></code></p></td>
<td><p>signed short</p></td>
<td><p>int</p></td>
<td><p>2</p></td>
<td></td>
</tr>
<tr class="row-even"><td><p><code class="docutils literal notranslate"><span class="pre">'H'</span></code></p></td>
<td><p>unsigned short</p></td>
<td><p>int</p></td>
<td><p>2</p></td>
<td></td>
</tr>
<tr class="row-odd"><td><p><code class="docutils literal notranslate"><span class="pre">'i'</span></code></p></td>
<td><p>signed int</p></td>
<td><p>int</p></td>
<td><p>2</p></td>
<td></td>
</tr>
<tr class="row-even"><td><p><code class="docutils literal notranslate"><span class="pre">'I'</span></code></p></td>
<td><p>unsigned int</p></td>
<td><p>int</p></td>
<td><p>2</p></td>
<td></td>
</tr>
<tr class="row-odd"><td><p><code class="docutils literal notranslate"><span class="pre">'l'</span></code></p></td>
<td><p>signed long</p></td>
<td><p>int</p></td>
<td><p>4</p></td>
<td></td>
</tr>
<tr class="row-even"><td><p><code class="docutils literal notranslate"><span class="pre">'L'</span></code></p></td>
<td><p>unsigned long</p></td>
<td><p>int</p></td>
<td><p>4</p></td>
<td></td>
</tr>
<tr class="row-odd"><td><p><code class="docutils literal notranslate"><span class="pre">'q'</span></code></p></td>
<td><p>signed long long</p></td>
<td><p>int</p></td>
<td><p>8</p></td>
<td></td>
</tr>
<tr class="row-even"><td><p><code class="docutils literal notranslate"><span class="pre">'Q'</span></code></p></td>
<td><p>unsigned long long</p></td>
<td><p>int</p></td>
<td><p>8</p></td>
<td></td>
</tr>
<tr class="row-odd"><td><p><code class="docutils literal notranslate"><span class="pre">'f'</span></code></p></td>
<td><p>float</p></td>
<td><p>float</p></td>
<td><p>4</p></td>
<td></td>
</tr>
<tr class="row-even"><td><p><code class="docutils literal notranslate"><span class="pre">'d'</span></code></p></td>
<td><p>double</p></td>
<td><p>float</p></td>
<td><p>8</p></td>
<td></td>
</tr>
</tbody>
</table>
<p>注释：</p>
<ol class="arabic">
<li><p>可能为 16 位或 32 位，取决于具体的平台。</p>
<div class="versionchanged">
<p><span class="versionmodified changed">在 3.9 版本发生变更: </span><code class="docutils literal notranslate"><span class="pre">array('u')</span></code> 现在使用 <code class="xref c c-type docutils literal notranslate"><span class="pre">wchar_t</span></code> 作为 C 类型而不是已不建议使用的 <code class="docutils literal notranslate"><span class="pre">Py_UNICODE</span></code>。这个改变不会影响其行为，因为 <code class="docutils literal notranslate"><span class="pre">Py_UNICODE</span></code> 自 Python 3.3 起就是 <code class="xref c c-type docutils literal notranslate"><span class="pre">wchar_t</span></code> 的别名。</p>
</div>
<div class="deprecated-removed">
<p><span class="versionmodified">从 3.3 版起不建议使用，将在 4.0 版中移除.</span></p>
</div>
</li>
</ol>
<p>值的实际表示是由机器架构（严格说是由 C 实现）决定的。实际大小可以通过 <a class="reference internal" href="#array.array.itemsize" title="array.array.itemsize"><code class="xref py py-attr docutils literal notranslate"><span class="pre">array.itemsize</span></code></a> 属性来访问。</p>
<p>此模块定义了以下项目：</p>
<dl class="py data">
<dt class="sig sig-object py" id="array.typecodes">
<span class="sig-prename descclassname"><span class="pre">array.</span></span><span class="sig-name descname"><span class="pre">typecodes</span></span></dt>
<dd><p>一个由所有可用的类型码组成的字符串。</p>
</dd></dl>

<p>此模块定义了以下类型：</p>
<dl class="py class">
<dt class="sig sig-object py" id="array.array">
<em class="property"><span class="pre">class</span><span class="w"> </span></em><span class="sig-prename descclassname"><span class="pre">array.</span></span><span class="sig-name descname"><span class="pre">array</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">typecode</span></span></em><span class="optional">[</span>, <em class="sig-param"><span class="n"><span class="pre">initializer</span></span></em><span class="optional">]</span><span class="sig-paren">)</span></dt>
<dd><p>一个由 <em>typecode</em> 限定其条目的新数组，并能根据可选的 <em>initializer</em> 值来初始化。 该值必须是一个 <a class="reference internal" href="stdtypes.xhtml#bytes" title="bytes"><code class="xref py py-class docutils literal notranslate"><span class="pre">bytes</span></code></a> 或 <a class="reference internal" href="stdtypes.xhtml#bytearray" title="bytearray"><code class="xref py py-class docutils literal notranslate"><span class="pre">bytearray</span></code></a> 对象、Unicode 字符串或迭代适当类型的元素的可迭代对象。</p>
<p>如果给定了一个 <a class="reference internal" href="stdtypes.xhtml#bytes" title="bytes"><code class="xref py py-class docutils literal notranslate"><span class="pre">bytes</span></code></a> 或 <a class="reference internal" href="stdtypes.xhtml#bytearray" title="bytearray"><code class="xref py py-class docutils literal notranslate"><span class="pre">bytearray</span></code></a> 对象，则将初始化器传给新数组的 <a class="reference internal" href="#array.array.frombytes" title="array.array.frombytes"><code class="xref py py-meth docutils literal notranslate"><span class="pre">frombytes()</span></code></a> 方法；如果给定了一个 Unicode 字符串，则将初始化器会传给 <a class="reference internal" href="#array.array.fromunicode" title="array.array.fromunicode"><code class="xref py py-meth docutils literal notranslate"><span class="pre">fromunicode()</span></code></a> 方法；在其他情况下，则将初始化器的迭代器传给 <a class="reference internal" href="#array.array.extend" title="array.array.extend"><code class="xref py py-meth docutils literal notranslate"><span class="pre">extend()</span></code></a> 方法以向数组添加初始条目。</p>
<p>数组对象支持普通的序列操作如索引、切片、拼接和重复等。当使用切片赋值时，所赋的值必须为具有相同类型码的数组对象；所有其他情况都将引发 <a class="reference internal" href="exceptions.xhtml#TypeError" title="TypeError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">TypeError</span></code></a>。数组对象也实现了缓冲区接口，可以用于所有支持 <a class="reference internal" href="../glossary.xhtml#term-bytes-like-object"><span class="xref std std-term">类字节对象</span></a> 的场合。</p>
<p class="audit-hook">引发一个带参数 <code class="docutils literal notranslate"><span class="pre">typecode</span></code> 和 <code class="docutils literal notranslate"><span class="pre">initializer</span></code> 的 <a class="reference internal" href="sys.xhtml#auditing"><span class="std std-ref">审计事件</span></a> <code class="docutils literal notranslate"><span class="pre">array.__new__</span></code>。</p>
<dl class="py attribute">
<dt class="sig sig-object py" id="array.array.typecode">
<span class="sig-name descname"><span class="pre">typecode</span></span></dt>
<dd><p>在创建数组时使用的类型码字符。</p>
</dd></dl>

<dl class="py attribute">
<dt class="sig sig-object py" id="array.array.itemsize">
<span class="sig-name descname"><span class="pre">itemsize</span></span></dt>
<dd><p>内部表示中，单个数组项的长度。单位为字节。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="array.array.append">
<span class="sig-name descname"><span class="pre">append</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">x</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>添加一个值为 <em>x</em> 的新项到数组末尾。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="array.array.buffer_info">
<span class="sig-name descname"><span class="pre">buffer_info</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>返回一个元组 <code class="docutils literal notranslate"><span class="pre">(address,</span> <span class="pre">length)</span></code> 给出存放数组内容的内存缓冲区的当前地址和长度（以元素个数为单位）。以字节为单位的的内存缓冲区大小可通过 <code class="docutils literal notranslate"><span class="pre">array.buffer_info()[1]</span> <span class="pre">*</span> <span class="pre">array.itemsize</span></code> 来计算。工作在需要内存地址的底层（因此天然地不够安全）的 I/O 接口上时，这有时会有用，例如某些 <code class="xref c c-func docutils literal notranslate"><span class="pre">ioctl()</span></code> 操作。只要数组还存在，并且没有对其应用过改变长度的操作，则返回的数值就是有效的。</p>
<div class="admonition note">
<p class="admonition-title">备注</p>
<p>只有在使用以 C 或 C++ 编写的代码中的数组对象时，才能有效利用该信息，但此时，更合理的是，使用数组对象支持的缓冲区接口。因此，该方法的存在仅仅是为了向后兼容性，应避免在新代码中使用。缓冲区接口的文档参见 <a class="reference internal" href="../c-api/buffer.xhtml#bufferobjects"><span class="std std-ref">缓冲协议</span></a>。</p>
</div>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="array.array.byteswap">
<span class="sig-name descname"><span class="pre">byteswap</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>“字节对调”所有数组项。此方法只支持大小为 1, 2, 4 或 8 字节的值；对于其它类型的值将引发 <a class="reference internal" href="exceptions.xhtml#RuntimeError" title="RuntimeError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">RuntimeError</span></code></a>。当要从另一种字节顺序的机器生成的文件中读取数据时，它很有用。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="array.array.count">
<span class="sig-name descname"><span class="pre">count</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">x</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>返回 <em>x</em> 在数组中的出现次数。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="array.array.extend">
<span class="sig-name descname"><span class="pre">extend</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">iterable</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>将来自 <em>iterable</em> 的项添加到数组末尾。如果 <em>iterable</em> 是另一个数组，它必须具有 <em>完全</em> 相同的类型码；否则将引发 <a class="reference internal" href="exceptions.xhtml#TypeError" title="TypeError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">TypeError</span></code></a>。如果 <em>iterable</em> 不是一个数组，则它必须为可迭代对象且其元素的类型须为可添加到数组的适当类型。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="array.array.frombytes">
<span class="sig-name descname"><span class="pre">frombytes</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">buffer</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>添加来自 <a class="reference internal" href="../glossary.xhtml#term-bytes-like-object"><span class="xref std std-term">bytes-like object</span></a> 的条目，将其内容解读为由机器值组成的数组（就像是使用 <a class="reference internal" href="#array.array.fromfile" title="array.array.fromfile"><code class="xref py py-meth docutils literal notranslate"><span class="pre">fromfile()</span></code></a> 方法从文件中读取内容一样）。</p>
<div class="versionadded">
<p><span class="versionmodified added">Added in version 3.2: </span><code class="xref py py-meth docutils literal notranslate"><span class="pre">fromstring()</span></code> 被重命名为含义更准确的 <a class="reference internal" href="#array.array.frombytes" title="array.array.frombytes"><code class="xref py py-meth docutils literal notranslate"><span class="pre">frombytes()</span></code></a>。</p>
</div>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="array.array.fromfile">
<span class="sig-name descname"><span class="pre">fromfile</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">f</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">n</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>从 <a class="reference internal" href="../glossary.xhtml#term-file-object"><span class="xref std std-term">file object</span></a> <em>f</em> 中读取 <em>n</em> 项（视为机器值）并将它们添加到数组末尾。如果可用的项少于 <em>n</em> 项，则会引发 <a class="reference internal" href="exceptions.xhtml#EOFError" title="EOFError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">EOFError</span></code></a>，但可用的项仍然会被加进数组。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="array.array.fromlist">
<span class="sig-name descname"><span class="pre">fromlist</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">list</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>将来自列表的项添加到数组末尾。等价于 <code class="docutils literal notranslate"><span class="pre">for</span> <span class="pre">x</span> <span class="pre">in</span> <span class="pre">list:</span> <span class="pre">a.append(x)</span></code>，而不同之处在于，若发生类型错误，数组则不会被改变。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="array.array.fromunicode">
<span class="sig-name descname"><span class="pre">fromunicode</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">s</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>Extends this array with data from the given Unicode string.
The array must have type code <code class="docutils literal notranslate"><span class="pre">'u'</span></code>; otherwise a <a class="reference internal" href="exceptions.xhtml#ValueError" title="ValueError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">ValueError</span></code></a> is raised.
Use <code class="docutils literal notranslate"><span class="pre">array.frombytes(unicodestring.encode(enc))</span></code> to append Unicode data to an
array of some other type.</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="array.array.index">
<span class="sig-name descname"><span class="pre">index</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">x</span></span></em><span class="optional">[</span>, <em class="sig-param"><span class="n"><span class="pre">start</span></span></em><span class="optional">[</span>, <em class="sig-param"><span class="n"><span class="pre">stop</span></span></em><span class="optional">]</span><span class="optional">]</span><span class="sig-paren">)</span></dt>
<dd><p>返回以这样的方式找到的最小的 <em>i</em>：<em>i</em> 为数组中第一个 <em>x</em> 的下标。可选参数 <em>start</em> 和 <em>stop</em> 用于在数组的一个指定的子段中搜索 <em>x</em>。如果未找到 <em>x</em> 则会引发 <a class="reference internal" href="exceptions.xhtml#ValueError" title="ValueError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">ValueError</span></code></a>。</p>
<div class="versionchanged">
<p><span class="versionmodified changed">在 3.10 版本发生变更: </span>添加了可选的 <em>start</em> 和 <em>stop</em> 形参。</p>
</div>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="array.array.insert">
<span class="sig-name descname"><span class="pre">insert</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">i</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">x</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>在数组的位置 <em>i</em> 之前插入一个值为 <em>x</em> 的新项。负值被视为相对于数组末尾的位置。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="array.array.pop">
<span class="sig-name descname"><span class="pre">pop</span></span><span class="sig-paren">(</span><span class="optional">[</span><em class="sig-param"><span class="n"><span class="pre">i</span></span></em><span class="optional">]</span><span class="sig-paren">)</span></dt>
<dd><p>从数组中移除下标为 <em>i</em> 的项并将其返回。参数默认值为 <code class="docutils literal notranslate"><span class="pre">-1</span></code>，因此默认移除并返回末项。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="array.array.remove">
<span class="sig-name descname"><span class="pre">remove</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">x</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>从数组中移除第一个出现的 <em>x</em>。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="array.array.reverse">
<span class="sig-name descname"><span class="pre">reverse</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>反转数组中各项的顺序。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="array.array.tobytes">
<span class="sig-name descname"><span class="pre">tobytes</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>将数组转换为一个由机器值组成的数组并返回其字节表示（和用 <a class="reference internal" href="#array.array.tofile" title="array.array.tofile"><code class="xref py py-meth docutils literal notranslate"><span class="pre">tofile()</span></code></a> 方法写入文件的字节序列相同）。</p>
<div class="versionadded">
<p><span class="versionmodified added">Added in version 3.2: </span><code class="xref py py-meth docutils literal notranslate"><span class="pre">tostring()</span></code> 被重命名为含义更准确的 <a class="reference internal" href="#array.array.tobytes" title="array.array.tobytes"><code class="xref py py-meth docutils literal notranslate"><span class="pre">tobytes()</span></code></a>。</p>
</div>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="array.array.tofile">
<span class="sig-name descname"><span class="pre">tofile</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">f</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>将所有项（作为机器值）写入 <a class="reference internal" href="../glossary.xhtml#term-file-object"><span class="xref std std-term">file object</span></a> <em>f</em>。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="array.array.tolist">
<span class="sig-name descname"><span class="pre">tolist</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>将数组转换为由相同的项组成的普通列表。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="array.array.tounicode">
<span class="sig-name descname"><span class="pre">tounicode</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>Convert the array to a Unicode string.  The array must have a type <code class="docutils literal notranslate"><span class="pre">'u'</span></code>;
otherwise a <a class="reference internal" href="exceptions.xhtml#ValueError" title="ValueError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">ValueError</span></code></a> is raised. Use <code class="docutils literal notranslate"><span class="pre">array.tobytes().decode(enc)</span></code> to
obtain a Unicode string from an array of some other type.</p>
</dd></dl>

</dd></dl>

<p>The string representation of array objects has the form
<code class="docutils literal notranslate"><span class="pre">array(typecode,</span> <span class="pre">initializer)</span></code>.
The <em>initializer</em> is omitted if the array is empty, otherwise it is
a Unicode string if the <em>typecode</em> is <code class="docutils literal notranslate"><span class="pre">'u'</span></code>, otherwise it is
a list of numbers.
The string representation is guaranteed to be able to be converted back to an
array with the same type and value using <a class="reference internal" href="functions.xhtml#eval" title="eval"><code class="xref py py-func docutils literal notranslate"><span class="pre">eval()</span></code></a>, so long as the
<a class="reference internal" href="#array.array" title="array.array"><code class="xref py py-class docutils literal notranslate"><span class="pre">array</span></code></a> class has been imported using <code class="docutils literal notranslate"><span class="pre">from</span> <span class="pre">array</span> <span class="pre">import</span> <span class="pre">array</span></code>.
Variables <code class="docutils literal notranslate"><span class="pre">inf</span></code> and <code class="docutils literal notranslate"><span class="pre">nan</span></code> must also be defined if it contains
corresponding floating point values.
Examples:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="n">array</span><span class="p">(</span><span class="s1">&#39;l&#39;</span><span class="p">)</span>
<span class="n">array</span><span class="p">(</span><span class="s1">&#39;u&#39;</span><span class="p">,</span> <span class="s1">&#39;hello </span><span class="se">\u2641</span><span class="s1">&#39;</span><span class="p">)</span>
<span class="n">array</span><span class="p">(</span><span class="s1">&#39;l&#39;</span><span class="p">,</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">])</span>
<span class="n">array</span><span class="p">(</span><span class="s1">&#39;d&#39;</span><span class="p">,</span> <span class="p">[</span><span class="mf">1.0</span><span class="p">,</span> <span class="mf">2.0</span><span class="p">,</span> <span class="mf">3.14</span><span class="p">,</span> <span class="o">-</span><span class="n">inf</span><span class="p">,</span> <span class="n">nan</span><span class="p">])</span>
</pre></div>
</div>
<div class="admonition seealso">
<p class="admonition-title">参见</p>
<dl class="simple">
<dt><a class="reference internal" href="struct.xhtml#module-struct" title="struct: Interpret bytes as packed binary data."><code class="xref py py-mod docutils literal notranslate"><span class="pre">struct</span></code></a> 模块</dt><dd><p>打包和解包异构二进制数据。</p>
</dd>
<dt>Module <a class="reference internal" href="xdrlib.xhtml#module-xdrlib" title="xdrlib: Encoders and decoders for the External Data Representation (XDR).（已弃用）"><code class="xref py py-mod docutils literal notranslate"><span class="pre">xdrlib</span></code></a></dt><dd><p>Packing and unpacking of External Data Representation (XDR) data as used in some
remote procedure call systems.</p>
</dd>
<dt><a class="reference external" href="https://numpy.org/">NumPy</a><span class="link-target"> [https://numpy.org/]</span></dt><dd><p>NumPy 包定义了另一数组类型。</p>
</dd>
</dl>
</div>
</section>


            <div class="clearer"></div>
          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>