<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta name="viewport" content="width=device-width, initial-scale=1" />
<meta property="og:title" content="rlcompleter --- 用于 GNU readline 的补全函数" />
<meta property="og:type" content="website" />
<meta property="og:url" content="https://docs.python.org/3/library/rlcompleter.xhtml" />
<meta property="og:site_name" content="Python documentation" />
<meta property="og:description" content="源代码: Lib/rlcompleter.py[https://github.com/python/cpython/tree/3.12/Lib/rlcompleter.py] rlcompleter 模块定义了一个适合被传给 readline 模块中 set_completer() 的补全函数。 当此模块在具有 readline 模块的 Unix 平台上被导入时，会自动创建一个 Comple..." />
<meta property="og:image" content="https://docs.python.org/3/_static/og-image.png" />
<meta property="og:image:alt" content="Python documentation" />
<meta name="description" content="源代码: Lib/rlcompleter.py[https://github.com/python/cpython/tree/3.12/Lib/rlcompleter.py] rlcompleter 模块定义了一个适合被传给 readline 模块中 set_completer() 的补全函数。 当此模块在具有 readline 模块的 Unix 平台上被导入时，会自动创建一个 Comple..." />
<meta property="og:image:width" content="200" />
<meta property="og:image:height" content="200" />
<meta name="theme-color" content="#3776ab" />

    <title>rlcompleter --- 用于 GNU readline 的补全函数</title>
    <link rel="stylesheet" type="text/css" href="../_static/pygments.css" />
    <link rel="stylesheet" type="text/css" href="../_static/epub.css" />
    <link rel="canonical" href="https://docs.python.org/3/library/rlcompleter.html" />
    
      
    

    
    <style>
      @media only screen {
        table.full-width-table {
            width: 100%;
        }
      }
    </style>
 

  </head><body>


    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <section id="module-rlcompleter">
<span id="rlcompleter-completion-function-for-gnu-readline"></span><h1><code class="xref py py-mod docutils literal notranslate"><span class="pre">rlcompleter</span></code> --- 用于 GNU readline 的补全函数</h1>
<p><strong>源代码:</strong> <a class="reference external" href="https://github.com/python/cpython/tree/3.12/Lib/rlcompleter.py">Lib/rlcompleter.py</a><span class="link-target"> [https://github.com/python/cpython/tree/3.12/Lib/rlcompleter.py]</span></p>
<hr class="docutils" />
<p><code class="xref py py-mod docutils literal notranslate"><span class="pre">rlcompleter</span></code> 模块定义了一个适合被传给 <a class="reference internal" href="readline.xhtml#module-readline" title="readline: GNU readline support for Python. (Unix)"><code class="xref py py-mod docutils literal notranslate"><span class="pre">readline</span></code></a> 模块中 <a class="reference internal" href="readline.xhtml#readline.set_completer" title="readline.set_completer"><code class="xref py py-func docutils literal notranslate"><span class="pre">set_completer()</span></code></a> 的补全函数。</p>
<p>当此模块在具有 <a class="reference internal" href="readline.xhtml#module-readline" title="readline: GNU readline support for Python. (Unix)"><code class="xref py py-mod docutils literal notranslate"><span class="pre">readline</span></code></a> 模块的 Unix 平台上被导入时，会自动创建一个 <a class="reference internal" href="#rlcompleter.Completer" title="rlcompleter.Completer"><code class="xref py py-class docutils literal notranslate"><span class="pre">Completer</span></code></a> 实例并将其 <a class="reference internal" href="#rlcompleter.Completer.complete" title="rlcompleter.Completer.complete"><code class="xref py py-meth docutils literal notranslate"><span class="pre">complete()</span></code></a> 方法设为 <a class="reference internal" href="readline.xhtml#readline-completion"><span class="std std-ref">readline completer</span></a>。 该方法提供了对有效的 Python <a class="reference internal" href="../reference/lexical_analysis.xhtml#identifiers"><span class="std std-ref">标识符和关键字</span></a> 的补全功能。</p>
<p>示例:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="kn">import</span> <span class="nn">rlcompleter</span>
<span class="gp">&gt;&gt;&gt; </span><span class="kn">import</span> <span class="nn">readline</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">readline</span><span class="o">.</span><span class="n">parse_and_bind</span><span class="p">(</span><span class="s2">&quot;tab: complete&quot;</span><span class="p">)</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">readline</span><span class="o">.</span> <span class="o">&lt;</span><span class="n">TAB</span> <span class="n">PRESSED</span><span class="o">&gt;</span>
<span class="go">readline.__doc__          readline.get_line_buffer(  readline.read_init_file(</span>
<span class="go">readline.__file__         readline.insert_text(      readline.set_completer(</span>
<span class="go">readline.__name__         readline.parse_and_bind(</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">readline</span><span class="o">.</span>
</pre></div>
</div>
<p><code class="xref py py-mod docutils literal notranslate"><span class="pre">rlcompleter</span></code> 模块是为 Python 的 <a class="reference internal" href="../tutorial/interpreter.xhtml#tut-interactive"><span class="std std-ref">交互模式</span></a> 而设计的。 除非 Python 是附带 <a class="reference internal" href="../using/cmdline.xhtml#cmdoption-S"><code class="xref std std-option docutils literal notranslate"><span class="pre">-S</span></code></a> 选项运行的，这个模块总是会被自动地导入并配置 (参见 <a class="reference internal" href="site.xhtml#rlcompleter-config"><span class="std std-ref">Readline 配置</span></a>)。</p>
<p>在没有 <a class="reference internal" href="readline.xhtml#module-readline" title="readline: GNU readline support for Python. (Unix)"><code class="xref py py-mod docutils literal notranslate"><span class="pre">readline</span></code></a> 的平台, 此模块定义的 <a class="reference internal" href="#rlcompleter.Completer" title="rlcompleter.Completer"><code class="xref py py-class docutils literal notranslate"><span class="pre">Completer</span></code></a> 类仍然可以用于自定义行为.</p>
<dl class="py class" id="completer-objects">
<dt class="sig sig-object py" id="rlcompleter.Completer">
<em class="property"><span class="pre">class</span><span class="w"> </span></em><span class="sig-prename descclassname"><span class="pre">rlcompleter.</span></span><span class="sig-name descname"><span class="pre">Completer</span></span></dt>
<dd><p>Completer 对象具有以下方法：</p>
<dl class="py method">
<dt class="sig sig-object py" id="rlcompleter.Completer.complete">
<span class="sig-name descname"><span class="pre">complete</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">text</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">state</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>返回针对 <em>text</em> 的下一个可能的补全项。</p>
<p>当被 <a class="reference internal" href="readline.xhtml#module-readline" title="readline: GNU readline support for Python. (Unix)"><code class="xref py py-mod docutils literal notranslate"><span class="pre">readline</span></code></a> 模块调用时，此方法将被连续调用并附带 <code class="docutils literal notranslate"><span class="pre">state</span> <span class="pre">==</span> <span class="pre">0,</span> <span class="pre">1,</span> <span class="pre">2,</span> <span class="pre">...</span></code> 直到该方法返回 <code class="docutils literal notranslate"><span class="pre">None</span></code>。</p>
<p>如果指定的 <em>text</em> 不包含句点字符 (<code class="docutils literal notranslate"><span class="pre">'.'</span></code>)，它将根据当前 <a class="reference internal" href="__main__.xhtml#module-__main__" title="__main__: The environment where top-level code is run. Covers command-line interfaces, import-time behavior, and ``__name__ == '__main__'``."><code class="xref py py-mod docutils literal notranslate"><span class="pre">__main__</span></code></a>, <a class="reference internal" href="builtins.xhtml#module-builtins" title="builtins: The module that provides the built-in namespace."><code class="xref py py-mod docutils literal notranslate"><span class="pre">builtins</span></code></a> 和保留关键字（定义于 <a class="reference internal" href="keyword.xhtml#module-keyword" title="keyword: Test whether a string is a keyword in Python."><code class="xref py py-mod docutils literal notranslate"><span class="pre">keyword</span></code></a> 模块）所定义的名称进行补全。</p>
<p>如果为带有点号的名称执行调用，它将尝试尽量求值直到最后一部分为止而产生附带影响（函数不会被求值，但它可以生成对 <a class="reference internal" href="../reference/datamodel.xhtml#object.__getattr__" title="object.__getattr__"><code class="xref py py-meth docutils literal notranslate"><span class="pre">__getattr__()</span></code></a> 的调用），并通过 <a class="reference internal" href="functions.xhtml#dir" title="dir"><code class="xref py py-func docutils literal notranslate"><span class="pre">dir()</span></code></a> 函数来匹配剩余部分。 在对表达式求值期间引发的任何异常都会被捕获、静默处理并返回 <a class="reference internal" href="constants.xhtml#None" title="None"><code class="xref py py-const docutils literal notranslate"><span class="pre">None</span></code></a>。</p>
</dd></dl>

</dd></dl>

</section>


            <div class="clearer"></div>
          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>