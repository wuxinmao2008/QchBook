<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta name="viewport" content="width=device-width, initial-scale=1" />
<meta property="og:title" content="内置常量" />
<meta property="og:type" content="website" />
<meta property="og:url" content="https://docs.python.org/3/library/constants.xhtml" />
<meta property="og:site_name" content="Python documentation" />
<meta property="og:description" content="有少数的常量存在于内置命名空间中。 它们是： 由 site 模块添加的常量: site 模块（在启动期间自动导入，除非给出-S 命令行选项）将几个常量添加到内置命名空间。 它们对交互式解释器 shell 很有用，并且不应在程序中使用。" />
<meta property="og:image" content="https://docs.python.org/3/_static/og-image.png" />
<meta property="og:image:alt" content="Python documentation" />
<meta name="description" content="有少数的常量存在于内置命名空间中。 它们是： 由 site 模块添加的常量: site 模块（在启动期间自动导入，除非给出-S 命令行选项）将几个常量添加到内置命名空间。 它们对交互式解释器 shell 很有用，并且不应在程序中使用。" />
<meta property="og:image:width" content="200" />
<meta property="og:image:height" content="200" />
<meta name="theme-color" content="#3776ab" />

    <title>内置常量</title>
    <link rel="stylesheet" type="text/css" href="../_static/pygments.css" />
    <link rel="stylesheet" type="text/css" href="../_static/epub.css" />
    <link rel="canonical" href="https://docs.python.org/3/library/constants.html" />
    
      
    

    
    <style>
      @media only screen {
        table.full-width-table {
            width: 100%;
        }
      }
    </style>
 

  </head><body>


    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <section id="built-in-constants">
<span id="built-in-consts"></span><h1>内置常量</h1>
<p>有少数的常量存在于内置命名空间中。 它们是：</p>
<dl class="py data">
<dt class="sig sig-object py" id="False">
<span class="sig-name descname"><span class="pre">False</span></span></dt>
<dd><p><a class="reference internal" href="functions.xhtml#bool" title="bool"><code class="xref py py-class docutils literal notranslate"><span class="pre">bool</span></code></a> 类型的假值。 给 <code class="docutils literal notranslate"><span class="pre">False</span></code> 赋值是非法的并会引发 <a class="reference internal" href="exceptions.xhtml#SyntaxError" title="SyntaxError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">SyntaxError</span></code></a>。</p>
</dd></dl>

<dl class="py data">
<dt class="sig sig-object py" id="True">
<span class="sig-name descname"><span class="pre">True</span></span></dt>
<dd><p><a class="reference internal" href="functions.xhtml#bool" title="bool"><code class="xref py py-class docutils literal notranslate"><span class="pre">bool</span></code></a> 类型的真值。 给 <code class="docutils literal notranslate"><span class="pre">True</span></code> 赋值是非法的并会引发 <a class="reference internal" href="exceptions.xhtml#SyntaxError" title="SyntaxError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">SyntaxError</span></code></a>。</p>
</dd></dl>

<dl class="py data">
<dt class="sig sig-object py" id="None">
<span class="sig-name descname"><span class="pre">None</span></span></dt>
<dd><p>通常被用来代表空值的对象，例如未向某个函数传入默认参数时。 向 <code class="docutils literal notranslate"><span class="pre">None</span></code> 赋值是非法的并会引发 <a class="reference internal" href="exceptions.xhtml#SyntaxError" title="SyntaxError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">SyntaxError</span></code></a>。 <code class="docutils literal notranslate"><span class="pre">None</span></code> 是 <a class="reference internal" href="types.xhtml#types.NoneType" title="types.NoneType"><code class="xref py py-data docutils literal notranslate"><span class="pre">NoneType</span></code></a> 类型的唯一实例。</p>
</dd></dl>

<dl class="py data">
<dt class="sig sig-object py" id="NotImplemented">
<span class="sig-name descname"><span class="pre">NotImplemented</span></span></dt>
<dd><p>一个应当由双目运算特殊方法（如 <a class="reference internal" href="../reference/datamodel.xhtml#object.__eq__" title="object.__eq__"><code class="xref py py-meth docutils literal notranslate"><span class="pre">__eq__()</span></code></a>, <a class="reference internal" href="../reference/datamodel.xhtml#object.__lt__" title="object.__lt__"><code class="xref py py-meth docutils literal notranslate"><span class="pre">__lt__()</span></code></a>, <a class="reference internal" href="../reference/datamodel.xhtml#object.__add__" title="object.__add__"><code class="xref py py-meth docutils literal notranslate"><span class="pre">__add__()</span></code></a>, <a class="reference internal" href="../reference/datamodel.xhtml#object.__rsub__" title="object.__rsub__"><code class="xref py py-meth docutils literal notranslate"><span class="pre">__rsub__()</span></code></a> 等）返回的特殊值，用来表明该运算没有针对其他类型的实现；也可由原地双目运算特殊方法（如 <a class="reference internal" href="../reference/datamodel.xhtml#object.__imul__" title="object.__imul__"><code class="xref py py-meth docutils literal notranslate"><span class="pre">__imul__()</span></code></a>, <a class="reference internal" href="../reference/datamodel.xhtml#object.__iand__" title="object.__iand__"><code class="xref py py-meth docutils literal notranslate"><span class="pre">__iand__()</span></code></a> 等）出于同样的目的而返回。 它不应在布尔上下文中被求值。 <code class="xref py py-data docutils literal notranslate"><span class="pre">NotImplemented</span></code> 是 <a class="reference internal" href="types.xhtml#types.NotImplementedType" title="types.NotImplementedType"><code class="xref py py-data docutils literal notranslate"><span class="pre">types.NotImplementedType</span></code></a> 类型的唯一实例。</p>
<div class="admonition note">
<p class="admonition-title">备注</p>
<p>当一个双目（或原地）方法返回 <code class="xref py py-data docutils literal notranslate"><span class="pre">NotImplemented</span></code> 时解释器将尝试对另一种类型（或其他回退操作，具体取决于所用的运算符）的反射操作。 如果所有尝试都返回 <code class="xref py py-data docutils literal notranslate"><span class="pre">NotImplemented</span></code>，解释器将引发适当的异常。 错误地返回 <code class="xref py py-data docutils literal notranslate"><span class="pre">NotImplemented</span></code> 将导致误导性的错误消息或 <code class="xref py py-data docutils literal notranslate"><span class="pre">NotImplemented</span></code> 值被返回给 Python 代码。</p>
<p>参见 <a class="reference internal" href="numbers.xhtml#implementing-the-arithmetic-operations"><span class="std std-ref">实现算术运算</span></a> 为例。</p>
</div>
<div class="admonition note">
<p class="admonition-title">备注</p>
<p><code class="docutils literal notranslate"><span class="pre">NotImplementedError</span></code> 和 <code class="xref py py-data docutils literal notranslate"><span class="pre">NotImplemented</span></code> 不可相互替代，即使它们有相似的名称和用途。 请参阅 <a class="reference internal" href="exceptions.xhtml#NotImplementedError" title="NotImplementedError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">NotImplementedError</span></code></a> 了解其使用细节。</p>
</div>
<div class="versionchanged">
<p><span class="versionmodified changed">在 3.9 版本发生变更: </span>在布尔上下文件中对 <code class="xref py py-data docutils literal notranslate"><span class="pre">NotImplemented</span></code> 求值的操作已被弃用。 虽然它目前会被求解为真值，但将同时发出 <a class="reference internal" href="exceptions.xhtml#DeprecationWarning" title="DeprecationWarning"><code class="xref py py-exc docutils literal notranslate"><span class="pre">DeprecationWarning</span></code></a>。 它将在未来的 Python 版本中引发 <a class="reference internal" href="exceptions.xhtml#TypeError" title="TypeError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">TypeError</span></code></a>。</p>
</div>
</dd></dl>

<dl class="py data" id="index-0">
<dt class="sig sig-object py" id="Ellipsis">
<span class="sig-name descname"><span class="pre">Ellipsis</span></span></dt>
<dd><p>与省略号字面值 &quot;<code class="docutils literal notranslate"><span class="pre">...</span></code>&quot; 相同。 该特殊值主要是与用户定义的容器数据类型的扩展切片语法结合使用。 <code class="docutils literal notranslate"><span class="pre">Ellipsis</span></code> 是 <a class="reference internal" href="types.xhtml#types.EllipsisType" title="types.EllipsisType"><code class="xref py py-data docutils literal notranslate"><span class="pre">types.EllipsisType</span></code></a> 类型的唯一实例。</p>
</dd></dl>

<dl class="py data">
<dt class="sig sig-object py" id="debug__">
<span class="sig-name descname"><span class="pre">__debug__</span></span></dt>
<dd><p>如果 Python 没有以 <a class="reference internal" href="../using/cmdline.xhtml#cmdoption-O"><code class="xref std std-option docutils literal notranslate"><span class="pre">-O</span></code></a> 选项启动，则此常量为真值。 另请参见 <a class="reference internal" href="../reference/simple_stmts.xhtml#assert"><code class="xref std std-keyword docutils literal notranslate"><span class="pre">assert</span></code></a> 语句。</p>
</dd></dl>

<div class="admonition note">
<p class="admonition-title">备注</p>
<p>变量名 <a class="reference internal" href="#None" title="None"><code class="xref py py-data docutils literal notranslate"><span class="pre">None</span></code></a>，<a class="reference internal" href="#False" title="False"><code class="xref py py-data docutils literal notranslate"><span class="pre">False</span></code></a>，<a class="reference internal" href="#True" title="True"><code class="xref py py-data docutils literal notranslate"><span class="pre">True</span></code></a> 和 <code class="xref py py-data docutils literal notranslate"><span class="pre">__</span> <span class="pre">debug__</span></code> 无法重新赋值（赋值给它们，即使是属性名，将引发 <a class="reference internal" href="exceptions.xhtml#SyntaxError" title="SyntaxError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">SyntaxError</span></code></a> ），所以它们可以被认为是“真正的”常数。</p>
</div>
<section id="constants-added-by-the-site-module">
<h2>由 <a class="reference internal" href="site.xhtml#module-site" title="site: Module responsible for site-specific configuration."><code class="xref py py-mod docutils literal notranslate"><span class="pre">site</span></code></a> 模块添加的常量</h2>
<p><a class="reference internal" href="site.xhtml#module-site" title="site: Module responsible for site-specific configuration."><code class="xref py py-mod docutils literal notranslate"><span class="pre">site</span></code></a> 模块（在启动期间自动导入，除非给出 <a class="reference internal" href="../using/cmdline.xhtml#cmdoption-S"><code class="xref std std-option docutils literal notranslate"><span class="pre">-S</span></code></a> 命令行选项）将几个常量添加到内置命名空间。 它们对交互式解释器 shell 很有用，并且不应在程序中使用。</p>
<dl class="py data">
<dt class="sig sig-object py" id="quit">
<span class="sig-name descname"><span class="pre">quit</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">code</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em><span class="sig-paren">)</span></dt>
<dt class="sig sig-object py" id="exit">
<span class="sig-name descname"><span class="pre">exit</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">code</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>当打印此对象时，会打印出一条消息，例如“Use quit() or Ctrl-D (i.e. EOF) to exit”，当调用此对象时，将使用指定的退出代码来引发 <a class="reference internal" href="exceptions.xhtml#SystemExit" title="SystemExit"><code class="xref py py-exc docutils literal notranslate"><span class="pre">SystemExit</span></code></a>。</p>
</dd></dl>

<dl class="py data">
<dt class="sig sig-object py" id="copyright">
<span class="sig-name descname"><span class="pre">copyright</span></span></dt>
<dt class="sig sig-object py" id="credits">
<span class="sig-name descname"><span class="pre">credits</span></span></dt>
<dd><p>打印或调用的对象分别打印版权或作者的文本。</p>
</dd></dl>

<dl class="py data">
<dt class="sig sig-object py" id="license">
<span class="sig-name descname"><span class="pre">license</span></span></dt>
<dd><p>当打印此对象时，会打印出一条消息“Type license() to see the full license text”，当调用此对象时，将以分页形式显示完整的许可证文本（每次显示一屏）。</p>
</dd></dl>

</section>
</section>


            <div class="clearer"></div>
          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>