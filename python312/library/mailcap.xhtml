<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta name="viewport" content="width=device-width, initial-scale=1" />
<meta property="og:title" content="mailcap --- Mailcap 文件处理" />
<meta property="og:type" content="website" />
<meta property="og:url" content="https://docs.python.org/3/library/mailcap.xhtml" />
<meta property="og:site_name" content="Python documentation" />
<meta property="og:description" content="源代码: Lib/mailcap.py[https://github.com/python/cpython/tree/3.12/Lib/mailcap.py] Mailcap 文件可用来配置支持 MIME 的应用程序例如邮件阅读器和 Web 浏览器如何响应具有不同 MIME 类型的文件。 (&quot;mailcap&quot; 这个名称源自短语 &quot;mail capability&quot;。) 例如，一个 mailca..." />
<meta property="og:image" content="https://docs.python.org/3/_static/og-image.png" />
<meta property="og:image:alt" content="Python documentation" />
<meta name="description" content="源代码: Lib/mailcap.py[https://github.com/python/cpython/tree/3.12/Lib/mailcap.py] Mailcap 文件可用来配置支持 MIME 的应用程序例如邮件阅读器和 Web 浏览器如何响应具有不同 MIME 类型的文件。 (&quot;mailcap&quot; 这个名称源自短语 &quot;mail capability&quot;。) 例如，一个 mailca..." />
<meta property="og:image:width" content="200" />
<meta property="og:image:height" content="200" />
<meta name="theme-color" content="#3776ab" />

    <title>mailcap --- Mailcap 文件处理</title>
    <link rel="stylesheet" type="text/css" href="../_static/pygments.css" />
    <link rel="stylesheet" type="text/css" href="../_static/epub.css" />
    <link rel="canonical" href="https://docs.python.org/3/library/mailcap.html" />
    
      
    

    
    <style>
      @media only screen {
        table.full-width-table {
            width: 100%;
        }
      }
    </style>
 

  </head><body>


    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <section id="module-mailcap">
<span id="mailcap-mailcap-file-handling"></span><h1><a class="reference internal" href="#module-mailcap" title="mailcap: Mailcap file handling.（已弃用）"><code class="xref py py-mod docutils literal notranslate"><span class="pre">mailcap</span></code></a> --- Mailcap 文件处理</h1>
<p><strong>源代码:</strong> <a class="reference external" href="https://github.com/python/cpython/tree/3.12/Lib/mailcap.py">Lib/mailcap.py</a><span class="link-target"> [https://github.com/python/cpython/tree/3.12/Lib/mailcap.py]</span></p>
<div class="deprecated-removed">
<p><span class="versionmodified">从 3.11 版起不建议使用，将在 3.13 版中移除: </span><a class="reference internal" href="#module-mailcap" title="mailcap: Mailcap file handling.（已弃用）"><code class="xref py py-mod docutils literal notranslate"><span class="pre">mailcap</span></code></a> 模块已被弃用（请参阅 <span class="target" id="index-6"></span><a class="pep reference external" href="https://peps.python.org/pep-0594/#mailcap"><strong>PEP 594</strong></a><span class="link-target"> [https://peps.python.org/pep-0594/#mailcap]</span> 了解详情）。 <a class="reference internal" href="mimetypes.xhtml#module-mimetypes" title="mimetypes: Mapping of filename extensions to MIME types."><code class="xref py py-mod docutils literal notranslate"><span class="pre">mimetypes</span></code></a> 模块提供了一个替代品。</p>
</div>
<hr class="docutils" />
<p>Mailcap 文件可用来配置支持 MIME 的应用程序例如邮件阅读器和 Web 浏览器如何响应具有不同 MIME 类型的文件。 (&quot;mailcap&quot; 这个名称源自短语 &quot;mail capability&quot;。) 例如，一个 mailcap 文件可能包含 <code class="docutils literal notranslate"><span class="pre">video/mpeg;</span> <span class="pre">xmpeg</span> <span class="pre">%s</span></code> 这样的行。 然后，如果用户遇到 MIME 类型为 <em class="mimetype">video/mpeg</em> 的邮件消息或 Web 文档时，<code class="docutils literal notranslate"><span class="pre">%s</span></code> 将被替换为一个文件名 (通常属于临时文件) 并且会自动启动 <strong class="program">xmpeg</strong> 程序来查看该文件。</p>
<p>mailcap 格式的说明文档见 <span class="target" id="index-7"></span><a class="rfc reference external" href="https://datatracker.ietf.org/doc/html/rfc1524.html"><strong>RFC 1524</strong></a><span class="link-target"> [https://datatracker.ietf.org/doc/html/rfc1524.html]</span>, &quot;A User Agent Configuration Mechanism For Multimedia Mail Format Information&quot;，但它并不是一个互联网标准。 不过，mailcap 文件在大多数 Unix 系统上都受到支持。</p>
<dl class="py function">
<dt class="sig sig-object py" id="mailcap.findmatch">
<span class="sig-prename descclassname"><span class="pre">mailcap.</span></span><span class="sig-name descname"><span class="pre">findmatch</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">caps</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">MIMEtype</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">key</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">'view'</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">filename</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">'/dev/null'</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">plist</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">[]</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>返回一个 2 元组；其中第一个元素是包含所要执行命令的字符串 (它可被传递给 <a class="reference internal" href="os.xhtml#os.system" title="os.system"><code class="xref py py-func docutils literal notranslate"><span class="pre">os.system()</span></code></a>)，第二个元素是对应于给定 MIME 类型的 mailcap 条目。 如果找不到匹配的 MIME 类型，则将返回 <code class="docutils literal notranslate"><span class="pre">(None,</span> <span class="pre">None)</span></code>。</p>
<p><em>key</em> 是所需字段的名称，它代表要执行的活动类型；默认值是 'view'，因为在最通常的情况下你只是想要查看 MIME 类型数据的正文。 其他可能的值还有 'compose' 和 'edit'，分别用于想要创建给定 MIME 类型正文或修改现有正文数据的情况。 请参阅 <span class="target" id="index-8"></span><a class="rfc reference external" href="https://datatracker.ietf.org/doc/html/rfc1524.html"><strong>RFC 1524</strong></a><span class="link-target"> [https://datatracker.ietf.org/doc/html/rfc1524.html]</span> 获取这些字段的完整列表。</p>
<p><em>filename</em> 是在命令行中用来替换 <code class="docutils literal notranslate"><span class="pre">%s</span></code> 的文件名；默认值 <code class="docutils literal notranslate"><span class="pre">'/dev/null'</span></code> 几乎肯定不是你想要的，因此通常你要通过指定一个文件名来覆盖它。</p>
<p><em>plist</em> 可以是一个包含命名形参的列表；默认值只是一个空列表。 列表中的每个条目必须为包含形参名称的字符串、等于号 (<code class="docutils literal notranslate"><span class="pre">'='</span></code>) 以及形参的值。 Mailcap 条目可以包含形如 <code class="docutils literal notranslate"><span class="pre">%{foo}</span></code> 的命名形参，它将由名为 'foo' 的形参的值所替换。 例如，如果命令行 <code class="docutils literal notranslate"><span class="pre">showpartial</span> <span class="pre">%{id}</span> <span class="pre">%{number}</span> <span class="pre">%{total}</span></code> 是在一个 mailcap 文件中，并且 <em>plist</em> 被设为 <code class="docutils literal notranslate"><span class="pre">['id=1',</span> <span class="pre">'number=2',</span> <span class="pre">'total=3']</span></code>，则结果命令行将为 <code class="docutils literal notranslate"><span class="pre">'showpartial</span> <span class="pre">1</span> <span class="pre">2</span> <span class="pre">3'</span></code>。</p>
<p>在 mailcap 文件中，可以指定可选的 &quot;test&quot; 字段来检测某些外部条件（例如所使用的机器架构或窗口系统）来确定是否要应用 mailcap 行。 <a class="reference internal" href="#mailcap.findmatch" title="mailcap.findmatch"><code class="xref py py-func docutils literal notranslate"><span class="pre">findmatch()</span></code></a> 将自动检查此类条件并在检查未通过时跳过条目。</p>
<div class="versionchanged">
<p><span class="versionmodified changed">在 3.11 版本发生变更: </span>为了防止使用 shell 元字符（在 shell 命令行中具有特殊效果的符号）的安全问题，<code class="docutils literal notranslate"><span class="pre">findmatch</span></code> 会拒绝把字母数字和 <code class="docutils literal notranslate"><span class="pre">&#64;+=:,./-_</span></code> 以外的 ASCII 字符注入被返回的命令行。</p>
<p>如果有不被允许的字符出现在 <em>filename</em> 中，<code class="docutils literal notranslate"><span class="pre">findmatch</span></code> 将总是返回 <code class="docutils literal notranslate"><span class="pre">(None,</span> <span class="pre">None)</span></code> 就如同未找到任何条目一样。 如果这样的字符出现在其他地方（在 <em>plist</em> 或 <em>MIMEtype</em> 中的值，<code class="docutils literal notranslate"><span class="pre">findmatch</span></code> 将忽略所有使用这些值的 mailcap 条目。 在两种情况下都将引发 <a class="reference internal" href="warnings.xhtml#module-warnings" title="warnings: Issue warning messages and control their disposition."><code class="xref py py-mod docutils literal notranslate"><span class="pre">警告</span></code></a>。</p>
</div>
</dd></dl>

<dl class="py function">
<dt class="sig sig-object py" id="mailcap.getcaps">
<span class="sig-prename descclassname"><span class="pre">mailcap.</span></span><span class="sig-name descname"><span class="pre">getcaps</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>返回一个将 MIME 类型映射到 mailcap 文件条目列表的字典。 此字典必须被传给 <a class="reference internal" href="#mailcap.findmatch" title="mailcap.findmatch"><code class="xref py py-func docutils literal notranslate"><span class="pre">findmatch()</span></code></a> 函数。 条目会被存储为字典列表，但并不需要了解此表示形式的细节。</p>
<p>此信息来自在系统中找到的所有 mailcap 文件。 用户的 mailcap 文件 <code class="file docutils literal notranslate"><span class="pre">$HOME/.mailcap</span></code> 中的设置将覆盖系统 mailcap 文件 <code class="file docutils literal notranslate"><span class="pre">/etc/mailcap</span></code>, <code class="file docutils literal notranslate"><span class="pre">/usr/etc/mailcap</span></code> 和 <code class="file docutils literal notranslate"><span class="pre">/usr/local/etc/mailcap</span></code> 中的设置。</p>
</dd></dl>

<p>一个用法示例:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="kn">import</span> <span class="nn">mailcap</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">d</span> <span class="o">=</span> <span class="n">mailcap</span><span class="o">.</span><span class="n">getcaps</span><span class="p">()</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">mailcap</span><span class="o">.</span><span class="n">findmatch</span><span class="p">(</span><span class="n">d</span><span class="p">,</span> <span class="s1">&#39;video/mpeg&#39;</span><span class="p">,</span> <span class="n">filename</span><span class="o">=</span><span class="s1">&#39;tmp1223&#39;</span><span class="p">)</span>
<span class="go">(&#39;xmpeg tmp1223&#39;, {&#39;view&#39;: &#39;xmpeg %s&#39;})</span>
</pre></div>
</div>
</section>


            <div class="clearer"></div>
          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>