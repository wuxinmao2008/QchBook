<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta name="viewport" content="width=device-width, initial-scale=1" />
<meta property="og:title" content="calendar --- 通用日历相关函数" />
<meta property="og:type" content="website" />
<meta property="og:url" content="https://docs.python.org/3/library/calendar.xhtml" />
<meta property="og:site_name" content="Python documentation" />
<meta property="og:description" content="源代码： Lib/calendar.py[https://github.com/python/cpython/tree/3.12/Lib/calendar.py] 这个模块让你可以输出像 Unix cal 那样的日历，它还提供了其它与日历相关的实用函数。 默认情况下，这些日历把星期一作为一周的第一天，星期天作为一周的最后一天（这是欧洲惯例）。可以使用 setfirstweekday() 方法..." />
<meta property="og:image" content="https://docs.python.org/3/_static/og-image.png" />
<meta property="og:image:alt" content="Python documentation" />
<meta name="description" content="源代码： Lib/calendar.py[https://github.com/python/cpython/tree/3.12/Lib/calendar.py] 这个模块让你可以输出像 Unix cal 那样的日历，它还提供了其它与日历相关的实用函数。 默认情况下，这些日历把星期一作为一周的第一天，星期天作为一周的最后一天（这是欧洲惯例）。可以使用 setfirstweekday() 方法..." />
<meta property="og:image:width" content="200" />
<meta property="og:image:height" content="200" />
<meta name="theme-color" content="#3776ab" />

    <title>calendar --- 通用日历相关函数</title>
    <link rel="stylesheet" type="text/css" href="../_static/pygments.css" />
    <link rel="stylesheet" type="text/css" href="../_static/epub.css" />
    <link rel="canonical" href="https://docs.python.org/3/library/calendar.html" />
    
      
    

    
    <style>
      @media only screen {
        table.full-width-table {
            width: 100%;
        }
      }
    </style>
 

  </head><body>


    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <section id="module-calendar">
<span id="calendar-general-calendar-related-functions"></span><h1><code class="xref py py-mod docutils literal notranslate"><span class="pre">calendar</span></code> --- 通用日历相关函数</h1>
<p><strong>源代码：</strong> <a class="reference external" href="https://github.com/python/cpython/tree/3.12/Lib/calendar.py">Lib/calendar.py</a><span class="link-target"> [https://github.com/python/cpython/tree/3.12/Lib/calendar.py]</span></p>
<hr class="docutils" />
<p>这个模块让你可以输出像 Unix <strong class="program">cal</strong> 那样的日历，它还提供了其它与日历相关的实用函数。 默认情况下，这些日历把星期一作为一周的第一天，星期天作为一周的最后一天（这是欧洲惯例）。可以使用 <a class="reference internal" href="#calendar.setfirstweekday" title="calendar.setfirstweekday"><code class="xref py py-func docutils literal notranslate"><span class="pre">setfirstweekday()</span></code></a> 方法设置一周的第一天为星期天 (6) 或者其它任意一天。函数全部接收整数类型的参数用来指定日期。其它相关功能参见 <a class="reference internal" href="datetime.xhtml#module-datetime" title="datetime: Basic date and time types."><code class="xref py py-mod docutils literal notranslate"><span class="pre">datetime</span></code></a> 和 <a class="reference internal" href="time.xhtml#module-time" title="time: Time access and conversions."><code class="xref py py-mod docutils literal notranslate"><span class="pre">time</span></code></a> 模块。</p>
<p>在这个模块中定义的函数和类都基于一个理想化的日历——向过去和未来两个方向无限扩展的现行公历。这与 Dershowitz 和 Reingold 的书“历法计算”中所有计算的基本日历 &quot;proleptic Gregorian&quot; 历的定义相符。0 和负数年份按照 ISO 8601 标准解释：0 年指公元前 1 年，-1 年指公元前 2 年，依此类推。</p>
<dl class="py class">
<dt class="sig sig-object py" id="calendar.Calendar">
<em class="property"><span class="pre">class</span><span class="w"> </span></em><span class="sig-prename descclassname"><span class="pre">calendar.</span></span><span class="sig-name descname"><span class="pre">Calendar</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">firstweekday</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">0</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>创建一个 <a class="reference internal" href="#calendar.Calendar" title="calendar.Calendar"><code class="xref py py-class docutils literal notranslate"><span class="pre">Calendar</span></code></a> 对象。<em>firstweekday</em> 是一个用来指定每星期第一天的整数。<a class="reference internal" href="#calendar.MONDAY" title="calendar.MONDAY"><code class="xref py py-const docutils literal notranslate"><span class="pre">MONDAY</span></code></a> 是 <code class="docutils literal notranslate"><span class="pre">0</span></code> （默认值），<a class="reference internal" href="#calendar.SUNDAY" title="calendar.SUNDAY"><code class="xref py py-const docutils literal notranslate"><span class="pre">SUNDAY</span></code></a> 是 <code class="docutils literal notranslate"><span class="pre">6</span></code>。</p>
<p><a class="reference internal" href="#calendar.Calendar" title="calendar.Calendar"><code class="xref py py-class docutils literal notranslate"><span class="pre">Calendar</span></code></a> 对象提供了一些可用于对日历数据进行格式化的准备的方法。这个类本身不执行任何格式化操作。 这部分任务应由子类来完成。</p>
<p><a class="reference internal" href="#calendar.Calendar" title="calendar.Calendar"><code class="xref py py-class docutils literal notranslate"><span class="pre">Calendar</span></code></a> 实例有下列方法：</p>
<dl class="py method">
<dt class="sig sig-object py" id="calendar.Calendar.iterweekdays">
<span class="sig-name descname"><span class="pre">iterweekdays</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>返回一个迭代器，迭代器的内容为一周里每天的星期值。迭代器的第一个值与 <a class="reference internal" href="#calendar.firstweekday" title="calendar.firstweekday"><code class="xref py py-attr docutils literal notranslate"><span class="pre">firstweekday</span></code></a> 属性的值一致。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="calendar.Calendar.itermonthdates">
<span class="sig-name descname"><span class="pre">itermonthdates</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">year</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">month</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>为 <em>year</em> 年 <em>month</em> 月 (1-12) 返回一个迭代器。这个迭代器返回当月的所有日期（使用 <a class="reference internal" href="datetime.xhtml#datetime.date" title="datetime.date"><code class="xref py py-class docutils literal notranslate"><span class="pre">datetime.date</span></code></a> 对象），日期包含了本月头尾用于组成完整一周的日期。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="calendar.Calendar.itermonthdays">
<span class="sig-name descname"><span class="pre">itermonthdays</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">year</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">month</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>为 <em>year</em> 年 <em>month</em> 月返回一个与 <a class="reference internal" href="#calendar.Calendar.itermonthdates" title="calendar.Calendar.itermonthdates"><code class="xref py py-meth docutils literal notranslate"><span class="pre">itermonthdates()</span></code></a> 类似的迭代器，但不会受 <a class="reference internal" href="datetime.xhtml#datetime.date" title="datetime.date"><code class="xref py py-class docutils literal notranslate"><span class="pre">datetime.date</span></code></a> 范围的限制。返回的为每一天的日期相对于当月 1 日过去的天数。对于不在当月的日期，返回数字 <code class="docutils literal notranslate"><span class="pre">0</span></code>。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="calendar.Calendar.itermonthdays2">
<span class="sig-name descname"><span class="pre">itermonthdays2</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">year</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">month</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>为 <em>year</em> 年 <em>month</em> 月返回一个与 <a class="reference internal" href="#calendar.Calendar.itermonthdates" title="calendar.Calendar.itermonthdates"><code class="xref py py-meth docutils literal notranslate"><span class="pre">itermonthdates()</span></code></a> 类似的迭代器，但不会受 <a class="reference internal" href="datetime.xhtml#datetime.date" title="datetime.date"><code class="xref py py-class docutils literal notranslate"><span class="pre">datetime.date</span></code></a> 范围的限制。迭代器中的每一个元素为由日数和代表星期几的数字组成的元组。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="calendar.Calendar.itermonthdays3">
<span class="sig-name descname"><span class="pre">itermonthdays3</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">year</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">month</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>为 <em>year</em> 年 <em>month</em> 月返回一个与 <a class="reference internal" href="#calendar.Calendar.itermonthdates" title="calendar.Calendar.itermonthdates"><code class="xref py py-meth docutils literal notranslate"><span class="pre">itermonthdates()</span></code></a> 类似的迭代器，但不会受 <a class="reference internal" href="datetime.xhtml#datetime.date" title="datetime.date"><code class="xref py py-class docutils literal notranslate"><span class="pre">datetime.date</span></code></a> 范围的限制。迭代器的元素为一个由年、月、日组成的元组。</p>
<div class="versionadded">
<p><span class="versionmodified added">Added in version 3.7.</span></p>
</div>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="calendar.Calendar.itermonthdays4">
<span class="sig-name descname"><span class="pre">itermonthdays4</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">year</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">month</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>为 <em>year</em> 年 <em>month</em> 月返回一个与 <a class="reference internal" href="#calendar.Calendar.itermonthdates" title="calendar.Calendar.itermonthdates"><code class="xref py py-meth docutils literal notranslate"><span class="pre">itermonthdates()</span></code></a> 类似的迭代器，但不会受 <a class="reference internal" href="datetime.xhtml#datetime.date" title="datetime.date"><code class="xref py py-class docutils literal notranslate"><span class="pre">datetime.date</span></code></a> 范围的限制。迭代器的元素为一个由年、月、日和代表星期几的数字组成的元组。</p>
<div class="versionadded">
<p><span class="versionmodified added">Added in version 3.7.</span></p>
</div>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="calendar.Calendar.monthdatescalendar">
<span class="sig-name descname"><span class="pre">monthdatescalendar</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">year</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">month</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>返回 <em>year</em> 年 <em>month</em> 月的周组成的列表。列表中的每一个周是由七个 <a class="reference internal" href="datetime.xhtml#datetime.date" title="datetime.date"><code class="xref py py-class docutils literal notranslate"><span class="pre">datetime.date</span></code></a> 对象组成的列表。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="calendar.Calendar.monthdays2calendar">
<span class="sig-name descname"><span class="pre">monthdays2calendar</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">year</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">month</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>返回 <em>year</em> 年 <em>month</em> 月的周组成的列表。列表中的每一个周是七个由日数和代表星期几的数字组成的元组的列表。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="calendar.Calendar.monthdayscalendar">
<span class="sig-name descname"><span class="pre">monthdayscalendar</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">year</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">month</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>返回 <em>year</em> 年 <em>month</em> 月的周组成的列表。列表中的每一个周是由七个日数组成的列表。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="calendar.Calendar.yeardatescalendar">
<span class="sig-name descname"><span class="pre">yeardatescalendar</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">year</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">width</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">3</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>返回可以用来格式化的指定年月的数据。返回的值是一个列表，列表是月份组成的行。每一行包含了最多 <em>width</em> 个月(默认为3)。每个月包含了4到6周，每周包含1--7天。每一天使用 <a class="reference internal" href="datetime.xhtml#datetime.date" title="datetime.date"><code class="xref py py-class docutils literal notranslate"><span class="pre">datetime.date</span></code></a> 对象。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="calendar.Calendar.yeardays2calendar">
<span class="sig-name descname"><span class="pre">yeardays2calendar</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">year</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">width</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">3</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>返回可以用来模式化的指定年月的数据(与 <a class="reference internal" href="#calendar.Calendar.yeardatescalendar" title="calendar.Calendar.yeardatescalendar"><code class="xref py py-meth docutils literal notranslate"><span class="pre">yeardatescalendar()</span></code></a> 类似)。周列表的元素是由表示日期的数字和表示星期几的数字组成的元组。不在这个月的日子为0。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="calendar.Calendar.yeardayscalendar">
<span class="sig-name descname"><span class="pre">yeardayscalendar</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">year</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">width</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">3</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>返回可以用来模式化的指定年月的数据(与 <a class="reference internal" href="#calendar.Calendar.yeardatescalendar" title="calendar.Calendar.yeardatescalendar"><code class="xref py py-meth docutils literal notranslate"><span class="pre">yeardatescalendar()</span></code></a> 类似)。周列表的元素是表示日期的数字。不在这个月的日子为0。</p>
</dd></dl>

</dd></dl>

<dl class="py class">
<dt class="sig sig-object py" id="calendar.TextCalendar">
<em class="property"><span class="pre">class</span><span class="w"> </span></em><span class="sig-prename descclassname"><span class="pre">calendar.</span></span><span class="sig-name descname"><span class="pre">TextCalendar</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">firstweekday</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">0</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>可以使用这个类生成纯文本日历。</p>
<p><a class="reference internal" href="#calendar.TextCalendar" title="calendar.TextCalendar"><code class="xref py py-class docutils literal notranslate"><span class="pre">TextCalendar</span></code></a> 实例有以下方法：</p>
<dl class="py method">
<dt class="sig sig-object py" id="calendar.TextCalendar.formatmonth">
<span class="sig-name descname"><span class="pre">formatmonth</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">theyear</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">themonth</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">w</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">0</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">l</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">0</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>返回指定月的用多行字符串表示的月历。<em>w</em> 为日期列的宽度，日期列居中打印。<em>l</em> 指定了周与周之间的行距。返回的日历还依赖于构造器或者 <a class="reference internal" href="#calendar.setfirstweekday" title="calendar.setfirstweekday"><code class="xref py py-meth docutils literal notranslate"><span class="pre">setfirstweekday()</span></code></a> 方法指定的每周的第一天是哪一天。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="calendar.TextCalendar.prmonth">
<span class="sig-name descname"><span class="pre">prmonth</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">theyear</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">themonth</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">w</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">0</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">l</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">0</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>调用 <a class="reference internal" href="#calendar.TextCalendar.formatmonth" title="calendar.TextCalendar.formatmonth"><code class="xref py py-meth docutils literal notranslate"><span class="pre">formatmonth()</span></code></a> 方法并打印返回的月历。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="calendar.TextCalendar.formatyear">
<span class="sig-name descname"><span class="pre">formatyear</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">theyear</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">w</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">2</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">l</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">1</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">c</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">6</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">m</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">3</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>返回指定年的用多行字符串表示的 <em>m</em> 列年历。可选参数 <em>w</em>、<em>l</em> 和 <em>c</em> 分别表示日期列宽，周的行距，和月与月之间的纵向间隔。同样依赖于构造器或者 <a class="reference internal" href="#calendar.setfirstweekday" title="calendar.setfirstweekday"><code class="xref py py-meth docutils literal notranslate"><span class="pre">setfirstweekday()</span></code></a> 方法指定的每周的第一天是哪一天。可以生成年历的最早的年是哪一年依赖于使用的平台。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="calendar.TextCalendar.pryear">
<span class="sig-name descname"><span class="pre">pryear</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">theyear</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">w</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">2</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">l</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">1</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">c</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">6</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">m</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">3</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>调用 <a class="reference internal" href="#calendar.TextCalendar.formatyear" title="calendar.TextCalendar.formatyear"><code class="xref py py-meth docutils literal notranslate"><span class="pre">formatyear()</span></code></a> 方法并打印返回的年历。</p>
</dd></dl>

</dd></dl>

<dl class="py class">
<dt class="sig sig-object py" id="calendar.HTMLCalendar">
<em class="property"><span class="pre">class</span><span class="w"> </span></em><span class="sig-prename descclassname"><span class="pre">calendar.</span></span><span class="sig-name descname"><span class="pre">HTMLCalendar</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">firstweekday</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">0</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>可以使用这个类生成 HTML 日历。</p>
<p><code class="xref py py-class docutils literal notranslate"><span class="pre">HTMLCalendar</span></code> 实例有以下方法：</p>
<dl class="py method">
<dt class="sig sig-object py" id="calendar.HTMLCalendar.formatmonth">
<span class="sig-name descname"><span class="pre">formatmonth</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">theyear</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">themonth</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">withyear</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">True</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>返回一个 HTML 表格作为指定年月的日历。 <em>withyear</em> 为真，则年份将会包含在表头，否则只显示月份。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="calendar.HTMLCalendar.formatyear">
<span class="sig-name descname"><span class="pre">formatyear</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">theyear</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">width</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">3</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>返回一个 HTML 表格作为指定年份的日历。 <em>width</em> (默认为3) 用于规定每一行显示月份的数量。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="calendar.HTMLCalendar.formatyearpage">
<span class="sig-name descname"><span class="pre">formatyearpage</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">theyear</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">width</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">3</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">css</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">'calendar.css'</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">encoding</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>返回一个完整的 HTML 页面作为指定年份的日历。 <em>width*(默认为3) 用于规定每一行显示的月份数量。 *css</em> 为层叠样式表的名字。如果不使用任何层叠样式表，可以使用 <a class="reference internal" href="constants.xhtml#None" title="None"><code class="xref py py-const docutils literal notranslate"><span class="pre">None</span></code></a> 。 <em>encoding</em> 为输出页面的编码 (默认为系统的默认编码)。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="calendar.HTMLCalendar.formatmonthname">
<span class="sig-name descname"><span class="pre">formatmonthname</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">theyear</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">themonth</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">withyear</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">True</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>将一个月份名称以 HTML 表格行的形式返回。 如果 <em>withyear</em> 为真值则年份将被包括在行中，否则将只使用月份名称。</p>
</dd></dl>

<p><code class="xref py py-class docutils literal notranslate"><span class="pre">HTMLCalendar</span></code> 有以下属性，你可以重写它们来自定义应用日历的样式。</p>
<dl class="py attribute">
<dt class="sig sig-object py" id="calendar.HTMLCalendar.cssclasses">
<span class="sig-name descname"><span class="pre">cssclasses</span></span></dt>
<dd><p>一个对应星期一到星期天的 CSS class 列表。默认列表为</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="n">cssclasses</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&quot;mon&quot;</span><span class="p">,</span> <span class="s2">&quot;tue&quot;</span><span class="p">,</span> <span class="s2">&quot;wed&quot;</span><span class="p">,</span> <span class="s2">&quot;thu&quot;</span><span class="p">,</span> <span class="s2">&quot;fri&quot;</span><span class="p">,</span> <span class="s2">&quot;sat&quot;</span><span class="p">,</span> <span class="s2">&quot;sun&quot;</span><span class="p">]</span>
</pre></div>
</div>
<p>可以向每天加入其它样式</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="n">cssclasses</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&quot;mon text-bold&quot;</span><span class="p">,</span> <span class="s2">&quot;tue&quot;</span><span class="p">,</span> <span class="s2">&quot;wed&quot;</span><span class="p">,</span> <span class="s2">&quot;thu&quot;</span><span class="p">,</span> <span class="s2">&quot;fri&quot;</span><span class="p">,</span> <span class="s2">&quot;sat&quot;</span><span class="p">,</span> <span class="s2">&quot;sun red&quot;</span><span class="p">]</span>
</pre></div>
</div>
<p>需要注意的是，列表的长度必须为7。</p>
</dd></dl>

<dl class="py attribute">
<dt class="sig sig-object py" id="calendar.HTMLCalendar.cssclass_noday">
<span class="sig-name descname"><span class="pre">cssclass_noday</span></span></dt>
<dd><p>工作日的 CSS 类在上个月或下个月发生。</p>
<div class="versionadded">
<p><span class="versionmodified added">Added in version 3.7.</span></p>
</div>
</dd></dl>

<dl class="py attribute">
<dt class="sig sig-object py" id="calendar.HTMLCalendar.cssclasses_weekday_head">
<span class="sig-name descname"><span class="pre">cssclasses_weekday_head</span></span></dt>
<dd><p>用于标题行中的工作日名称的 CSS 类 列表。默认值与 <a class="reference internal" href="#calendar.HTMLCalendar.cssclasses" title="calendar.HTMLCalendar.cssclasses"><code class="xref py py-attr docutils literal notranslate"><span class="pre">cssclasses</span></code></a> 相同。</p>
<div class="versionadded">
<p><span class="versionmodified added">Added in version 3.7.</span></p>
</div>
</dd></dl>

<dl class="py attribute">
<dt class="sig sig-object py" id="calendar.HTMLCalendar.cssclass_month_head">
<span class="sig-name descname"><span class="pre">cssclass_month_head</span></span></dt>
<dd><p>月份的头 CSS 类（由 <a class="reference internal" href="#calendar.HTMLCalendar.formatmonthname" title="calendar.HTMLCalendar.formatmonthname"><code class="xref py py-meth docutils literal notranslate"><span class="pre">formatmonthname()</span></code></a> 使用）。默认值为 <code class="docutils literal notranslate"><span class="pre">&quot;month&quot;</span></code> 。</p>
<div class="versionadded">
<p><span class="versionmodified added">Added in version 3.7.</span></p>
</div>
</dd></dl>

<dl class="py attribute">
<dt class="sig sig-object py" id="calendar.HTMLCalendar.cssclass_month">
<span class="sig-name descname"><span class="pre">cssclass_month</span></span></dt>
<dd><p>某个月的月历的 CSS 类（由 <a class="reference internal" href="#calendar.HTMLCalendar.formatmonth" title="calendar.HTMLCalendar.formatmonth"><code class="xref py py-meth docutils literal notranslate"><span class="pre">formatmonth()</span></code></a> 使用）。默认值为 <code class="docutils literal notranslate"><span class="pre">&quot;month&quot;</span></code> 。</p>
<div class="versionadded">
<p><span class="versionmodified added">Added in version 3.7.</span></p>
</div>
</dd></dl>

<dl class="py attribute">
<dt class="sig sig-object py" id="calendar.HTMLCalendar.cssclass_year">
<span class="sig-name descname"><span class="pre">cssclass_year</span></span></dt>
<dd><p>某年的年历的 CSS 类（由 <a class="reference internal" href="#calendar.HTMLCalendar.formatyear" title="calendar.HTMLCalendar.formatyear"><code class="xref py py-meth docutils literal notranslate"><span class="pre">formatyear()</span></code></a> 使用）。默认值为 <code class="docutils literal notranslate"><span class="pre">&quot;year&quot;</span></code> 。</p>
<div class="versionadded">
<p><span class="versionmodified added">Added in version 3.7.</span></p>
</div>
</dd></dl>

<dl class="py attribute">
<dt class="sig sig-object py" id="calendar.HTMLCalendar.cssclass_year_head">
<span class="sig-name descname"><span class="pre">cssclass_year_head</span></span></dt>
<dd><p>年历的·表头 CSS 类（由 <a class="reference internal" href="#calendar.HTMLCalendar.formatyear" title="calendar.HTMLCalendar.formatyear"><code class="xref py py-meth docutils literal notranslate"><span class="pre">formatyear()</span></code></a> 使用）。默认值为 <code class="docutils literal notranslate"><span class="pre">&quot;year&quot;</span></code> 。</p>
<div class="versionadded">
<p><span class="versionmodified added">Added in version 3.7.</span></p>
</div>
</dd></dl>

<p>需要注意的是，尽管上面命名的样式类都是单独出现的(如： <code class="docutils literal notranslate"><span class="pre">cssclass_month</span></code> <code class="docutils literal notranslate"><span class="pre">cssclass_noday</span></code>), 但我们可以使用空格将样式类列表中的多个元素分隔开，例如：</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="s2">&quot;text-bold text-red&quot;</span>
</pre></div>
</div>
<p>下面是一个如何自定义  <code class="xref py py-class docutils literal notranslate"><span class="pre">HTMLCalendar</span></code> 的示例</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="k">class</span> <span class="nc">CustomHTMLCal</span><span class="p">(</span><span class="n">calendar</span><span class="o">.</span><span class="n">HTMLCalendar</span><span class="p">):</span>
    <span class="n">cssclasses</span> <span class="o">=</span> <span class="p">[</span><span class="n">style</span> <span class="o">+</span> <span class="s2">&quot; text-nowrap&quot;</span> <span class="k">for</span> <span class="n">style</span> <span class="ow">in</span>
                  <span class="n">calendar</span><span class="o">.</span><span class="n">HTMLCalendar</span><span class="o">.</span><span class="n">cssclasses</span><span class="p">]</span>
    <span class="n">cssclass_month_head</span> <span class="o">=</span> <span class="s2">&quot;text-center month-head&quot;</span>
    <span class="n">cssclass_month</span> <span class="o">=</span> <span class="s2">&quot;text-center month&quot;</span>
    <span class="n">cssclass_year</span> <span class="o">=</span> <span class="s2">&quot;text-italic lead&quot;</span>
</pre></div>
</div>
</dd></dl>

<dl class="py class">
<dt class="sig sig-object py" id="calendar.LocaleTextCalendar">
<em class="property"><span class="pre">class</span><span class="w"> </span></em><span class="sig-prename descclassname"><span class="pre">calendar.</span></span><span class="sig-name descname"><span class="pre">LocaleTextCalendar</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">firstweekday</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">0</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">locale</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>可以向这个 <a class="reference internal" href="#calendar.TextCalendar" title="calendar.TextCalendar"><code class="xref py py-class docutils literal notranslate"><span class="pre">TextCalendar</span></code></a> 的子类的构造器传入一个语言区域名称并将返回指定语言区域下的月份和星期名称。</p>
</dd></dl>

<dl class="py class">
<dt class="sig sig-object py" id="calendar.LocaleHTMLCalendar">
<em class="property"><span class="pre">class</span><span class="w"> </span></em><span class="sig-prename descclassname"><span class="pre">calendar.</span></span><span class="sig-name descname"><span class="pre">LocaleHTMLCalendar</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">firstweekday</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">0</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">locale</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>可以向这个 <a class="reference internal" href="#calendar.HTMLCalendar" title="calendar.HTMLCalendar"><code class="xref py py-class docutils literal notranslate"><span class="pre">HTMLCalendar</span></code></a> 的子类的构造器传入一个语言区域名称并将返回指定语言区域下的月份和星期名称。</p>
</dd></dl>

<div class="admonition note">
<p class="admonition-title">备注</p>
<p>这两个类的构造器、<code class="xref py py-meth docutils literal notranslate"><span class="pre">formatweekday()</span></code> 和 <code class="xref py py-meth docutils literal notranslate"><span class="pre">formatmonthname()</span></code> 方法会临时将 <code class="docutils literal notranslate"><span class="pre">LC_TIME</span></code> 语言区域更改为给定的 <em>locale</em>。 因为当前语言区域是进程级的设置，所以它们不是线程安全的。</p>
</div>
<p>这个模块为简单的文本日历提供了下列函数。</p>
<dl class="py function">
<dt class="sig sig-object py" id="calendar.setfirstweekday">
<span class="sig-prename descclassname"><span class="pre">calendar.</span></span><span class="sig-name descname"><span class="pre">setfirstweekday</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">weekday</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>设置每一周的开始（<code class="docutils literal notranslate"><span class="pre">0</span></code> 表示星期一，<code class="docutils literal notranslate"><span class="pre">6</span></code> 表示星期天）。提供了 <a class="reference internal" href="#calendar.MONDAY" title="calendar.MONDAY"><code class="xref py py-const docutils literal notranslate"><span class="pre">MONDAY</span></code></a>、<a class="reference internal" href="#calendar.TUESDAY" title="calendar.TUESDAY"><code class="xref py py-const docutils literal notranslate"><span class="pre">TUESDAY</span></code></a>、<a class="reference internal" href="#calendar.WEDNESDAY" title="calendar.WEDNESDAY"><code class="xref py py-const docutils literal notranslate"><span class="pre">WEDNESDAY</span></code></a>、<a class="reference internal" href="#calendar.THURSDAY" title="calendar.THURSDAY"><code class="xref py py-const docutils literal notranslate"><span class="pre">THURSDAY</span></code></a>、<a class="reference internal" href="#calendar.FRIDAY" title="calendar.FRIDAY"><code class="xref py py-const docutils literal notranslate"><span class="pre">FRIDAY</span></code></a>、<a class="reference internal" href="#calendar.SATURDAY" title="calendar.SATURDAY"><code class="xref py py-const docutils literal notranslate"><span class="pre">SATURDAY</span></code></a> 和 <a class="reference internal" href="#calendar.SUNDAY" title="calendar.SUNDAY"><code class="xref py py-const docutils literal notranslate"><span class="pre">SUNDAY</span></code></a> 几个常量值作为方便。例如，设置每周的第一天为星期天：</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="kn">import</span> <span class="nn">calendar</span>
<span class="n">calendar</span><span class="o">.</span><span class="n">setfirstweekday</span><span class="p">(</span><span class="n">calendar</span><span class="o">.</span><span class="n">SUNDAY</span><span class="p">)</span>
</pre></div>
</div>
</dd></dl>

<dl class="py function">
<dt class="sig sig-object py" id="calendar.firstweekday">
<span class="sig-prename descclassname"><span class="pre">calendar.</span></span><span class="sig-name descname"><span class="pre">firstweekday</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>返回当前设置的每星期的第一天的数值。</p>
</dd></dl>

<dl class="py function">
<dt class="sig sig-object py" id="calendar.isleap">
<span class="sig-prename descclassname"><span class="pre">calendar.</span></span><span class="sig-name descname"><span class="pre">isleap</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">year</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>如果 <em>year</em> 是闰年则返回  <a class="reference internal" href="constants.xhtml#True" title="True"><code class="xref py py-const docutils literal notranslate"><span class="pre">True</span></code></a> ,否则返回 <a class="reference internal" href="constants.xhtml#False" title="False"><code class="xref py py-const docutils literal notranslate"><span class="pre">False</span></code></a>。</p>
</dd></dl>

<dl class="py function">
<dt class="sig sig-object py" id="calendar.leapdays">
<span class="sig-prename descclassname"><span class="pre">calendar.</span></span><span class="sig-name descname"><span class="pre">leapdays</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">y1</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">y2</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>返回在范围 <em>y1</em> 至 <em>y2</em> （不包括 y2）之间的闰年的年数，其中 <em>y1</em> 和 <em>y2</em> 是年份。</p>
<p>此函数对于跨越世纪初的范围也适用。</p>
</dd></dl>

<dl class="py function">
<dt class="sig sig-object py" id="calendar.weekday">
<span class="sig-prename descclassname"><span class="pre">calendar.</span></span><span class="sig-name descname"><span class="pre">weekday</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">year</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">month</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">day</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>返回某年（ <code class="docutils literal notranslate"><span class="pre">1970</span></code> -- ...），某月（ <code class="docutils literal notranslate"><span class="pre">1</span></code> -- <code class="docutils literal notranslate"><span class="pre">12</span></code> ），某日（ <code class="docutils literal notranslate"><span class="pre">1</span></code> -- <code class="docutils literal notranslate"><span class="pre">31</span></code> ）是星期几（ <code class="docutils literal notranslate"><span class="pre">0</span></code> 是星期一）。</p>
</dd></dl>

<dl class="py function">
<dt class="sig sig-object py" id="calendar.weekheader">
<span class="sig-prename descclassname"><span class="pre">calendar.</span></span><span class="sig-name descname"><span class="pre">weekheader</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">n</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>返回一个包含星期几的缩写名的头。 <em>n</em> 指定星期几缩写的字符宽度。</p>
</dd></dl>

<dl class="py function">
<dt class="sig sig-object py" id="calendar.monthrange">
<span class="sig-prename descclassname"><span class="pre">calendar.</span></span><span class="sig-name descname"><span class="pre">monthrange</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">year</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">month</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>返回指定 <em>年份</em> 的指定 <em>月份</em> 的第一天是星期几和这个月的天数。</p>
</dd></dl>

<dl class="py function">
<dt class="sig sig-object py" id="calendar.monthcalendar">
<span class="sig-prename descclassname"><span class="pre">calendar.</span></span><span class="sig-name descname"><span class="pre">monthcalendar</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">year</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">month</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>返回表示一个月的日历的矩阵。 每一行代表一周；此月份外的日子由零表示。 每周从周一开始，除非使用 <a class="reference internal" href="#calendar.setfirstweekday" title="calendar.setfirstweekday"><code class="xref py py-func docutils literal notranslate"><span class="pre">setfirstweekday()</span></code></a> 改变设置。</p>
</dd></dl>

<dl class="py function">
<dt class="sig sig-object py" id="calendar.prmonth">
<span class="sig-prename descclassname"><span class="pre">calendar.</span></span><span class="sig-name descname"><span class="pre">prmonth</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">theyear</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">themonth</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">w</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">0</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">l</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">0</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>打印由 <a class="reference internal" href="#calendar.month" title="calendar.month"><code class="xref py py-func docutils literal notranslate"><span class="pre">month()</span></code></a> 返回的一个月的日历。</p>
</dd></dl>

<dl class="py function">
<dt class="sig sig-object py" id="calendar.month">
<span class="sig-prename descclassname"><span class="pre">calendar.</span></span><span class="sig-name descname"><span class="pre">month</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">theyear</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">themonth</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">w</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">0</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">l</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">0</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>使用 <a class="reference internal" href="#calendar.TextCalendar" title="calendar.TextCalendar"><code class="xref py py-class docutils literal notranslate"><span class="pre">TextCalendar</span></code></a> 类的 <a class="reference internal" href="#calendar.TextCalendar.formatmonth" title="calendar.TextCalendar.formatmonth"><code class="xref py py-meth docutils literal notranslate"><span class="pre">formatmonth()</span></code></a> 返回多行字符串形式的月份日历。</p>
</dd></dl>

<dl class="py function">
<dt class="sig sig-object py" id="calendar.prcal">
<span class="sig-prename descclassname"><span class="pre">calendar.</span></span><span class="sig-name descname"><span class="pre">prcal</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">year</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">w</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">0</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">l</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">0</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">c</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">6</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">m</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">3</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>打印由 <a class="reference internal" href="#module-calendar" title="calendar: Functions for working with calendars, including some emulation of the Unix cal program."><code class="xref py py-func docutils literal notranslate"><span class="pre">calendar()</span></code></a> 返回的整年的日历。</p>
</dd></dl>

<dl class="py function">
<dt class="sig sig-object py" id="calendar.calendar">
<span class="sig-prename descclassname"><span class="pre">calendar.</span></span><span class="sig-name descname"><span class="pre">calendar</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">year</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">w</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">2</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">l</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">1</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">c</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">6</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">m</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">3</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>使用 <a class="reference internal" href="#calendar.TextCalendar" title="calendar.TextCalendar"><code class="xref py py-class docutils literal notranslate"><span class="pre">TextCalendar</span></code></a> 类的 <a class="reference internal" href="#calendar.TextCalendar.formatyear" title="calendar.TextCalendar.formatyear"><code class="xref py py-meth docutils literal notranslate"><span class="pre">formatyear()</span></code></a> 返回一个整年的 3 列日历。</p>
</dd></dl>

<dl class="py function">
<dt class="sig sig-object py" id="calendar.timegm">
<span class="sig-prename descclassname"><span class="pre">calendar.</span></span><span class="sig-name descname"><span class="pre">timegm</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">tuple</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>一个不相关但很好用的函数，它接受一个时间元组例如 <a class="reference internal" href="time.xhtml#module-time" title="time: Time access and conversions."><code class="xref py py-mod docutils literal notranslate"><span class="pre">time</span></code></a> 模块中的 <a class="reference internal" href="time.xhtml#time.gmtime" title="time.gmtime"><code class="xref py py-func docutils literal notranslate"><span class="pre">gmtime()</span></code></a> 函数的返回并返回相应的 Unix 时间戳值，假定 1970 年开始计数， POSIX 编码。实际上， <a class="reference internal" href="time.xhtml#time.gmtime" title="time.gmtime"><code class="xref py py-func docutils literal notranslate"><span class="pre">time.gmtime()</span></code></a> 和 <a class="reference internal" href="#calendar.timegm" title="calendar.timegm"><code class="xref py py-func docutils literal notranslate"><span class="pre">timegm()</span></code></a> 是彼此相反的。</p>
</dd></dl>

<p><a class="reference internal" href="#module-calendar" title="calendar: Functions for working with calendars, including some emulation of the Unix cal program."><code class="xref py py-mod docutils literal notranslate"><span class="pre">calendar</span></code></a> 模块导出以下数据属性：</p>
<dl class="py data">
<dt class="sig sig-object py" id="calendar.day_name">
<span class="sig-prename descclassname"><span class="pre">calendar.</span></span><span class="sig-name descname"><span class="pre">day_name</span></span></dt>
<dd><p>在当前语言环境下表示星期几的数组。</p>
</dd></dl>

<dl class="py data">
<dt class="sig sig-object py" id="calendar.day_abbr">
<span class="sig-prename descclassname"><span class="pre">calendar.</span></span><span class="sig-name descname"><span class="pre">day_abbr</span></span></dt>
<dd><p>在当前语言环境下表示星期几缩写的数组。</p>
</dd></dl>

<dl class="py data">
<dt class="sig sig-object py" id="calendar.MONDAY">
<span class="sig-prename descclassname"><span class="pre">calendar.</span></span><span class="sig-name descname"><span class="pre">MONDAY</span></span></dt>
<dt class="sig sig-object py" id="calendar.TUESDAY">
<span class="sig-prename descclassname"><span class="pre">calendar.</span></span><span class="sig-name descname"><span class="pre">TUESDAY</span></span></dt>
<dt class="sig sig-object py" id="calendar.WEDNESDAY">
<span class="sig-prename descclassname"><span class="pre">calendar.</span></span><span class="sig-name descname"><span class="pre">WEDNESDAY</span></span></dt>
<dt class="sig sig-object py" id="calendar.THURSDAY">
<span class="sig-prename descclassname"><span class="pre">calendar.</span></span><span class="sig-name descname"><span class="pre">THURSDAY</span></span></dt>
<dt class="sig sig-object py" id="calendar.FRIDAY">
<span class="sig-prename descclassname"><span class="pre">calendar.</span></span><span class="sig-name descname"><span class="pre">FRIDAY</span></span></dt>
<dt class="sig sig-object py" id="calendar.SATURDAY">
<span class="sig-prename descclassname"><span class="pre">calendar.</span></span><span class="sig-name descname"><span class="pre">SATURDAY</span></span></dt>
<dt class="sig sig-object py" id="calendar.SUNDAY">
<span class="sig-prename descclassname"><span class="pre">calendar.</span></span><span class="sig-name descname"><span class="pre">SUNDAY</span></span></dt>
<dd><p>星期内每日序号的别名，其中 <code class="docutils literal notranslate"><span class="pre">MONDAY</span></code> 是 <code class="docutils literal notranslate"><span class="pre">0</span></code> 而 <code class="docutils literal notranslate"><span class="pre">SUNDAY</span></code> 是 <code class="docutils literal notranslate"><span class="pre">6</span></code>。</p>
<div class="versionadded">
<p><span class="versionmodified added">Added in version 3.12.</span></p>
</div>
</dd></dl>

<dl class="py class">
<dt class="sig sig-object py" id="calendar.Day">
<em class="property"><span class="pre">class</span><span class="w"> </span></em><span class="sig-prename descclassname"><span class="pre">calendar.</span></span><span class="sig-name descname"><span class="pre">Day</span></span></dt>
<dd><p>将星期内的每一天定义为整数常量的枚举。 该枚举的成员以 <a class="reference internal" href="#calendar.MONDAY" title="calendar.MONDAY"><code class="xref py py-data docutils literal notranslate"><span class="pre">MONDAY</span></code></a> 至 <a class="reference internal" href="#calendar.SUNDAY" title="calendar.SUNDAY"><code class="xref py py-data docutils literal notranslate"><span class="pre">SUNDAY</span></code></a> 的形式导出到模块作用域。</p>
<div class="versionadded">
<p><span class="versionmodified added">Added in version 3.12.</span></p>
</div>
</dd></dl>

<dl class="py data">
<dt class="sig sig-object py" id="calendar.month_name">
<span class="sig-prename descclassname"><span class="pre">calendar.</span></span><span class="sig-name descname"><span class="pre">month_name</span></span></dt>
<dd><p>在当前语言环境下表示一年中月份的数组。这遵循一月的月号为 1 的通常惯例，所以它的长度为 13 且 <code class="docutils literal notranslate"><span class="pre">month_name[0]</span></code> 是空字符串。</p>
</dd></dl>

<dl class="py data">
<dt class="sig sig-object py" id="calendar.month_abbr">
<span class="sig-prename descclassname"><span class="pre">calendar.</span></span><span class="sig-name descname"><span class="pre">month_abbr</span></span></dt>
<dd><p>在当前语言环境下表示月份简写的数组。这遵循一月的月号为 1 的通常惯例，所以它的长度为 13 且 <code class="docutils literal notranslate"><span class="pre">month_abbr[0]</span></code> 是空字符串。</p>
</dd></dl>

<dl class="py data">
<dt class="sig sig-object py" id="calendar.JANUARY">
<span class="sig-prename descclassname"><span class="pre">calendar.</span></span><span class="sig-name descname"><span class="pre">JANUARY</span></span></dt>
<dt class="sig sig-object py" id="calendar.FEBRUARY">
<span class="sig-prename descclassname"><span class="pre">calendar.</span></span><span class="sig-name descname"><span class="pre">FEBRUARY</span></span></dt>
<dt class="sig sig-object py" id="calendar.MARCH">
<span class="sig-prename descclassname"><span class="pre">calendar.</span></span><span class="sig-name descname"><span class="pre">MARCH</span></span></dt>
<dt class="sig sig-object py" id="calendar.APRIL">
<span class="sig-prename descclassname"><span class="pre">calendar.</span></span><span class="sig-name descname"><span class="pre">APRIL</span></span></dt>
<dt class="sig sig-object py" id="calendar.MAY">
<span class="sig-prename descclassname"><span class="pre">calendar.</span></span><span class="sig-name descname"><span class="pre">MAY</span></span></dt>
<dt class="sig sig-object py" id="calendar.JUNE">
<span class="sig-prename descclassname"><span class="pre">calendar.</span></span><span class="sig-name descname"><span class="pre">JUNE</span></span></dt>
<dt class="sig sig-object py" id="calendar.JULY">
<span class="sig-prename descclassname"><span class="pre">calendar.</span></span><span class="sig-name descname"><span class="pre">JULY</span></span></dt>
<dt class="sig sig-object py" id="calendar.AUGUST">
<span class="sig-prename descclassname"><span class="pre">calendar.</span></span><span class="sig-name descname"><span class="pre">AUGUST</span></span></dt>
<dt class="sig sig-object py" id="calendar.SEPTEMBER">
<span class="sig-prename descclassname"><span class="pre">calendar.</span></span><span class="sig-name descname"><span class="pre">SEPTEMBER</span></span></dt>
<dt class="sig sig-object py" id="calendar.OCTOBER">
<span class="sig-prename descclassname"><span class="pre">calendar.</span></span><span class="sig-name descname"><span class="pre">OCTOBER</span></span></dt>
<dt class="sig sig-object py" id="calendar.NOVEMBER">
<span class="sig-prename descclassname"><span class="pre">calendar.</span></span><span class="sig-name descname"><span class="pre">NOVEMBER</span></span></dt>
<dt class="sig sig-object py" id="calendar.DECEMBER">
<span class="sig-prename descclassname"><span class="pre">calendar.</span></span><span class="sig-name descname"><span class="pre">DECEMBER</span></span></dt>
<dd><p>一年中各个月份的别名，其中 <code class="docutils literal notranslate"><span class="pre">JANUARY</span></code> 是 <code class="docutils literal notranslate"><span class="pre">1</span></code> 而 <code class="docutils literal notranslate"><span class="pre">DECEMBER</span></code> 是 <code class="docutils literal notranslate"><span class="pre">12</span></code>。</p>
<div class="versionadded">
<p><span class="versionmodified added">Added in version 3.12.</span></p>
</div>
</dd></dl>

<dl class="py class">
<dt class="sig sig-object py" id="calendar.Month">
<em class="property"><span class="pre">class</span><span class="w"> </span></em><span class="sig-prename descclassname"><span class="pre">calendar.</span></span><span class="sig-name descname"><span class="pre">Month</span></span></dt>
<dd><p>将一年中各个月份定义为整数常量的枚举。 该枚举的成员以 <a class="reference internal" href="#calendar.JANUARY" title="calendar.JANUARY"><code class="xref py py-data docutils literal notranslate"><span class="pre">JANUARY</span></code></a> 至 <a class="reference internal" href="#calendar.DECEMBER" title="calendar.DECEMBER"><code class="xref py py-data docutils literal notranslate"><span class="pre">DECEMBER</span></code></a> 的形式导出到模块作用域。</p>
<div class="versionadded">
<p><span class="versionmodified added">Added in version 3.12.</span></p>
</div>
</dd></dl>

<p><a class="reference internal" href="#module-calendar" title="calendar: Functions for working with calendars, including some emulation of the Unix cal program."><code class="xref py py-mod docutils literal notranslate"><span class="pre">calendar</span></code></a> 模块定义了以下异常:</p>
<dl class="py exception">
<dt class="sig sig-object py" id="calendar.IllegalMonthError">
<em class="property"><span class="pre">exception</span><span class="w"> </span></em><span class="sig-prename descclassname"><span class="pre">calendar.</span></span><span class="sig-name descname"><span class="pre">IllegalMonthError</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">month</span></span></em><span class="sig-paren">)</span></dt>
<dd><p><a class="reference internal" href="exceptions.xhtml#ValueError" title="ValueError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">ValueError</span></code></a> 的子类，当给定的月份数字超出 1-12 范围（不包括边界值）时引发。</p>
<dl class="py attribute">
<dt class="sig sig-object py" id="calendar.IllegalMonthError.month">
<span class="sig-name descname"><span class="pre">month</span></span></dt>
<dd><p>无效的月份数字。</p>
</dd></dl>

</dd></dl>

<dl class="py exception">
<dt class="sig sig-object py" id="calendar.IllegalWeekdayError">
<em class="property"><span class="pre">exception</span><span class="w"> </span></em><span class="sig-prename descclassname"><span class="pre">calendar.</span></span><span class="sig-name descname"><span class="pre">IllegalWeekdayError</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">weekday</span></span></em><span class="sig-paren">)</span></dt>
<dd><p><a class="reference internal" href="exceptions.xhtml#ValueError" title="ValueError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">ValueError</span></code></a> 的子类，当给定的星期数字超出 0-6 范围（不包括边界值）时引发。</p>
<dl class="py attribute">
<dt class="sig sig-object py" id="calendar.IllegalWeekdayError.weekday">
<span class="sig-name descname"><span class="pre">weekday</span></span></dt>
<dd><p>无效的星期数字。</p>
</dd></dl>

</dd></dl>

<div class="admonition seealso">
<p class="admonition-title">参见</p>
<dl class="simple">
<dt>模块 <a class="reference internal" href="datetime.xhtml#module-datetime" title="datetime: Basic date and time types."><code class="xref py py-mod docutils literal notranslate"><span class="pre">datetime</span></code></a></dt><dd><p>为日期和时间提供与 <a class="reference internal" href="time.xhtml#module-time" title="time: Time access and conversions."><code class="xref py py-mod docutils literal notranslate"><span class="pre">time</span></code></a> 模块相似功能的面向对象接口。</p>
</dd>
<dt>模块 <a class="reference internal" href="time.xhtml#module-time" title="time: Time access and conversions."><code class="xref py py-mod docutils literal notranslate"><span class="pre">time</span></code></a></dt><dd><p>底层时间相关函数。</p>
</dd>
</dl>
</div>
<section id="command-line-usage">
<span id="calendar-cli"></span><h2>命令行用法</h2>
<div class="versionadded">
<p><span class="versionmodified added">Added in version 2.5.</span></p>
</div>
<p><a class="reference internal" href="#module-calendar" title="calendar: Functions for working with calendars, including some emulation of the Unix cal program."><code class="xref py py-mod docutils literal notranslate"><span class="pre">calendar</span></code></a> 模块可以作为脚本从命令行执行以实现交互式地打印日历。</p>
<div class="highlight-shell notranslate"><div class="highlight"><pre><span></span>python<span class="w"> </span>-m<span class="w"> </span>calendar<span class="w"> </span><span class="o">[</span>-h<span class="o">]</span><span class="w"> </span><span class="o">[</span>-L<span class="w"> </span>LOCALE<span class="o">]</span><span class="w"> </span><span class="o">[</span>-e<span class="w"> </span>ENCODING<span class="o">]</span><span class="w"> </span><span class="o">[</span>-t<span class="w"> </span><span class="o">{</span>text,html<span class="o">}]</span>
<span class="w">                   </span><span class="o">[</span>-w<span class="w"> </span>WIDTH<span class="o">]</span><span class="w"> </span><span class="o">[</span>-l<span class="w"> </span>LINES<span class="o">]</span><span class="w"> </span><span class="o">[</span>-s<span class="w"> </span>SPACING<span class="o">]</span><span class="w"> </span><span class="o">[</span>-m<span class="w"> </span>MONTHS<span class="o">]</span><span class="w"> </span><span class="o">[</span>-c<span class="w"> </span>CSS<span class="o">]</span>
<span class="w">                   </span><span class="o">[</span>year<span class="o">]</span><span class="w"> </span><span class="o">[</span>month<span class="o">]</span>
</pre></div>
</div>
<p>例如，打印 2000 年的日历：</p>
<div class="highlight-console notranslate"><div class="highlight"><pre><span></span><span class="gp">$ </span>python<span class="w"> </span>-m<span class="w"> </span>calendar<span class="w"> </span><span class="m">2000</span>
<span class="go">                                  2000</span>

<span class="go">      January                   February                   March</span>
<span class="go">Mo Tu We Th Fr Sa Su      Mo Tu We Th Fr Sa Su      Mo Tu We Th Fr Sa Su</span>
<span class="go">                1  2          1  2  3  4  5  6             1  2  3  4  5</span>
<span class="go"> 3  4  5  6  7  8  9       7  8  9 10 11 12 13       6  7  8  9 10 11 12</span>
<span class="go">10 11 12 13 14 15 16      14 15 16 17 18 19 20      13 14 15 16 17 18 19</span>
<span class="go">17 18 19 20 21 22 23      21 22 23 24 25 26 27      20 21 22 23 24 25 26</span>
<span class="go">24 25 26 27 28 29 30      28 29                     27 28 29 30 31</span>
<span class="go">31</span>

<span class="go">       April                      May                       June</span>
<span class="go">Mo Tu We Th Fr Sa Su      Mo Tu We Th Fr Sa Su      Mo Tu We Th Fr Sa Su</span>
<span class="go">                1  2       1  2  3  4  5  6  7                1  2  3  4</span>
<span class="go"> 3  4  5  6  7  8  9       8  9 10 11 12 13 14       5  6  7  8  9 10 11</span>
<span class="go">10 11 12 13 14 15 16      15 16 17 18 19 20 21      12 13 14 15 16 17 18</span>
<span class="go">17 18 19 20 21 22 23      22 23 24 25 26 27 28      19 20 21 22 23 24 25</span>
<span class="go">24 25 26 27 28 29 30      29 30 31                  26 27 28 29 30</span>

<span class="go">        July                     August                  September</span>
<span class="go">Mo Tu We Th Fr Sa Su      Mo Tu We Th Fr Sa Su      Mo Tu We Th Fr Sa Su</span>
<span class="go">                1  2          1  2  3  4  5  6                   1  2  3</span>
<span class="go"> 3  4  5  6  7  8  9       7  8  9 10 11 12 13       4  5  6  7  8  9 10</span>
<span class="go">10 11 12 13 14 15 16      14 15 16 17 18 19 20      11 12 13 14 15 16 17</span>
<span class="go">17 18 19 20 21 22 23      21 22 23 24 25 26 27      18 19 20 21 22 23 24</span>
<span class="go">24 25 26 27 28 29 30      28 29 30 31               25 26 27 28 29 30</span>
<span class="go">31</span>

<span class="go">      October                   November                  December</span>
<span class="go">Mo Tu We Th Fr Sa Su      Mo Tu We Th Fr Sa Su      Mo Tu We Th Fr Sa Su</span>
<span class="go">                   1             1  2  3  4  5                   1  2  3</span>
<span class="go"> 2  3  4  5  6  7  8       6  7  8  9 10 11 12       4  5  6  7  8  9 10</span>
<span class="go"> 9 10 11 12 13 14 15      13 14 15 16 17 18 19      11 12 13 14 15 16 17</span>
<span class="go">16 17 18 19 20 21 22      20 21 22 23 24 25 26      18 19 20 21 22 23 24</span>
<span class="go">23 24 25 26 27 28 29      27 28 29 30               25 26 27 28 29 30 31</span>
<span class="go">30 31</span>
</pre></div>
</div>
<p>可以接受以下选项：</p>
<dl class="std option">
<dt class="sig sig-object std" id="cmdoption-calendar-help">
<span id="cmdoption-calendar-h"></span><span class="sig-name descname"><span class="pre">--help</span></span><span class="sig-prename descclassname"></span><span class="sig-prename descclassname"><span class="pre">,</span> </span><span class="sig-name descname"><span class="pre">-h</span></span><span class="sig-prename descclassname"></span></dt>
<dd><p>显示帮助信息并退出。</p>
</dd></dl>

<dl class="std option">
<dt class="sig sig-object std" id="cmdoption-calendar-locale">
<span id="cmdoption-calendar-L"></span><span class="sig-name descname"><span class="pre">--locale</span></span><span class="sig-prename descclassname"> <span class="pre">LOCALE</span></span><span class="sig-prename descclassname"><span class="pre">,</span> </span><span class="sig-name descname"><span class="pre">-L</span></span><span class="sig-prename descclassname"> <span class="pre">LOCALE</span></span></dt>
<dd><p>月份和星期名称所使用的语言区域。 默认为英语。</p>
</dd></dl>

<dl class="std option">
<dt class="sig sig-object std" id="cmdoption-calendar-encoding">
<span id="cmdoption-calendar-e"></span><span class="sig-name descname"><span class="pre">--encoding</span></span><span class="sig-prename descclassname"> <span class="pre">ENCODING</span></span><span class="sig-prename descclassname"><span class="pre">,</span> </span><span class="sig-name descname"><span class="pre">-e</span></span><span class="sig-prename descclassname"> <span class="pre">ENCODING</span></span></dt>
<dd><p>输出所使用的编码格式。 如果设置了 <a class="reference internal" href="#cmdoption-calendar-locale"><code class="xref std std-option docutils literal notranslate"><span class="pre">--locale</span></code></a> 则 <a class="reference internal" href="#cmdoption-calendar-encoding"><code class="xref std std-option docutils literal notranslate"><span class="pre">--encoding</span></code></a> 将是必须的。</p>
</dd></dl>

<dl class="std option">
<dt class="sig sig-object std" id="cmdoption-calendar-type">
<span id="cmdoption-calendar-t"></span><span class="sig-name descname"><span class="pre">--type</span></span><span class="sig-prename descclassname"> <span class="pre">{text,html}</span></span><span class="sig-prename descclassname"><span class="pre">,</span> </span><span class="sig-name descname"><span class="pre">-t</span></span><span class="sig-prename descclassname"> <span class="pre">{text,html}</span></span></dt>
<dd><p>将日历以文本或 HTML 文档的形式打印到终端。</p>
</dd></dl>

<dl class="std option">
<dt class="sig sig-object std" id="cmdoption-calendar-arg-year">
<span class="sig-name descname"><span class="pre">year</span></span><span class="sig-prename descclassname"></span></dt>
<dd><p>要打印日历的年份。 必须是 1 到 9999 之间的数字。 默认为当前年份。</p>
</dd></dl>

<dl class="std option">
<dt class="sig sig-object std" id="cmdoption-calendar-arg-month">
<span class="sig-name descname"><span class="pre">month</span></span><span class="sig-prename descclassname"></span></dt>
<dd><p>指定 <a class="reference internal" href="#cmdoption-calendar-arg-year"><code class="xref std std-option docutils literal notranslate"><span class="pre">year</span></code></a> 中要打印日历的月份。 必须是 1 到 12 之间的数字，且只能在文本模式下使用。 默认打印全年的日历。</p>
</dd></dl>

<p><em>文本模式选项:</em></p>
<dl class="std option">
<dt class="sig sig-object std" id="cmdoption-calendar-width">
<span id="cmdoption-calendar-w"></span><span class="sig-name descname"><span class="pre">--width</span></span><span class="sig-prename descclassname"> <span class="pre">WIDTH</span></span><span class="sig-prename descclassname"><span class="pre">,</span> </span><span class="sig-name descname"><span class="pre">-w</span></span><span class="sig-prename descclassname"> <span class="pre">WIDTH</span></span></dt>
<dd><p>以终端的列数表示的日期列宽度。 日期将打印在列中央。 小于 2 的值将被忽略。 默认为 2。</p>
</dd></dl>

<dl class="std option">
<dt class="sig sig-object std" id="cmdoption-calendar-lines">
<span id="cmdoption-calendar-l"></span><span class="sig-name descname"><span class="pre">--lines</span></span><span class="sig-prename descclassname"> <span class="pre">LINES</span></span><span class="sig-prename descclassname"><span class="pre">,</span> </span><span class="sig-name descname"><span class="pre">-l</span></span><span class="sig-prename descclassname"> <span class="pre">LINES</span></span></dt>
<dd><p>以终端的行数表示的每周的行数。 日期将顶端对齐打印。小于 1 的值将被忽略。 默认为 1。</p>
</dd></dl>

<dl class="std option">
<dt class="sig sig-object std" id="cmdoption-calendar-spacing">
<span id="cmdoption-calendar-s"></span><span class="sig-name descname"><span class="pre">--spacing</span></span><span class="sig-prename descclassname"> <span class="pre">SPACING</span></span><span class="sig-prename descclassname"><span class="pre">,</span> </span><span class="sig-name descname"><span class="pre">-s</span></span><span class="sig-prename descclassname"> <span class="pre">SPACING</span></span></dt>
<dd><p>列中的月份之间的空格。 小于 2 的值将被忽略。 默认为 6。</p>
</dd></dl>

<dl class="std option">
<dt class="sig sig-object std" id="cmdoption-calendar-months">
<span id="cmdoption-calendar-m"></span><span class="sig-name descname"><span class="pre">--months</span></span><span class="sig-prename descclassname"> <span class="pre">MONTHS</span></span><span class="sig-prename descclassname"><span class="pre">,</span> </span><span class="sig-name descname"><span class="pre">-m</span></span><span class="sig-prename descclassname"> <span class="pre">MONTHS</span></span></dt>
<dd><p>每行打印的月份数。 默认为 3。</p>
</dd></dl>

<p><em>HTML 模式选项:</em></p>
<dl class="std option">
<dt class="sig sig-object std" id="cmdoption-calendar-css">
<span id="cmdoption-calendar-c"></span><span class="sig-name descname"><span class="pre">--css</span></span><span class="sig-prename descclassname"> <span class="pre">CSS</span></span><span class="sig-prename descclassname"><span class="pre">,</span> </span><span class="sig-name descname"><span class="pre">-c</span></span><span class="sig-prename descclassname"> <span class="pre">CSS</span></span></dt>
<dd><p>日历要使用的 CSS 样式表的路径。 该路径必须是相对于所生成的 HTML，或是一个绝对 HTTP 或 <code class="docutils literal notranslate"><span class="pre">file:///</span></code> URL。</p>
</dd></dl>

</section>
</section>


            <div class="clearer"></div>
          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>