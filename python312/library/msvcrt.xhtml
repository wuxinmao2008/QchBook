<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta name="viewport" content="width=device-width, initial-scale=1" />
<meta property="og:title" content="msvcrt --- 来自 MS VC++ 运行时的有用例程" />
<meta property="og:type" content="website" />
<meta property="og:url" content="https://docs.python.org/3/library/msvcrt.xhtml" />
<meta property="og:site_name" content="Python documentation" />
<meta property="og:description" content="这些函数提供了对 Windows 平台上一些有用功能的访问。一些更高级别的模块使用这些函数来构建其服务的 Windows 实现。 例如， getpass 模块在实现 getpass() 函数时使用了这些函数。 关于这些函数的更多信息可以在平台 API 文档中找到。 该模块实现了控制台 I/O API 的普通和宽字符变体。普通的 API 只处理ASCII字符，国际化应用受限。应该尽可能地使用宽..." />
<meta property="og:image" content="https://docs.python.org/3/_static/og-image.png" />
<meta property="og:image:alt" content="Python documentation" />
<meta name="description" content="这些函数提供了对 Windows 平台上一些有用功能的访问。一些更高级别的模块使用这些函数来构建其服务的 Windows 实现。 例如， getpass 模块在实现 getpass() 函数时使用了这些函数。 关于这些函数的更多信息可以在平台 API 文档中找到。 该模块实现了控制台 I/O API 的普通和宽字符变体。普通的 API 只处理ASCII字符，国际化应用受限。应该尽可能地使用宽..." />
<meta property="og:image:width" content="200" />
<meta property="og:image:height" content="200" />
<meta name="theme-color" content="#3776ab" />

    <title>msvcrt --- 来自 MS VC++ 运行时的有用例程</title>
    <link rel="stylesheet" type="text/css" href="../_static/pygments.css" />
    <link rel="stylesheet" type="text/css" href="../_static/epub.css" />
    <link rel="canonical" href="https://docs.python.org/3/library/msvcrt.html" />
    
      
    

    
    <style>
      @media only screen {
        table.full-width-table {
            width: 100%;
        }
      }
    </style>
 

  </head><body>


    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <section id="module-msvcrt">
<span id="msvcrt-useful-routines-from-the-ms-vc-runtime"></span><h1><code class="xref py py-mod docutils literal notranslate"><span class="pre">msvcrt</span></code> --- 来自 MS VC++ 运行时的有用例程</h1>
<hr class="docutils" />
<p>这些函数提供了对 Windows 平台上一些有用功能的访问。一些更高级别的模块使用这些函数来构建其服务的 Windows 实现。 例如， <a class="reference internal" href="getpass.xhtml#module-getpass" title="getpass: Portable reading of passwords and retrieval of the userid."><code class="xref py py-mod docutils literal notranslate"><span class="pre">getpass</span></code></a> 模块在实现 <a class="reference internal" href="getpass.xhtml#module-getpass" title="getpass: Portable reading of passwords and retrieval of the userid."><code class="xref py py-func docutils literal notranslate"><span class="pre">getpass()</span></code></a> 函数时使用了这些函数。</p>
<p>关于这些函数的更多信息可以在平台 API 文档中找到。</p>
<p>该模块实现了控制台 I/O API 的普通和宽字符变体。普通的 API 只处理ASCII字符，国际化应用受限。应该尽可能地使用宽字符 API 。</p>
<div class="versionchanged">
<p><span class="versionmodified changed">在 3.3 版本发生变更: </span>此模块中过去会引发 <a class="reference internal" href="exceptions.xhtml#IOError" title="IOError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">IOError</span></code></a> 的操作现在将引发 <a class="reference internal" href="exceptions.xhtml#OSError" title="OSError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">OSError</span></code></a>。</p>
</div>
<section id="file-operations">
<span id="msvcrt-files"></span><h2>文件操作</h2>
<dl class="py function">
<dt class="sig sig-object py" id="msvcrt.locking">
<span class="sig-prename descclassname"><span class="pre">msvcrt.</span></span><span class="sig-name descname"><span class="pre">locking</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">fd</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">mode</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">nbytes</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>基于文件描述符 <em>fd</em> 从 C 运行时锁定文件的某一部分。 失败时引发 <a class="reference internal" href="exceptions.xhtml#OSError" title="OSError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">OSError</span></code></a>。 锁定的文件区域从当前文件位置扩展 <em>nbytes</em> 个字节，并可能持续到走出文件末尾。 <em>mode</em> 必须为下面列出的 <code class="xref py py-const docutils literal notranslate"><span class="pre">LK_*</span></code> 常量之一。 一个文件中的多个区域可以被同时锁定，但是不能重叠。 相邻的区域不会被合并；它们必须单独被解锁。</p>
<p class="audit-hook">引发一个 <a class="reference internal" href="sys.xhtml#auditing"><span class="std std-ref">审计事件</span></a> <code class="docutils literal notranslate"><span class="pre">msvcrt.locking</span></code>，附带参数 <code class="docutils literal notranslate"><span class="pre">fd</span></code>, <code class="docutils literal notranslate"><span class="pre">mode</span></code>, <code class="docutils literal notranslate"><span class="pre">nbytes</span></code>。</p>
</dd></dl>

<dl class="py data">
<dt class="sig sig-object py" id="msvcrt.LK_LOCK">
<span class="sig-prename descclassname"><span class="pre">msvcrt.</span></span><span class="sig-name descname"><span class="pre">LK_LOCK</span></span></dt>
<dt class="sig sig-object py" id="msvcrt.LK_RLCK">
<span class="sig-prename descclassname"><span class="pre">msvcrt.</span></span><span class="sig-name descname"><span class="pre">LK_RLCK</span></span></dt>
<dd><p>锁定指定的字节数据。 如果字节数据无法被锁定，程序会在 1 秒之后立即重试。 如果在 10 次尝试后字节数据仍无法被锁定，则会引发 <a class="reference internal" href="exceptions.xhtml#OSError" title="OSError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">OSError</span></code></a>。</p>
</dd></dl>

<dl class="py data">
<dt class="sig sig-object py" id="msvcrt.LK_NBLCK">
<span class="sig-prename descclassname"><span class="pre">msvcrt.</span></span><span class="sig-name descname"><span class="pre">LK_NBLCK</span></span></dt>
<dt class="sig sig-object py" id="msvcrt.LK_NBRLCK">
<span class="sig-prename descclassname"><span class="pre">msvcrt.</span></span><span class="sig-name descname"><span class="pre">LK_NBRLCK</span></span></dt>
<dd><p>锁定指定的字节数据。 如果字节数据无法被锁定，则会引发 <a class="reference internal" href="exceptions.xhtml#OSError" title="OSError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">OSError</span></code></a>。</p>
</dd></dl>

<dl class="py data">
<dt class="sig sig-object py" id="msvcrt.LK_UNLCK">
<span class="sig-prename descclassname"><span class="pre">msvcrt.</span></span><span class="sig-name descname"><span class="pre">LK_UNLCK</span></span></dt>
<dd><p>解锁指定的字节数据，该对象必须在之前被锁定。</p>
</dd></dl>

<dl class="py function">
<dt class="sig sig-object py" id="msvcrt.setmode">
<span class="sig-prename descclassname"><span class="pre">msvcrt.</span></span><span class="sig-name descname"><span class="pre">setmode</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">fd</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">flags</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>设置文件描述符 <em>fd</em> 的行结束符转写模式。 要将其设为文本模式，则 <em>flags</em> 应当为 <a class="reference internal" href="os.xhtml#os.O_TEXT" title="os.O_TEXT"><code class="xref py py-const docutils literal notranslate"><span class="pre">os.O_TEXT</span></code></a>；设为二进制模式，则应当为 <a class="reference internal" href="os.xhtml#os.O_BINARY" title="os.O_BINARY"><code class="xref py py-const docutils literal notranslate"><span class="pre">os.O_BINARY</span></code></a>。</p>
</dd></dl>

<dl class="py function">
<dt class="sig sig-object py" id="msvcrt.open_osfhandle">
<span class="sig-prename descclassname"><span class="pre">msvcrt.</span></span><span class="sig-name descname"><span class="pre">open_osfhandle</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">handle</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">flags</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>基于文件句柄 <em>handle</em> 创建一个 C 运行时文件描述符。 <em>flags</em> 形参应当 <a class="reference internal" href="os.xhtml#os.O_APPEND" title="os.O_APPEND"><code class="xref py py-const docutils literal notranslate"><span class="pre">os.O_APPEND</span></code></a>, <a class="reference internal" href="os.xhtml#os.O_RDONLY" title="os.O_RDONLY"><code class="xref py py-const docutils literal notranslate"><span class="pre">os.O_RDONLY</span></code></a> 和 <a class="reference internal" href="os.xhtml#os.O_TEXT" title="os.O_TEXT"><code class="xref py py-const docutils literal notranslate"><span class="pre">os.O_TEXT</span></code></a> 按位 OR 的结果。 返回的文件描述符可以被用作 <a class="reference internal" href="os.xhtml#os.fdopen" title="os.fdopen"><code class="xref py py-func docutils literal notranslate"><span class="pre">os.fdopen()</span></code></a> 的形参以创建一个文件对象。</p>
<p class="audit-hook">引发一个 <a class="reference internal" href="sys.xhtml#auditing"><span class="std std-ref">审计事件</span></a> <code class="docutils literal notranslate"><span class="pre">msvcrt.open_osfhandle</span></code>，附带参数 <code class="docutils literal notranslate"><span class="pre">handle</span></code>, <code class="docutils literal notranslate"><span class="pre">flags</span></code>。</p>
</dd></dl>

<dl class="py function">
<dt class="sig sig-object py" id="msvcrt.get_osfhandle">
<span class="sig-prename descclassname"><span class="pre">msvcrt.</span></span><span class="sig-name descname"><span class="pre">get_osfhandle</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">fd</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>返回文件描述符 <em>fd</em> 的文件句柄。 如果 <em>fd</em> 不能被识别则会引发 <a class="reference internal" href="exceptions.xhtml#OSError" title="OSError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">OSError</span></code></a>。</p>
<p class="audit-hook">引发一个 <a class="reference internal" href="sys.xhtml#auditing"><span class="std std-ref">审计事件</span></a> <code class="docutils literal notranslate"><span class="pre">msvcrt.get_osfhandle</span></code>，附带参数 <code class="docutils literal notranslate"><span class="pre">fd</span></code>。</p>
</dd></dl>

</section>
<section id="console-i-o">
<span id="msvcrt-console"></span><h2>控制台 I/O</h2>
<dl class="py function">
<dt class="sig sig-object py" id="msvcrt.kbhit">
<span class="sig-prename descclassname"><span class="pre">msvcrt.</span></span><span class="sig-name descname"><span class="pre">kbhit</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>如果有某个按键正在等待被读取则返回 <code class="docutils literal notranslate"><span class="pre">True</span></code>。</p>
</dd></dl>

<dl class="py function">
<dt class="sig sig-object py" id="msvcrt.getch">
<span class="sig-prename descclassname"><span class="pre">msvcrt.</span></span><span class="sig-name descname"><span class="pre">getch</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>读取一个按键并将结果字符返回为一个字节串。 不会有内容回显到缝制台。 如果还没有任何键被按下此调用将会阻塞，但它将不会等待 <kbd class="kbd docutils literal notranslate">Enter</kbd> 被按下。 如果按下的键是一个特殊功能键，此函数将返回 <code class="docutils literal notranslate"><span class="pre">'\000'</span></code> 或 <code class="docutils literal notranslate"><span class="pre">'\xe0'</span></code>；下一次调用将返回键代码。 <kbd class="kbd compound docutils literal notranslate"><kbd class="kbd docutils literal notranslate">Control</kbd>-<kbd class="kbd docutils literal notranslate">C</kbd></kbd> 按钮无法使用此函数来读取。</p>
</dd></dl>

<dl class="py function">
<dt class="sig sig-object py" id="msvcrt.getwch">
<span class="sig-prename descclassname"><span class="pre">msvcrt.</span></span><span class="sig-name descname"><span class="pre">getwch</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p><a class="reference internal" href="#msvcrt.getch" title="msvcrt.getch"><code class="xref py py-func docutils literal notranslate"><span class="pre">getch()</span></code></a> 的宽字符版本，返回一个 Unicode 值。</p>
</dd></dl>

<dl class="py function">
<dt class="sig sig-object py" id="msvcrt.getche">
<span class="sig-prename descclassname"><span class="pre">msvcrt.</span></span><span class="sig-name descname"><span class="pre">getche</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>类似于 <a class="reference internal" href="#msvcrt.getch" title="msvcrt.getch"><code class="xref py py-func docutils literal notranslate"><span class="pre">getch()</span></code></a>，但按键如果表示一个可打印字符则它将被回显。</p>
</dd></dl>

<dl class="py function">
<dt class="sig sig-object py" id="msvcrt.getwche">
<span class="sig-prename descclassname"><span class="pre">msvcrt.</span></span><span class="sig-name descname"><span class="pre">getwche</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p><a class="reference internal" href="#msvcrt.getche" title="msvcrt.getche"><code class="xref py py-func docutils literal notranslate"><span class="pre">getche()</span></code></a> 的宽字符版本，返回一个 Unicode 值。</p>
</dd></dl>

<dl class="py function">
<dt class="sig sig-object py" id="msvcrt.putch">
<span class="sig-prename descclassname"><span class="pre">msvcrt.</span></span><span class="sig-name descname"><span class="pre">putch</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">char</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>将字符串 <em>char</em> 打印到终端，不使用缓冲区。</p>
</dd></dl>

<dl class="py function">
<dt class="sig sig-object py" id="msvcrt.putwch">
<span class="sig-prename descclassname"><span class="pre">msvcrt.</span></span><span class="sig-name descname"><span class="pre">putwch</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">unicode_char</span></span></em><span class="sig-paren">)</span></dt>
<dd><p><a class="reference internal" href="#msvcrt.putch" title="msvcrt.putch"><code class="xref py py-func docutils literal notranslate"><span class="pre">putch()</span></code></a> 的宽字符版本，接受一个 Unicode 值。</p>
</dd></dl>

<dl class="py function">
<dt class="sig sig-object py" id="msvcrt.ungetch">
<span class="sig-prename descclassname"><span class="pre">msvcrt.</span></span><span class="sig-name descname"><span class="pre">ungetch</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">char</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>使得字节串 <em>char</em> 被“推回”终端缓冲区；它将是被 <a class="reference internal" href="#msvcrt.getch" title="msvcrt.getch"><code class="xref py py-func docutils literal notranslate"><span class="pre">getch()</span></code></a> 或 <a class="reference internal" href="#msvcrt.getche" title="msvcrt.getche"><code class="xref py py-func docutils literal notranslate"><span class="pre">getche()</span></code></a> 读取的下一个字符。</p>
</dd></dl>

<dl class="py function">
<dt class="sig sig-object py" id="msvcrt.ungetwch">
<span class="sig-prename descclassname"><span class="pre">msvcrt.</span></span><span class="sig-name descname"><span class="pre">ungetwch</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">unicode_char</span></span></em><span class="sig-paren">)</span></dt>
<dd><p><a class="reference internal" href="#msvcrt.ungetch" title="msvcrt.ungetch"><code class="xref py py-func docutils literal notranslate"><span class="pre">ungetch()</span></code></a> 的宽字符版本，接受一个 Unicode 值。</p>
</dd></dl>

</section>
<section id="other-functions">
<span id="msvcrt-other"></span><h2>其他函数</h2>
<dl class="py function">
<dt class="sig sig-object py" id="msvcrt.heapmin">
<span class="sig-prename descclassname"><span class="pre">msvcrt.</span></span><span class="sig-name descname"><span class="pre">heapmin</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>强制 <code class="xref c c-func docutils literal notranslate"><span class="pre">malloc()</span></code> 堆清空自身并将未使用的块返回给操作系统。 失败时，这将引发 <a class="reference internal" href="exceptions.xhtml#OSError" title="OSError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">OSError</span></code></a>。</p>
</dd></dl>

<dl class="py data">
<dt class="sig sig-object py" id="msvcrt.CRT_ASSEMBLY_VERSION">
<span class="sig-prename descclassname"><span class="pre">msvcrt.</span></span><span class="sig-name descname"><span class="pre">CRT_ASSEMBLY_VERSION</span></span></dt>
<dd><p>CRT 汇编版，来自 <code class="file docutils literal notranslate"><span class="pre">crtassem.h</span></code> 头文件。</p>
</dd></dl>

<dl class="py data">
<dt class="sig sig-object py" id="msvcrt.VC_ASSEMBLY_PUBLICKEYTOKEN">
<span class="sig-prename descclassname"><span class="pre">msvcrt.</span></span><span class="sig-name descname"><span class="pre">VC_ASSEMBLY_PUBLICKEYTOKEN</span></span></dt>
<dd><p>VC 汇编公钥凭据，来自 <code class="file docutils literal notranslate"><span class="pre">crtassem.h</span></code> 头文件。</p>
</dd></dl>

<dl class="py data">
<dt class="sig sig-object py" id="msvcrt.LIBRARIES_ASSEMBLY_NAME_PREFIX">
<span class="sig-prename descclassname"><span class="pre">msvcrt.</span></span><span class="sig-name descname"><span class="pre">LIBRARIES_ASSEMBLY_NAME_PREFIX</span></span></dt>
<dd><p>库汇编名称前缀，来自 <code class="file docutils literal notranslate"><span class="pre">crtassem.h</span></code> 头文件。</p>
</dd></dl>

</section>
</section>


            <div class="clearer"></div>
          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>