<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta name="viewport" content="width=device-width, initial-scale=1" />
<meta property="og:title" content="platform --- 获取底层平台的标识数据" />
<meta property="og:type" content="website" />
<meta property="og:url" content="https://docs.python.org/3/library/platform.xhtml" />
<meta property="og:site_name" content="Python documentation" />
<meta property="og:description" content="源代码： Lib/platform.py[https://github.com/python/cpython/tree/3.12/Lib/platform.py] 跨平台: Java平台: Windows平台: macOS 平台: Unix 平台: Linux 平台:" />
<meta property="og:image" content="https://docs.python.org/3/_static/og-image.png" />
<meta property="og:image:alt" content="Python documentation" />
<meta name="description" content="源代码： Lib/platform.py[https://github.com/python/cpython/tree/3.12/Lib/platform.py] 跨平台: Java平台: Windows平台: macOS 平台: Unix 平台: Linux 平台:" />
<meta property="og:image:width" content="200" />
<meta property="og:image:height" content="200" />
<meta name="theme-color" content="#3776ab" />

    <title>platform --- 获取底层平台的标识数据</title>
    <link rel="stylesheet" type="text/css" href="../_static/pygments.css" />
    <link rel="stylesheet" type="text/css" href="../_static/epub.css" />
    <link rel="canonical" href="https://docs.python.org/3/library/platform.html" />
    
      
    

    
    <style>
      @media only screen {
        table.full-width-table {
            width: 100%;
        }
      }
    </style>
 

  </head><body>


    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <section id="module-platform">
<span id="platform-access-to-underlying-platform-s-identifying-data"></span><h1><code class="xref py py-mod docutils literal notranslate"><span class="pre">platform</span></code> --- 获取底层平台的标识数据</h1>
<p><strong>源代码：</strong> <a class="reference external" href="https://github.com/python/cpython/tree/3.12/Lib/platform.py">Lib/platform.py</a><span class="link-target"> [https://github.com/python/cpython/tree/3.12/Lib/platform.py]</span></p>
<hr class="docutils" />
<div class="admonition note">
<p class="admonition-title">备注</p>
<p>特定平台按字母顺序排列，Linux 包括在 Unix 小节之中。</p>
</div>
<section id="cross-platform">
<h2>跨平台</h2>
<dl class="py function">
<dt class="sig sig-object py" id="platform.architecture">
<span class="sig-prename descclassname"><span class="pre">platform.</span></span><span class="sig-name descname"><span class="pre">architecture</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">executable</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">sys.executable</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">bits</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">''</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">linkage</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">''</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>查询给定的可执行文件（默认为 Python 解释器二进制码文件）来获取各种架构信息。</p>
<p>返回一个元素 <code class="docutils literal notranslate"><span class="pre">(bits,</span> <span class="pre">linkage)</span></code>，其中包含可执行文件所使用的位架构和链接格式信息。 这两个值均以字符串形式返回。</p>
<p>无法确定的值将返回为形参预设所给出的值。 如果给出的位数为 <code class="docutils literal notranslate"><span class="pre">''</span></code>，则会使用 <code class="docutils literal notranslate"><span class="pre">sizeof(pointer)</span></code> (或者当 Python 版本 &lt; 1.5.2 时为 <code class="docutils literal notranslate"><span class="pre">sizeof(long)</span></code>) 作为所支持的指针大小的提示。</p>
<p>此函数依赖于系统的 <code class="file docutils literal notranslate"><span class="pre">file</span></code> 命令来执行实际的操作。 这在几乎所有 Unix 平台和某些非 Unix 平台上只有当可执行文件指向 Python 解释器时才可用。 当以上要求不满足时将会使用合理的默认值。</p>
<div class="admonition note">
<p class="admonition-title">备注</p>
<p>在 macOS (也许还有其他平台) 上，可执行文件可能是包含多种架构的通用文件。</p>
<p>要获取当前解释器的“64 位性”，更可靠的做法是查询 <a class="reference internal" href="sys.xhtml#sys.maxsize" title="sys.maxsize"><code class="xref py py-data docutils literal notranslate"><span class="pre">sys.maxsize</span></code></a> 属性:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="n">is_64bits</span> <span class="o">=</span> <span class="n">sys</span><span class="o">.</span><span class="n">maxsize</span> <span class="o">&gt;</span> <span class="mi">2</span><span class="o">**</span><span class="mi">32</span>
</pre></div>
</div>
</div>
</dd></dl>

<dl class="py function">
<dt class="sig sig-object py" id="platform.machine">
<span class="sig-prename descclassname"><span class="pre">platform.</span></span><span class="sig-name descname"><span class="pre">machine</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>返回机器类型，例如 <code class="docutils literal notranslate"><span class="pre">'AMD64'</span></code> 。 如果该值无法确定则会返回一个空字符串。</p>
</dd></dl>

<dl class="py function">
<dt class="sig sig-object py" id="platform.node">
<span class="sig-prename descclassname"><span class="pre">platform.</span></span><span class="sig-name descname"><span class="pre">node</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>返回计算机的网络名称（可能不是完整限定名称！）。 如果该值无法确定则会返回一个空字符串。</p>
</dd></dl>

<dl class="py function">
<dt class="sig sig-object py" id="platform.platform">
<span class="sig-prename descclassname"><span class="pre">platform.</span></span><span class="sig-name descname"><span class="pre">platform</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">aliased</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">False</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">terse</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">False</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>返回一个标识底层平台的字符串，其中带有尽可能多的有用信息。</p>
<p>输出信息的目标是“人类易读”而非机器易解析。 它在不同平台上可能看起来不一致，这是有意为之的。</p>
<p>如果 <em>aliased</em> 为真值，此函数将使用各种平台不同与其通常名称的别名来报告系统名称，例如 SunOS 将被报告为 Solaris。 <a class="reference internal" href="#platform.system_alias" title="platform.system_alias"><code class="xref py py-func docutils literal notranslate"><span class="pre">system_alias()</span></code></a> 函数将被用于实现此功能。</p>
<p>将 <em>terse</em> 设为真值将导致此函数只返回标识平台所必须的最小量信息。</p>
<div class="versionchanged">
<p><span class="versionmodified changed">在 3.8 版本发生变更: </span>在 macOS 上，此函数现在会在 <a class="reference internal" href="#platform.mac_ver" title="platform.mac_ver"><code class="xref py py-func docutils literal notranslate"><span class="pre">mac_ver()</span></code></a> 返回的发布版字符串非空时使用它，以便获取 macOS 版本而非 darwin 版本。</p>
</div>
</dd></dl>

<dl class="py function">
<dt class="sig sig-object py" id="platform.processor">
<span class="sig-prename descclassname"><span class="pre">platform.</span></span><span class="sig-name descname"><span class="pre">processor</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>返回（真实的）处理器名称，例如 <code class="docutils literal notranslate"><span class="pre">'amdk6'</span></code>。</p>
<p>如果该值无法确定则将返回空字符串。 请注意许多平台都不提供此信息或是简单地返回与 <a class="reference internal" href="#platform.machine" title="platform.machine"><code class="xref py py-func docutils literal notranslate"><span class="pre">machine()</span></code></a> 相同的值。 NetBSD 则会提供此信息。</p>
</dd></dl>

<dl class="py function">
<dt class="sig sig-object py" id="platform.python_build">
<span class="sig-prename descclassname"><span class="pre">platform.</span></span><span class="sig-name descname"><span class="pre">python_build</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>返回一个元组 <code class="docutils literal notranslate"><span class="pre">(buildno,</span> <span class="pre">builddate)</span></code>，以字符串表示的 Python 编译代码和日期。</p>
</dd></dl>

<dl class="py function">
<dt class="sig sig-object py" id="platform.python_compiler">
<span class="sig-prename descclassname"><span class="pre">platform.</span></span><span class="sig-name descname"><span class="pre">python_compiler</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>返回一个标识用于编译 Python 的编译器的的字符串。</p>
</dd></dl>

<dl class="py function">
<dt class="sig sig-object py" id="platform.python_branch">
<span class="sig-prename descclassname"><span class="pre">platform.</span></span><span class="sig-name descname"><span class="pre">python_branch</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>返回一个标识 Python 实现的 SCM 分支的字符串。</p>
</dd></dl>

<dl class="py function">
<dt class="sig sig-object py" id="platform.python_implementation">
<span class="sig-prename descclassname"><span class="pre">platform.</span></span><span class="sig-name descname"><span class="pre">python_implementation</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>返回一个标识 Python 实现的字符串。 可能的返回值有: 'CPython', 'IronPython', 'Jython', 'PyPy'。</p>
</dd></dl>

<dl class="py function">
<dt class="sig sig-object py" id="platform.python_revision">
<span class="sig-prename descclassname"><span class="pre">platform.</span></span><span class="sig-name descname"><span class="pre">python_revision</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>返回一个标识 Python 实现的 SCM 修订版的字符串。</p>
</dd></dl>

<dl class="py function">
<dt class="sig sig-object py" id="platform.python_version">
<span class="sig-prename descclassname"><span class="pre">platform.</span></span><span class="sig-name descname"><span class="pre">python_version</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>将 Python 版本以字符串 <code class="docutils literal notranslate"><span class="pre">'major.minor.patchlevel'</span></code> 形式返回。</p>
<p>请注意此返回值不同于 Python <code class="docutils literal notranslate"><span class="pre">sys.version</span></code>，它将总是包括 patchlevel (默认为 0)。</p>
</dd></dl>

<dl class="py function">
<dt class="sig sig-object py" id="platform.python_version_tuple">
<span class="sig-prename descclassname"><span class="pre">platform.</span></span><span class="sig-name descname"><span class="pre">python_version_tuple</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>将 Python 版本以字符串元组 <code class="docutils literal notranslate"><span class="pre">(major,</span> <span class="pre">minor,</span> <span class="pre">patchlevel)</span></code> 形式返回。</p>
<p>请注意此返回值不同于 Python <code class="docutils literal notranslate"><span class="pre">sys.version</span></code>，它将总是包括 patchlevel (默认为 <code class="docutils literal notranslate"><span class="pre">'0'</span></code>)。</p>
</dd></dl>

<dl class="py function">
<dt class="sig sig-object py" id="platform.release">
<span class="sig-prename descclassname"><span class="pre">platform.</span></span><span class="sig-name descname"><span class="pre">release</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>返回系统的发布版本，例如 <code class="docutils literal notranslate"><span class="pre">'2.2.0'</span></code> 或 <code class="docutils literal notranslate"><span class="pre">'NT'</span></code>，如果该值无法确定则将返回一个空字符串。</p>
</dd></dl>

<dl class="py function">
<dt class="sig sig-object py" id="platform.system">
<span class="sig-prename descclassname"><span class="pre">platform.</span></span><span class="sig-name descname"><span class="pre">system</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>返回系统平台/OS的名称，例如 <code class="docutils literal notranslate"><span class="pre">'Linux'</span></code>, <code class="docutils literal notranslate"><span class="pre">'Darwin'</span></code>, <code class="docutils literal notranslate"><span class="pre">'Java'</span></code>, <code class="docutils literal notranslate"><span class="pre">'Windows'</span></code>。 如果该值无法确定则将返回一个空字符串。</p>
</dd></dl>

<dl class="py function">
<dt class="sig sig-object py" id="platform.system_alias">
<span class="sig-prename descclassname"><span class="pre">platform.</span></span><span class="sig-name descname"><span class="pre">system_alias</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">system</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">release</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">version</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>返回别名为某些系统所使用的常见营销名称的 <code class="docutils literal notranslate"><span class="pre">(system,</span> <span class="pre">release,</span> <span class="pre">version)</span></code>。 它还会在可能导致混淆的情况下对信息进行一些重排序操作。</p>
</dd></dl>

<dl class="py function">
<dt class="sig sig-object py" id="platform.version">
<span class="sig-prename descclassname"><span class="pre">platform.</span></span><span class="sig-name descname"><span class="pre">version</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>返回系统的发布版本信息，例如 <code class="docutils literal notranslate"><span class="pre">'#3</span> <span class="pre">on</span> <span class="pre">degas'</span></code>。 如果该值无法确定则将返回一个空字符串。</p>
</dd></dl>

<dl class="py function">
<dt class="sig sig-object py" id="platform.uname">
<span class="sig-prename descclassname"><span class="pre">platform.</span></span><span class="sig-name descname"><span class="pre">uname</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>具有高可移植性的 uname 接口。 返回包含六个属性的 <a class="reference internal" href="collections.xhtml#collections.namedtuple" title="collections.namedtuple"><code class="xref py py-func docutils literal notranslate"><span class="pre">namedtuple()</span></code></a>: <a class="reference internal" href="#platform.system" title="platform.system"><code class="xref py py-attr docutils literal notranslate"><span class="pre">system</span></code></a>, <a class="reference internal" href="#platform.node" title="platform.node"><code class="xref py py-attr docutils literal notranslate"><span class="pre">node</span></code></a>, <a class="reference internal" href="#platform.release" title="platform.release"><code class="xref py py-attr docutils literal notranslate"><span class="pre">release</span></code></a>, <a class="reference internal" href="#platform.version" title="platform.version"><code class="xref py py-attr docutils literal notranslate"><span class="pre">version</span></code></a>, <a class="reference internal" href="#platform.machine" title="platform.machine"><code class="xref py py-attr docutils literal notranslate"><span class="pre">machine</span></code></a> 和 <a class="reference internal" href="#platform.processor" title="platform.processor"><code class="xref py py-attr docutils literal notranslate"><span class="pre">processor</span></code></a>。</p>
<p><a class="reference internal" href="#platform.processor" title="platform.processor"><code class="xref py py-attr docutils literal notranslate"><span class="pre">processor</span></code></a> 将根据需要延后获取。</p>
<p>注意：前两个属性名称与 <a class="reference internal" href="os.xhtml#os.uname" title="os.uname"><code class="xref py py-func docutils literal notranslate"><span class="pre">os.uname()</span></code></a> 所提供的名称不同，后者是被命名为 <code class="xref py py-attr docutils literal notranslate"><span class="pre">sysname</span></code> 和 <code class="xref py py-attr docutils literal notranslate"><span class="pre">nodename</span></code>。</p>
<p>无法确定的条目会被设为 <code class="docutils literal notranslate"><span class="pre">''</span></code>。</p>
<div class="versionchanged">
<p><span class="versionmodified changed">在 3.3 版本发生变更: </span>结果由元组改为 <a class="reference internal" href="collections.xhtml#collections.namedtuple" title="collections.namedtuple"><code class="xref py py-func docutils literal notranslate"><span class="pre">namedtuple()</span></code></a> 。</p>
</div>
<div class="versionchanged">
<p><span class="versionmodified changed">在 3.9 版本发生变更: </span><a class="reference internal" href="#platform.processor" title="platform.processor"><code class="xref py py-attr docutils literal notranslate"><span class="pre">processor</span></code></a> 将延后而不是立即被获取。</p>
</div>
</dd></dl>

</section>
<section id="java-platform">
<h2>Java平台</h2>
<dl class="py function">
<dt class="sig sig-object py" id="platform.java_ver">
<span class="sig-prename descclassname"><span class="pre">platform.</span></span><span class="sig-name descname"><span class="pre">java_ver</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">release</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">''</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">vendor</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">''</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">vminfo</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">('',</span> <span class="pre">'',</span> <span class="pre">'')</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">osinfo</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">('',</span> <span class="pre">'',</span> <span class="pre">'')</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>Jython 的版本接口</p>
<p>返回一个元组 <code class="docutils literal notranslate"><span class="pre">(release,</span> <span class="pre">vendor,</span> <span class="pre">vminfo,</span> <span class="pre">osinfo)</span></code>，其中 <em>vminfo</em> 为元组 <code class="docutils literal notranslate"><span class="pre">(vm_name,</span> <span class="pre">vm_release,</span> <span class="pre">vm_vendor)</span></code> 而 <em>osinfo</em> 为元组 <code class="docutils literal notranslate"><span class="pre">(os_name,</span> <span class="pre">os_version,</span> <span class="pre">os_arch)</span></code>。 无法确定的值将设为由形参所给出的默认值 (默认均为 <code class="docutils literal notranslate"><span class="pre">''</span></code>)。</p>
</dd></dl>

</section>
<section id="windows-platform">
<h2>Windows平台</h2>
<dl class="py function">
<dt class="sig sig-object py" id="platform.win32_ver">
<span class="sig-prename descclassname"><span class="pre">platform.</span></span><span class="sig-name descname"><span class="pre">win32_ver</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">release</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">''</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">version</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">''</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">csd</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">''</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">ptype</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">''</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>从 Windows 注册表获取额外的版本信息并返回一个元组 <code class="docutils literal notranslate"><span class="pre">(release,</span> <span class="pre">version,</span> <span class="pre">csd,</span> <span class="pre">ptype)</span></code> 表示 OS 发行版, 版本号, CSD 级别 (Service Pack) 和 OS 类型 (多个/单个处理器)。无法确定的值被设置为作为参数给出的默认值（这些参数都默认为一个空字符串）。</p>
<p>一点提示: <em>ptype</em> 在单处理器的 NT 机器上为 <code class="docutils literal notranslate"><span class="pre">'Uniprocessor</span> <span class="pre">Free'</span></code> 而在多处理器的机器上则为 <code class="docutils literal notranslate"><span class="pre">'Multiprocessor</span> <span class="pre">Free'</span></code>。 <code class="docutils literal notranslate"><span class="pre">'Free'</span></code> 是指该 OS 版本不包含调试代码。 它还可能包含 <code class="docutils literal notranslate"><span class="pre">'Checked'</span></code> 表示该 OS 版本使用了调试代码，即检测参数、范围等的代码。</p>
</dd></dl>

<dl class="py function">
<dt class="sig sig-object py" id="platform.win32_edition">
<span class="sig-prename descclassname"><span class="pre">platform.</span></span><span class="sig-name descname"><span class="pre">win32_edition</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>返回一个代表当前 Windows 版本的字符串，或者在该值无法确定时返回 <code class="docutils literal notranslate"><span class="pre">None</span></code> 。 可能的值包括但不限于 <code class="docutils literal notranslate"><span class="pre">'Enterprise'</span></code>, <code class="docutils literal notranslate"><span class="pre">'IoTUAP'</span></code>, <code class="docutils literal notranslate"><span class="pre">'ServerStandard'</span></code> 和 <code class="docutils literal notranslate"><span class="pre">'nanoserver'</span></code>。</p>
<div class="versionadded">
<p><span class="versionmodified added">Added in version 3.8.</span></p>
</div>
</dd></dl>

<dl class="py function">
<dt class="sig sig-object py" id="platform.win32_is_iot">
<span class="sig-prename descclassname"><span class="pre">platform.</span></span><span class="sig-name descname"><span class="pre">win32_is_iot</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>如果 <a class="reference internal" href="#platform.win32_edition" title="platform.win32_edition"><code class="xref py py-func docutils literal notranslate"><span class="pre">win32_edition()</span></code></a> 返回的 Windows 版本被识别为 IoT 版则返回 <code class="docutils literal notranslate"><span class="pre">True</span></code>。</p>
<div class="versionadded">
<p><span class="versionmodified added">Added in version 3.8.</span></p>
</div>
</dd></dl>

</section>
<section id="macos-platform">
<h2>macOS 平台</h2>
<dl class="py function">
<dt class="sig sig-object py" id="platform.mac_ver">
<span class="sig-prename descclassname"><span class="pre">platform.</span></span><span class="sig-name descname"><span class="pre">mac_ver</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">release</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">''</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">versioninfo</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">('',</span> <span class="pre">'',</span> <span class="pre">'')</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">machine</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">''</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>获取 macOS 版本信息并将其返回为元组 <code class="docutils literal notranslate"><span class="pre">(release,</span> <span class="pre">versioninfo,</span> <span class="pre">machine)</span></code>，其中 <em>versioninfo</em> 是一个元组 <code class="docutils literal notranslate"><span class="pre">(version,</span> <span class="pre">dev_stage,</span> <span class="pre">non_release_version)</span></code>。</p>
<p>无法确定的条目会被设为 <code class="docutils literal notranslate"><span class="pre">''</span></code>。 所有元组条目均为字符串。</p>
</dd></dl>

</section>
<section id="unix-platforms">
<h2>Unix 平台</h2>
<dl class="py function">
<dt class="sig sig-object py" id="platform.libc_ver">
<span class="sig-prename descclassname"><span class="pre">platform.</span></span><span class="sig-name descname"><span class="pre">libc_ver</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">executable</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">sys.executable</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">lib</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">''</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">version</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">''</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">chunksize</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">16384</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>尝试确定可执行文件（默认为 Python 解释器）所链接到的 libc 版本。 返回一个字符串元组 <code class="docutils literal notranslate"><span class="pre">(lib,</span> <span class="pre">version)</span></code>，当查找失败时其默认值将设为给定的形参值。</p>
<p>请注意此函数对于不同 libc 版本向可执行文件添加符号的方式有深层的关联，可能仅适用于使用 <strong class="program">gcc</strong> 编译出来的可执行文件。</p>
<p>文件将按 <em>chunksize</em> 个字节的分块来读取和扫描。</p>
</dd></dl>

</section>
<section id="linux-platforms">
<h2>Linux 平台</h2>
<dl class="py function">
<dt class="sig sig-object py" id="platform.freedesktop_os_release">
<span class="sig-prename descclassname"><span class="pre">platform.</span></span><span class="sig-name descname"><span class="pre">freedesktop_os_release</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>从 <code class="docutils literal notranslate"><span class="pre">os-release</span></code> 文件获取操作系统标识并将其作为一个字典返回。 <code class="docutils literal notranslate"><span class="pre">os-release</span></code> 文件是 <a class="reference external" href="https://www.freedesktop.org/software/systemd/man/os-release.html">freedesktop.org 标准</a><span class="link-target"> [https://www.freedesktop.org/software/systemd/man/os-release.html]</span> 并在大多数 Linux 发行版上可用。 一个重要的例外是 Android 和基于 Android 的发行版。</p>
<p>当 <code class="docutils literal notranslate"><span class="pre">/etc/os-release</span></code> 或 <code class="docutils literal notranslate"><span class="pre">/usr/lib/os-release</span></code> 均无法读取时将引发 <a class="reference internal" href="exceptions.xhtml#OSError" title="OSError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">OSError</span></code></a> 或其子类。</p>
<p>成功时，该函数将返回一个字典，其中键和值均为字符串。 值当中的特殊字符例如 <code class="docutils literal notranslate"><span class="pre">&quot;</span></code> 和 <code class="docutils literal notranslate"><span class="pre">{TX-PL-LABEL}#x60;</span></code> 会被复原。 字段 <code class="docutils literal notranslate"><span class="pre">NAME</span></code>, <code class="docutils literal notranslate"><span class="pre">ID</span></code> 和 <code class="docutils literal notranslate"><span class="pre">PRETTY_NAME</span></code> 总是会按照标准来定义。 所有其他字段都是可选的。  厂商可能会包括额外的字段。</p>
<p>请注意 <code class="docutils literal notranslate"><span class="pre">NAME</span></code>, <code class="docutils literal notranslate"><span class="pre">VERSION</span></code> 和 <code class="docutils literal notranslate"><span class="pre">VARIANT</span></code> 等字段是适用于向用户展示的字符串。 程序应当使用 <code class="docutils literal notranslate"><span class="pre">ID</span></code>, <code class="docutils literal notranslate"><span class="pre">ID_LIKE</span></code>, <code class="docutils literal notranslate"><span class="pre">VERSION_ID</span></code> 或 <code class="docutils literal notranslate"><span class="pre">VARIANT_ID</span></code> 等字段来标识 Linux 发行版。</p>
<p>示例:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="k">def</span> <span class="nf">get_like_distro</span><span class="p">():</span>
    <span class="n">info</span> <span class="o">=</span> <span class="n">platform</span><span class="o">.</span><span class="n">freedesktop_os_release</span><span class="p">()</span>
    <span class="n">ids</span> <span class="o">=</span> <span class="p">[</span><span class="n">info</span><span class="p">[</span><span class="s2">&quot;ID&quot;</span><span class="p">]]</span>
    <span class="k">if</span> <span class="s2">&quot;ID_LIKE&quot;</span> <span class="ow">in</span> <span class="n">info</span><span class="p">:</span>
        <span class="c1"># ids are space separated and ordered by precedence</span>
        <span class="n">ids</span><span class="o">.</span><span class="n">extend</span><span class="p">(</span><span class="n">info</span><span class="p">[</span><span class="s2">&quot;ID_LIKE&quot;</span><span class="p">]</span><span class="o">.</span><span class="n">split</span><span class="p">())</span>
    <span class="k">return</span> <span class="n">ids</span>
</pre></div>
</div>
<div class="versionadded">
<p><span class="versionmodified added">Added in version 3.10.</span></p>
</div>
</dd></dl>

</section>
</section>


            <div class="clearer"></div>
          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>