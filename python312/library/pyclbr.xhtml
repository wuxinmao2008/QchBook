<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta name="viewport" content="width=device-width, initial-scale=1" />
<meta property="og:title" content="pyclbr --- Python module browser support" />
<meta property="og:type" content="website" />
<meta property="og:url" content="https://docs.python.org/3/library/pyclbr.xhtml" />
<meta property="og:site_name" content="Python documentation" />
<meta property="og:description" content="源代码: Lib/pyclbr.py[https://github.com/python/cpython/tree/3.12/Lib/pyclbr.py] pyclbr 模块提供了对于以 Python 编写的模块中定义的函数、类和方法的受限信息。 这种信息足够用来实现一个模块浏览器。 这种信息是从 Python 源代码中直接提取而非通过导入模块，因此该模块可以安全地用于不受信任的代码。 此限..." />
<meta property="og:image" content="https://docs.python.org/3/_static/og-image.png" />
<meta property="og:image:alt" content="Python documentation" />
<meta name="description" content="源代码: Lib/pyclbr.py[https://github.com/python/cpython/tree/3.12/Lib/pyclbr.py] pyclbr 模块提供了对于以 Python 编写的模块中定义的函数、类和方法的受限信息。 这种信息足够用来实现一个模块浏览器。 这种信息是从 Python 源代码中直接提取而非通过导入模块，因此该模块可以安全地用于不受信任的代码。 此限..." />
<meta property="og:image:width" content="200" />
<meta property="og:image:height" content="200" />
<meta name="theme-color" content="#3776ab" />

    <title>pyclbr --- Python module browser support</title>
    <link rel="stylesheet" type="text/css" href="../_static/pygments.css" />
    <link rel="stylesheet" type="text/css" href="../_static/epub.css" />
    <link rel="canonical" href="https://docs.python.org/3/library/pyclbr.html" />
    
      
    

    
    <style>
      @media only screen {
        table.full-width-table {
            width: 100%;
        }
      }
    </style>
 

  </head><body>


    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <section id="module-pyclbr">
<span id="pyclbr-python-module-browser-support"></span><h1><code class="xref py py-mod docutils literal notranslate"><span class="pre">pyclbr</span></code> --- Python module browser support</h1>
<p><strong>源代码:</strong> <a class="reference external" href="https://github.com/python/cpython/tree/3.12/Lib/pyclbr.py">Lib/pyclbr.py</a><span class="link-target"> [https://github.com/python/cpython/tree/3.12/Lib/pyclbr.py]</span></p>
<hr class="docutils" />
<p><a class="reference internal" href="#module-pyclbr" title="pyclbr: Supports information extraction for a Python module browser."><code class="xref py py-mod docutils literal notranslate"><span class="pre">pyclbr</span></code></a> 模块提供了对于以 Python 编写的模块中定义的函数、类和方法的受限信息。 这种信息足够用来实现一个模块浏览器。 这种信息是从 Python 源代码中直接提取而非通过导入模块，因此该模块可以安全地用于不受信任的代码。 此限制使得非 Python 实现的模块无法使用此模块，包括所有标准和可选的扩展模块。</p>
<dl class="py function">
<dt class="sig sig-object py" id="pyclbr.readmodule">
<span class="sig-prename descclassname"><span class="pre">pyclbr.</span></span><span class="sig-name descname"><span class="pre">readmodule</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">module</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">path</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>返回一个将模块层级的类名映射到类描述器的字典。 如果可能，将会包括已导入基类的描述器。 形参 <em>module</em> 为要读取模块名称的字符串；它可能是某个包内部的模块名称。 <em>path</em> 如果给出则为添加到 <code class="docutils literal notranslate"><span class="pre">sys.path</span></code> 开头的目录路径序列，它会被用于定位模块的源代码。</p>
<p>此函数为原始接口，仅保留用于向下兼容。 它会返回以下内容的过滤版本。</p>
</dd></dl>

<dl class="py function">
<dt class="sig sig-object py" id="pyclbr.readmodule_ex">
<span class="sig-prename descclassname"><span class="pre">pyclbr.</span></span><span class="sig-name descname"><span class="pre">readmodule_ex</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">module</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">path</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>返回一个基于字典的树，其中包含与模块中每个用 <code class="docutils literal notranslate"><span class="pre">def</span></code> 或 <code class="docutils literal notranslate"><span class="pre">class</span></code> 语句定义的函数和类相对应的函数和类描述器。 被返回的字典会将模块层级的函数和类名映射到它们的描述器。 嵌套的对象会被输入到它们的上级子目录中。 与 readmodule 一样，<em>module</em> 指明要读取的模块而 <em>path</em> 会被添加到 sys.path。 如果被读取的模块是一个包，则返回的字典将具有 <code class="docutils literal notranslate"><span class="pre">'__path__'</span></code> 键，其值是一个包含包搜索路径的列表。</p>
</dd></dl>

<div class="versionadded">
<p><span class="versionmodified added">Added in version 3.7: </span>嵌套定义的描述器。 它们通过新的子属性来访问。 每个定义都会有一个新的上级属性。</p>
</div>
<p>这些函数所返回的描述器是 Function 和 Class 类的实例。 用户不应自行创建这些类的实例。</p>
<section id="function-objects">
<span id="pyclbr-function-objects"></span><h2>Function 对象</h2>
<dl class="py class">
<dt class="sig sig-object py" id="pyclbr.Function">
<em class="property"><span class="pre">class</span><span class="w"> </span></em><span class="sig-prename descclassname"><span class="pre">pyclbr.</span></span><span class="sig-name descname"><span class="pre">Function</span></span></dt>
<dd><p><code class="xref py py-class docutils literal notranslate"><span class="pre">Function</span></code> 类的实例描述了由 def 语句所定义的函数。 它们具有下列属性：</p>
<dl class="py attribute">
<dt class="sig sig-object py" id="pyclbr.Function.file">
<span class="sig-name descname"><span class="pre">file</span></span></dt>
<dd><p>函数定义所在的文件名称。</p>
</dd></dl>

<dl class="py attribute">
<dt class="sig sig-object py" id="pyclbr.Function.module">
<span class="sig-name descname"><span class="pre">module</span></span></dt>
<dd><p>定义了所描述函数的模块名称。</p>
</dd></dl>

<dl class="py attribute">
<dt class="sig sig-object py" id="pyclbr.Function.name">
<span class="sig-name descname"><span class="pre">name</span></span></dt>
<dd><p>函数名称。</p>
</dd></dl>

<dl class="py attribute">
<dt class="sig sig-object py" id="pyclbr.Function.lineno">
<span class="sig-name descname"><span class="pre">lineno</span></span></dt>
<dd><p>定义在文件中起始位置的行号。</p>
</dd></dl>

<dl class="py attribute">
<dt class="sig sig-object py" id="pyclbr.Function.parent">
<span class="sig-name descname"><span class="pre">parent</span></span></dt>
<dd><p>对于最高层级函数为 <code class="docutils literal notranslate"><span class="pre">None</span></code>。 对于嵌套函数则为上级函数。</p>
<div class="versionadded">
<p><span class="versionmodified added">Added in version 3.7.</span></p>
</div>
</dd></dl>

<dl class="py attribute">
<dt class="sig sig-object py" id="pyclbr.Function.children">
<span class="sig-name descname"><span class="pre">children</span></span></dt>
<dd><p>一个将名称映射到针对嵌套函数和类的描述器的 <a class="reference internal" href="stdtypes.xhtml#dict" title="dict"><code class="xref py py-class docutils literal notranslate"><span class="pre">字典</span></code></a>。</p>
<div class="versionadded">
<p><span class="versionmodified added">Added in version 3.7.</span></p>
</div>
</dd></dl>

<dl class="py attribute">
<dt class="sig sig-object py" id="pyclbr.Function.is_async">
<span class="sig-name descname"><span class="pre">is_async</span></span></dt>
<dd><p><code class="docutils literal notranslate"><span class="pre">True</span></code> 针对使用 <a class="reference internal" href="../reference/compound_stmts.xhtml#async-def"><code class="xref std std-keyword docutils literal notranslate"><span class="pre">async</span></code></a> 前缀定义的函数，其他情况下为 <code class="docutils literal notranslate"><span class="pre">False</span></code>。</p>
<div class="versionadded">
<p><span class="versionmodified added">Added in version 3.10.</span></p>
</div>
</dd></dl>

</dd></dl>

</section>
<section id="class-objects">
<span id="pyclbr-class-objects"></span><h2>Class 对象</h2>
<dl class="py class">
<dt class="sig sig-object py" id="pyclbr.Class">
<em class="property"><span class="pre">class</span><span class="w"> </span></em><span class="sig-prename descclassname"><span class="pre">pyclbr.</span></span><span class="sig-name descname"><span class="pre">Class</span></span></dt>
<dd><p><code class="xref py py-class docutils literal notranslate"><span class="pre">Class</span></code> 类的实例描述了由 class 语句所定义的类。 它们具有与 <a class="reference internal" href="#pyclbr.Function" title="pyclbr.Function"><code class="xref py py-class docutils literal notranslate"><span class="pre">Function</span></code></a> 相同的属性以及两个额外属性。</p>
<dl class="py attribute">
<dt class="sig sig-object py" id="pyclbr.Class.file">
<span class="sig-name descname"><span class="pre">file</span></span></dt>
<dd><p>类定义所在的文件名称。</p>
</dd></dl>

<dl class="py attribute">
<dt class="sig sig-object py" id="pyclbr.Class.module">
<span class="sig-name descname"><span class="pre">module</span></span></dt>
<dd><p>定义了所描述类的模块名称。</p>
</dd></dl>

<dl class="py attribute">
<dt class="sig sig-object py" id="pyclbr.Class.name">
<span class="sig-name descname"><span class="pre">name</span></span></dt>
<dd><p>类名称。</p>
</dd></dl>

<dl class="py attribute">
<dt class="sig sig-object py" id="pyclbr.Class.lineno">
<span class="sig-name descname"><span class="pre">lineno</span></span></dt>
<dd><p>定义在文件中起始位置的行号。</p>
</dd></dl>

<dl class="py attribute">
<dt class="sig sig-object py" id="pyclbr.Class.parent">
<span class="sig-name descname"><span class="pre">parent</span></span></dt>
<dd><p>For top-level classes, <code class="docutils literal notranslate"><span class="pre">None</span></code>.  For nested classes, the parent.</p>
<div class="versionadded">
<p><span class="versionmodified added">Added in version 3.7.</span></p>
</div>
</dd></dl>

<dl class="py attribute">
<dt class="sig sig-object py" id="pyclbr.Class.children">
<span class="sig-name descname"><span class="pre">children</span></span></dt>
<dd><p>将名称映射到嵌套函数和类描述器的字典。</p>
<div class="versionadded">
<p><span class="versionmodified added">Added in version 3.7.</span></p>
</div>
</dd></dl>

<dl class="py attribute">
<dt class="sig sig-object py" id="pyclbr.Class.super">
<span class="sig-name descname"><span class="pre">super</span></span></dt>
<dd><p>一个由 <code class="xref py py-class docutils literal notranslate"><span class="pre">Class</span></code> 对象组成的列表，这些对象描述了相应类的直接基类。 被指定为超类但无法被 <a class="reference internal" href="#pyclbr.readmodule_ex" title="pyclbr.readmodule_ex"><code class="xref py py-func docutils literal notranslate"><span class="pre">readmodule_ex()</span></code></a> 发现的类会作为类名字符串而非 <code class="xref py py-class docutils literal notranslate"><span class="pre">Class</span></code> 对象列出。</p>
</dd></dl>

<dl class="py attribute">
<dt class="sig sig-object py" id="pyclbr.Class.methods">
<span class="sig-name descname"><span class="pre">methods</span></span></dt>
<dd><p>一个将方法名映射到行号的 <a class="reference internal" href="stdtypes.xhtml#dict" title="dict"><code class="xref py py-class docutils literal notranslate"><span class="pre">字典</span></code></a>。 此属性可从更新的 <a class="reference internal" href="#pyclbr.Class.children" title="pyclbr.Class.children"><code class="xref py py-attr docutils literal notranslate"><span class="pre">children</span></code></a> 字典中获取，但被保留用于向下兼容。</p>
</dd></dl>

</dd></dl>

</section>
</section>


            <div class="clearer"></div>
          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>