<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta name="viewport" content="width=device-width, initial-scale=1" />
<meta property="og:title" content="symtable --- Access to the compiler's symbol tables" />
<meta property="og:type" content="website" />
<meta property="og:url" content="https://docs.python.org/3/library/symtable.xhtml" />
<meta property="og:site_name" content="Python documentation" />
<meta property="og:description" content="Source code： Lib/symtable.py[https://github.com/python/cpython/tree/3.12/Lib/symtable.py] 符号表由编译器在生成字节码之前根据 AST 生成。符号表负责计算代码中每个标识符的作用域。 symtable 提供了一个查看这些表的接口。 符号表的生成: 符号表的查看:" />
<meta property="og:image" content="https://docs.python.org/3/_static/og-image.png" />
<meta property="og:image:alt" content="Python documentation" />
<meta name="description" content="Source code： Lib/symtable.py[https://github.com/python/cpython/tree/3.12/Lib/symtable.py] 符号表由编译器在生成字节码之前根据 AST 生成。符号表负责计算代码中每个标识符的作用域。 symtable 提供了一个查看这些表的接口。 符号表的生成: 符号表的查看:" />
<meta property="og:image:width" content="200" />
<meta property="og:image:height" content="200" />
<meta name="theme-color" content="#3776ab" />

    <title>symtable --- Access to the compiler&#39;s symbol tables</title>
    <link rel="stylesheet" type="text/css" href="../_static/pygments.css" />
    <link rel="stylesheet" type="text/css" href="../_static/epub.css" />
    <link rel="canonical" href="https://docs.python.org/3/library/symtable.html" />
    
      
    

    
    <style>
      @media only screen {
        table.full-width-table {
            width: 100%;
        }
      }
    </style>
 

  </head><body>


    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <section id="module-symtable">
<span id="symtable-access-to-the-compiler-s-symbol-tables"></span><h1><code class="xref py py-mod docutils literal notranslate"><span class="pre">symtable</span></code> --- Access to the compiler's symbol tables</h1>
<p><strong>Source code：</strong> <a class="reference external" href="https://github.com/python/cpython/tree/3.12/Lib/symtable.py">Lib/symtable.py</a><span class="link-target"> [https://github.com/python/cpython/tree/3.12/Lib/symtable.py]</span></p>
<hr class="docutils" />
<p>符号表由编译器在生成字节码之前根据 AST 生成。符号表负责计算代码中每个标识符的作用域。 <a class="reference internal" href="#module-symtable" title="symtable: Interface to the compiler's internal symbol tables."><code class="xref py py-mod docutils literal notranslate"><span class="pre">symtable</span></code></a> 提供了一个查看这些表的接口。</p>
<section id="generating-symbol-tables">
<h2>符号表的生成</h2>
<dl class="py function">
<dt class="sig sig-object py" id="symtable.symtable">
<span class="sig-prename descclassname"><span class="pre">symtable.</span></span><span class="sig-name descname"><span class="pre">symtable</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">code</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">filename</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">compile_type</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>返回 Python 源 <em>代码</em> 顶层的 <a class="reference internal" href="#symtable.SymbolTable" title="symtable.SymbolTable"><code class="xref py py-class docutils literal notranslate"><span class="pre">SymbolTable</span></code></a>。<em>filename</em> 是代码文件名。 <em>compile_type</em> 的含义类似 <a class="reference internal" href="functions.xhtml#compile" title="compile"><code class="xref py py-func docutils literal notranslate"><span class="pre">compile()</span></code></a> 的 <em>mode</em> 参数。</p>
</dd></dl>

</section>
<section id="examining-symbol-tables">
<h2>符号表的查看</h2>
<dl class="py class">
<dt class="sig sig-object py" id="symtable.SymbolTable">
<em class="property"><span class="pre">class</span><span class="w"> </span></em><span class="sig-prename descclassname"><span class="pre">symtable.</span></span><span class="sig-name descname"><span class="pre">SymbolTable</span></span></dt>
<dd><p>某个代码块的命名空间表。构造函数不公开。</p>
<dl class="py method">
<dt class="sig sig-object py" id="symtable.SymbolTable.get_type">
<span class="sig-name descname"><span class="pre">get_type</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>返回符号表的类型。 可能的值有 <code class="docutils literal notranslate"><span class="pre">'class'</span></code>, <code class="docutils literal notranslate"><span class="pre">'module'</span></code>, <code class="docutils literal notranslate"><span class="pre">'function'</span></code>, <code class="docutils literal notranslate"><span class="pre">'annotation'</span></code>, <code class="docutils literal notranslate"><span class="pre">'TypeVar</span> <span class="pre">bound'</span></code>, <code class="docutils literal notranslate"><span class="pre">'type</span> <span class="pre">alias'</span></code> 和 <code class="docutils literal notranslate"><span class="pre">'type</span> <span class="pre">parameter'</span></code>。 后四种指的是不同形式的 <a class="reference internal" href="../reference/executionmodel.xhtml#annotation-scopes"><span class="std std-ref">标注作用域</span></a>。</p>
<div class="versionchanged">
<p><span class="versionmodified changed">在 3.12 版本发生变更: </span>增加 <code class="docutils literal notranslate"><span class="pre">'annotation'</span></code>, <code class="docutils literal notranslate"><span class="pre">'TypeVar</span> <span class="pre">bound'</span></code>, <code class="docutils literal notranslate"><span class="pre">'type</span> <span class="pre">alias'</span></code> 和 <code class="docutils literal notranslate"><span class="pre">'type</span> <span class="pre">parameter'</span></code> 作为可能的返回值。</p>
</div>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="symtable.SymbolTable.get_id">
<span class="sig-name descname"><span class="pre">get_id</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>返回符号表的标识符</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="symtable.SymbolTable.get_name">
<span class="sig-name descname"><span class="pre">get_name</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>返回表名称。 如果表是针对类的则为类名；如果是针对函数的则为函数名；或者如果表是全局的 (<a class="reference internal" href="#symtable.SymbolTable.get_type" title="symtable.SymbolTable.get_type"><code class="xref py py-meth docutils literal notranslate"><span class="pre">get_type()</span></code></a> 返回 <code class="docutils literal notranslate"><span class="pre">'module'</span></code>) 则为 <code class="docutils literal notranslate"><span class="pre">'top'</span></code>。 对于类型形参作用域 (用于泛型类、函数和类型别名)，它将为底层类、函数或类型别名的名称。 对于类型别名作用域，它将为类型别名的名称。 对于 <a class="reference internal" href="typing.xhtml#typing.TypeVar" title="typing.TypeVar"><code class="xref py py-class docutils literal notranslate"><span class="pre">TypeVar</span></code></a> 绑定作用域，它将为 <code class="docutils literal notranslate"><span class="pre">TypeVar</span></code> 的名称。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="symtable.SymbolTable.get_lineno">
<span class="sig-name descname"><span class="pre">get_lineno</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>返回符号表所代表代码块的第一行编号。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="symtable.SymbolTable.is_optimized">
<span class="sig-name descname"><span class="pre">is_optimized</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>如果符号表中的局部变量可能被优化过，则返回 <code class="docutils literal notranslate"><span class="pre">True</span></code>。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="symtable.SymbolTable.is_nested">
<span class="sig-name descname"><span class="pre">is_nested</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>如果代码块是嵌套类或函数，则返回 <code class="docutils literal notranslate"><span class="pre">True</span></code>。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="symtable.SymbolTable.has_children">
<span class="sig-name descname"><span class="pre">has_children</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>如果代码块中有嵌套的命名空间，则返回 <code class="docutils literal notranslate"><span class="pre">True</span></code>。可通过  <a class="reference internal" href="#symtable.SymbolTable.get_children" title="symtable.SymbolTable.get_children"><code class="xref py py-meth docutils literal notranslate"><span class="pre">get_children()</span></code></a> 读取。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="symtable.SymbolTable.get_identifiers">
<span class="sig-name descname"><span class="pre">get_identifiers</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>返回一个包含表中符号名称的视图对象。 参见 <a class="reference internal" href="stdtypes.xhtml#dict-views"><span class="std std-ref">视图对象文档</span></a>。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="symtable.SymbolTable.lookup">
<span class="sig-name descname"><span class="pre">lookup</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">name</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>在符号表中查找 <em>name</em> 并返回一个 <a class="reference internal" href="#symtable.Symbol" title="symtable.Symbol"><code class="xref py py-class docutils literal notranslate"><span class="pre">Symbol</span></code></a> 实例。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="symtable.SymbolTable.get_symbols">
<span class="sig-name descname"><span class="pre">get_symbols</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>返回符号表中所有符号的 <a class="reference internal" href="#symtable.Symbol" title="symtable.Symbol"><code class="xref py py-class docutils literal notranslate"><span class="pre">Symbol</span></code></a> 实例的列表。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="symtable.SymbolTable.get_children">
<span class="sig-name descname"><span class="pre">get_children</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>返回嵌套符号表的列表。</p>
</dd></dl>

</dd></dl>

<dl class="py class">
<dt class="sig sig-object py" id="symtable.Function">
<em class="property"><span class="pre">class</span><span class="w"> </span></em><span class="sig-prename descclassname"><span class="pre">symtable.</span></span><span class="sig-name descname"><span class="pre">Function</span></span></dt>
<dd><p>函数或方法的命名空间。 该类继承自 <a class="reference internal" href="#symtable.SymbolTable" title="symtable.SymbolTable"><code class="xref py py-class docutils literal notranslate"><span class="pre">SymbolTable</span></code></a>。</p>
<dl class="py method">
<dt class="sig sig-object py" id="symtable.Function.get_parameters">
<span class="sig-name descname"><span class="pre">get_parameters</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>返回由函数的参数名组成的元组。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="symtable.Function.get_locals">
<span class="sig-name descname"><span class="pre">get_locals</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>返回函数中局部变量名组成的元组。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="symtable.Function.get_globals">
<span class="sig-name descname"><span class="pre">get_globals</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>返回函数中全局变量名组成的元组。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="symtable.Function.get_nonlocals">
<span class="sig-name descname"><span class="pre">get_nonlocals</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>返回函数中非局部变量名组成的元组。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="symtable.Function.get_frees">
<span class="sig-name descname"><span class="pre">get_frees</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>返回函数中自由变量名组成的元组。</p>
</dd></dl>

</dd></dl>

<dl class="py class">
<dt class="sig sig-object py" id="symtable.Class">
<em class="property"><span class="pre">class</span><span class="w"> </span></em><span class="sig-prename descclassname"><span class="pre">symtable.</span></span><span class="sig-name descname"><span class="pre">Class</span></span></dt>
<dd><p>类的命名空间。 该类继承自 <a class="reference internal" href="#symtable.SymbolTable" title="symtable.SymbolTable"><code class="xref py py-class docutils literal notranslate"><span class="pre">SymbolTable</span></code></a>。</p>
<dl class="py method">
<dt class="sig sig-object py" id="symtable.Class.get_methods">
<span class="sig-name descname"><span class="pre">get_methods</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>返回类中声明的方法名组成的元组。</p>
</dd></dl>

</dd></dl>

<dl class="py class">
<dt class="sig sig-object py" id="symtable.Symbol">
<em class="property"><span class="pre">class</span><span class="w"> </span></em><span class="sig-prename descclassname"><span class="pre">symtable.</span></span><span class="sig-name descname"><span class="pre">Symbol</span></span></dt>
<dd><p><a class="reference internal" href="#symtable.SymbolTable" title="symtable.SymbolTable"><code class="xref py py-class docutils literal notranslate"><span class="pre">SymbolTable</span></code></a> 中的数据项，对应于源码中的某个标识符。构造函数不公开。</p>
<dl class="py method">
<dt class="sig sig-object py" id="symtable.Symbol.get_name">
<span class="sig-name descname"><span class="pre">get_name</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>返回符号名</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="symtable.Symbol.is_referenced">
<span class="sig-name descname"><span class="pre">is_referenced</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>如果符号在代码块中被引用了，则返回 <code class="docutils literal notranslate"><span class="pre">True</span></code>。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="symtable.Symbol.is_imported">
<span class="sig-name descname"><span class="pre">is_imported</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>如果符号是由导入语句创建的，则返回 <code class="docutils literal notranslate"><span class="pre">True</span></code>。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="symtable.Symbol.is_parameter">
<span class="sig-name descname"><span class="pre">is_parameter</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>如果符号是参数，返回 <code class="docutils literal notranslate"><span class="pre">True</span></code>。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="symtable.Symbol.is_global">
<span class="sig-name descname"><span class="pre">is_global</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>如果符号是全局变量，则返回 <code class="docutils literal notranslate"><span class="pre">True</span></code>。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="symtable.Symbol.is_nonlocal">
<span class="sig-name descname"><span class="pre">is_nonlocal</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>如果符号为非局部变量，则返回 <code class="docutils literal notranslate"><span class="pre">True</span></code>。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="symtable.Symbol.is_declared_global">
<span class="sig-name descname"><span class="pre">is_declared_global</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>如果符号用 global 声明为全局变量，则返回 <code class="docutils literal notranslate"><span class="pre">True</span></code>。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="symtable.Symbol.is_local">
<span class="sig-name descname"><span class="pre">is_local</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>如果符号是代码块内的局部变量，则返回 <code class="docutils literal notranslate"><span class="pre">True</span></code>。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="symtable.Symbol.is_annotated">
<span class="sig-name descname"><span class="pre">is_annotated</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>如果符号带有注解，则返回 <code class="docutils literal notranslate"><span class="pre">True</span></code>。</p>
<div class="versionadded">
<p><span class="versionmodified added">Added in version 3.6.</span></p>
</div>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="symtable.Symbol.is_free">
<span class="sig-name descname"><span class="pre">is_free</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>如果符号在代码块中被引用，但未赋值，则返回 <code class="docutils literal notranslate"><span class="pre">True</span></code>。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="symtable.Symbol.is_assigned">
<span class="sig-name descname"><span class="pre">is_assigned</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>如果符号在代码块中赋值，则返回 <code class="docutils literal notranslate"><span class="pre">True</span></code>。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="symtable.Symbol.is_namespace">
<span class="sig-name descname"><span class="pre">is_namespace</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>如果符号名绑定引入了新的命名空间，则返回 <code class="docutils literal notranslate"><span class="pre">True</span></code>。</p>
<p>如果符号名用于函数或类定义语句，则为 True。</p>
<p>例如：</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="n">table</span> <span class="o">=</span> <span class="n">symtable</span><span class="o">.</span><span class="n">symtable</span><span class="p">(</span><span class="s2">&quot;def some_func(): pass&quot;</span><span class="p">,</span> <span class="s2">&quot;string&quot;</span><span class="p">,</span> <span class="s2">&quot;exec&quot;</span><span class="p">)</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">table</span><span class="o">.</span><span class="n">lookup</span><span class="p">(</span><span class="s2">&quot;some_func&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">is_namespace</span><span class="p">()</span>
<span class="go">True</span>
</pre></div>
</div>
<p>注意，一个符号名可以与多个对象绑定。如果结果为 <code class="docutils literal notranslate"><span class="pre">True</span></code>，则该符号名还可以绑定到其他对象上，比如 int 或 list ，且不会引入新的命名空间。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="symtable.Symbol.get_namespaces">
<span class="sig-name descname"><span class="pre">get_namespaces</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>返回与符号名绑定的命名空间的列表。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="symtable.Symbol.get_namespace">
<span class="sig-name descname"><span class="pre">get_namespace</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>返回绑定到这个名称的命名空间。 如果有多个命名空间或没有命名空间被绑定到这个名称，则会引发 <a class="reference internal" href="exceptions.xhtml#ValueError" title="ValueError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">ValueError</span></code></a>。</p>
</dd></dl>

</dd></dl>

</section>
</section>


            <div class="clearer"></div>
          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>