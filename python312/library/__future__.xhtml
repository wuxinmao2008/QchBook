<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta name="viewport" content="width=device-width, initial-scale=1" />
<meta property="og:title" content="__future__ --- Future 语句定义" />
<meta property="og:type" content="website" />
<meta property="og:url" content="https://docs.python.org/3/library/__future__.xhtml" />
<meta property="og:site_name" content="Python documentation" />
<meta property="og:description" content="源代码： Lib/__future__.py[https://github.com/python/cpython/tree/3.12/Lib/__future__.py] from __future__ import feature 形式的导入被称为 future 语句 。 它们会被 Python 编译器当作特例，通过包含 future 语句来允许新的 Python 特性在该特性成为语言标准..." />
<meta property="og:image" content="https://docs.python.org/3/_static/og-image.png" />
<meta property="og:image:alt" content="Python documentation" />
<meta name="description" content="源代码： Lib/__future__.py[https://github.com/python/cpython/tree/3.12/Lib/__future__.py] from __future__ import feature 形式的导入被称为 future 语句 。 它们会被 Python 编译器当作特例，通过包含 future 语句来允许新的 Python 特性在该特性成为语言标准..." />
<meta property="og:image:width" content="200" />
<meta property="og:image:height" content="200" />
<meta name="theme-color" content="#3776ab" />

    <title>__future__ --- Future 语句定义</title>
    <link rel="stylesheet" type="text/css" href="../_static/pygments.css" />
    <link rel="stylesheet" type="text/css" href="../_static/epub.css" />
    <link rel="canonical" href="https://docs.python.org/3/library/__future__.html" />
    
      
    

    
    <style>
      @media only screen {
        table.full-width-table {
            width: 100%;
        }
      }
    </style>
 

  </head><body>


    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <section id="module-__future__">
<span id="future-future-statement-definitions"></span><h1><code class="xref py py-mod docutils literal notranslate"><span class="pre">__future__</span></code> --- Future 语句定义</h1>
<p><strong>源代码：</strong> <a class="reference external" href="https://github.com/python/cpython/tree/3.12/Lib/__future__.py">Lib/__future__.py</a><span class="link-target"> [https://github.com/python/cpython/tree/3.12/Lib/__future__.py]</span></p>
<hr class="docutils" />
<p><code class="docutils literal notranslate"><span class="pre">from</span> <span class="pre">__future__</span> <span class="pre">import</span> <span class="pre">feature</span></code> 形式的导入被称为 <a class="reference internal" href="../reference/simple_stmts.xhtml#future"><span class="std std-ref">future 语句</span></a>。 它们会被 Python 编译器当作特例，通过包含 future 语句来允许新的 Python 特性在该特性成为语言标准之前发布的模块中使用。</p>
<p>虽然这些future 语句被 Python 编译器赋予了额外的特殊含义，但它们仍然像会其他导入语句一样被执行，而 <a class="reference internal" href="#module-__future__" title="__future__: Future statement definitions"><code class="xref py py-mod docutils literal notranslate"><span class="pre">__future__</span></code></a> 的存在和被导入系统处理的方式与其他任何 Python 模块的相同。 这种设计有三个目的：</p>
<ul class="simple">
<li><p>避免混淆已有的分析 import 语句并查找 import 的模块的工具。</p></li>
<li><p>当引入不兼容的修改时，可以记录其引入的时间以及强制使用的时间。这是一种可执行的文档，并且可以通过 import <a class="reference internal" href="#module-__future__" title="__future__: Future statement definitions"><code class="xref py py-mod docutils literal notranslate"><span class="pre">__future__</span></code></a> 来做程序性的检查。</p></li>
<li><p>确保 <a class="reference internal" href="../reference/simple_stmts.xhtml#future"><span class="std std-ref">future 语句</span></a> 在 Python 2.1 之前的发布版上运行时至少能抛出运行时异常（对 <a class="reference internal" href="#module-__future__" title="__future__: Future statement definitions"><code class="xref py py-mod docutils literal notranslate"><span class="pre">__future__</span></code></a> 的导入将失败，因为will fail, because there was no module of that name prior to 2.1 之前没有这个模块名称）。</p></li>
</ul>
<section id="module-contents">
<h2>模块内容</h2>
<p><a class="reference internal" href="#module-__future__" title="__future__: Future statement definitions"><code class="xref py py-mod docutils literal notranslate"><span class="pre">__future__</span></code></a> 中不会删除特性的描述。从 Python 2.1 中首次加入以来，通过这种方式引入了以下特性：</p>
<table class="docutils align-default">
<thead>
<tr class="row-odd"><th class="head"><p>特性</p></th>
<th class="head"><p>可选版本</p></th>
<th class="head"><p>强制加入版本</p></th>
<th class="head"><p>效果</p></th>
</tr>
</thead>
<tbody>
<tr class="row-even"><td><p>nested_scopes</p></td>
<td><p>2.1.0b1</p></td>
<td><p>2.2</p></td>
<td><p><span class="target" id="index-23"></span><a class="pep reference external" href="https://peps.python.org/pep-0227/"><strong>PEP 227</strong></a><span class="link-target"> [https://peps.python.org/pep-0227/]</span>: <em>静态嵌套作用域</em></p></td>
</tr>
<tr class="row-odd"><td><p>generators</p></td>
<td><p>2.2.0a1</p></td>
<td><p>2.3</p></td>
<td><p><span class="target" id="index-24"></span><a class="pep reference external" href="https://peps.python.org/pep-0255/"><strong>PEP 255</strong></a><span class="link-target"> [https://peps.python.org/pep-0255/]</span>: <em>简单生成器</em></p></td>
</tr>
<tr class="row-even"><td><p>division</p></td>
<td><p>2.2.0a2</p></td>
<td><p>3.0</p></td>
<td><p><span class="target" id="index-25"></span><a class="pep reference external" href="https://peps.python.org/pep-0238/"><strong>PEP 238</strong></a><span class="link-target"> [https://peps.python.org/pep-0238/]</span>: <em>修改除法运算符</em></p></td>
</tr>
<tr class="row-odd"><td><p>absolute_import</p></td>
<td><p>2.5.0a1</p></td>
<td><p>3.0</p></td>
<td><p><span class="target" id="index-26"></span><a class="pep reference external" href="https://peps.python.org/pep-0328/"><strong>PEP 328</strong></a><span class="link-target"> [https://peps.python.org/pep-0328/]</span>: <em>导入：多行与绝对/相对</em></p></td>
</tr>
<tr class="row-even"><td><p>with_statement</p></td>
<td><p>2.5.0a1</p></td>
<td><p>2.6</p></td>
<td><p><span class="target" id="index-27"></span><a class="pep reference external" href="https://peps.python.org/pep-0343/"><strong>PEP 343</strong></a><span class="link-target"> [https://peps.python.org/pep-0343/]</span>: * &quot;with&quot; 语句*</p></td>
</tr>
<tr class="row-odd"><td><p>print_function</p></td>
<td><p>2.6.0a2</p></td>
<td><p>3.0</p></td>
<td><p><span class="target" id="index-28"></span><a class="pep reference external" href="https://peps.python.org/pep-3105/"><strong>PEP 3105</strong></a><span class="link-target"> [https://peps.python.org/pep-3105/]</span>: <em>print 改为函数</em></p></td>
</tr>
<tr class="row-even"><td><p>unicode_literals</p></td>
<td><p>2.6.0a2</p></td>
<td><p>3.0</p></td>
<td><p><span class="target" id="index-29"></span><a class="pep reference external" href="https://peps.python.org/pep-3112/"><strong>PEP 3112</strong></a><span class="link-target"> [https://peps.python.org/pep-3112/]</span>: <em>Python 3000 中的字节字面值</em></p></td>
</tr>
<tr class="row-odd"><td><p>generator_stop</p></td>
<td><p>3.5.0b1</p></td>
<td><p>3.7</p></td>
<td><p><span class="target" id="index-30"></span><a class="pep reference external" href="https://peps.python.org/pep-0479/"><strong>PEP 479</strong></a><span class="link-target"> [https://peps.python.org/pep-0479/]</span>: <em>在生成器中处理 StopIteration</em></p></td>
</tr>
<tr class="row-even"><td><p>annotations</p></td>
<td><p>3.7.0b1</p></td>
<td><p>TBD <a class="footnote-reference brackets" href="#id2" id="id1" role="doc-noteref"><span class="fn-bracket">[</span>1<span class="fn-bracket">]</span></a></p></td>
<td><p><span class="target" id="index-8"></span><a class="pep reference external" href="https://peps.python.org/pep-0563/"><strong>PEP 563</strong></a><span class="link-target"> [https://peps.python.org/pep-0563/]</span>:
<em>Postponed evaluation of annotations</em></p></td>
</tr>
</tbody>
</table>
<dl class="py class" id="future-classes">
<dt class="sig sig-object py" id="future__._Feature">
<em class="property"><span class="pre">class</span><span class="w"> </span></em><span class="sig-prename descclassname"><span class="pre">__future__.</span></span><span class="sig-name descname"><span class="pre">_Feature</span></span></dt>
<dd><p><code class="file docutils literal notranslate"><span class="pre">__future__.py</span></code> 中的每一条语句都是以下格式的：</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="n">FeatureName</span> <span class="o">=</span> <span class="n">_Feature</span><span class="p">(</span><span class="n">OptionalRelease</span><span class="p">,</span> <span class="n">MandatoryRelease</span><span class="p">,</span>
                       <span class="n">CompilerFlag</span><span class="p">)</span>
</pre></div>
</div>
<p>通常 <em>OptionalRelease</em> 要比 <em>MandatoryRelease</em> 小，并且都是和 <a class="reference internal" href="sys.xhtml#sys.version_info" title="sys.version_info"><code class="xref py py-data docutils literal notranslate"><span class="pre">sys.version_info</span></code></a> 格式一致的 5 元素元组。</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="p">(</span><span class="n">PY_MAJOR_VERSION</span><span class="p">,</span> <span class="c1"># the 2 in 2.1.0a3; an int</span>
 <span class="n">PY_MINOR_VERSION</span><span class="p">,</span> <span class="c1"># the 1; an int</span>
 <span class="n">PY_MICRO_VERSION</span><span class="p">,</span> <span class="c1"># the 0; an int</span>
 <span class="n">PY_RELEASE_LEVEL</span><span class="p">,</span> <span class="c1"># &quot;alpha&quot;, &quot;beta&quot;, &quot;candidate&quot; or &quot;final&quot;; string</span>
 <span class="n">PY_RELEASE_SERIAL</span> <span class="c1"># the 3; an int</span>
<span class="p">)</span>
</pre></div>
</div>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="future__._Feature.getOptionalRelease">
<span class="sig-prename descclassname"><span class="pre">_Feature.</span></span><span class="sig-name descname"><span class="pre">getOptionalRelease</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p><em>OptionalRelease</em> 记录了一个特性首次发布时的 Python 版本。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="future__._Feature.getMandatoryRelease">
<span class="sig-prename descclassname"><span class="pre">_Feature.</span></span><span class="sig-name descname"><span class="pre">getMandatoryRelease</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>在 <em>MandatoryRelases</em> 还没有发布时，<em>MandatoryRelease</em> 表示该特性会变成语言的一部分的预测时间。</p>
<p>其他情况下，<em>MandatoryRelease</em> 用来记录这个特性是何时成为语言的一部分的。从该版本往后，使用该特性将不需要 future 语句，不过很多人还是会加上对应的 import。</p>
<p><em>MandatoryRelease</em> 也可能为 <code class="docutils literal notranslate"><span class="pre">None</span></code>，表示计划中的特性被撤销或尚未确定。</p>
</dd></dl>

<dl class="py attribute">
<dt class="sig sig-object py" id="future__._Feature.compiler_flag">
<span class="sig-prename descclassname"><span class="pre">_Feature.</span></span><span class="sig-name descname"><span class="pre">compiler_flag</span></span></dt>
<dd><p><em>CompilerFlag</em> 是一个（位）旗标，对于动态编译的代码应当将其作为第四个参数传给内置函数 <a class="reference internal" href="functions.xhtml#compile" title="compile"><code class="xref py py-func docutils literal notranslate"><span class="pre">compile()</span></code></a> 以启用相应的特性。 该旗标存储在 <a class="reference internal" href="#future__._Feature" title="__future__._Feature"><code class="xref py py-class docutils literal notranslate"><span class="pre">_Feature</span></code></a> 实例的 <a class="reference internal" href="#future__._Feature.compiler_flag" title="__future__._Feature.compiler_flag"><code class="xref py py-attr docutils literal notranslate"><span class="pre">_Feature.compiler_flag</span></code></a> 属性中。</p>
</dd></dl>

<aside class="footnote-list brackets">
<aside class="footnote brackets" id="id2" role="doc-footnote">
<span class="label"><span class="fn-bracket">[</span><a role="doc-backlink" href="#id1">1</a><span class="fn-bracket">]</span></span>
<p>先前计划在 Python 3.10 中强制使用 <code class="docutils literal notranslate"><span class="pre">from</span> <span class="pre">__future__</span> <span class="pre">import</span> <span class="pre">annotations</span></code> ，但Python指导委员会两次决定推迟这一改变（ <a class="reference external" href="https://mail.python.org/archives/list/python-dev&#64;python.org/message/CLVXXPQ2T2LQ5MP2Y53VVQFCXYWQJHKZ/">Python 3.10 的公告</a><span class="link-target"> [https://mail.python.org/archives/list/python-dev&#64;python.org/message/CLVXXPQ2T2LQ5MP2Y53VVQFCXYWQJHKZ/]</span> ； <a class="reference external" href="https://mail.python.org/archives/list/python-dev&#64;python.org/message/VIZEBX5EYMSYIJNDBF6DMUMZOCWHARSO/">Python 3.11 的公告</a><span class="link-target"> [https://mail.python.org/archives/list/python-dev&#64;python.org/message/VIZEBX5EYMSYIJNDBF6DMUMZOCWHARSO/]</span> ）。目前还没有做出最终决定。参见 <span class="target" id="index-31"></span><a class="pep reference external" href="https://peps.python.org/pep-0563/"><strong>PEP 563</strong></a><span class="link-target"> [https://peps.python.org/pep-0563/]</span> 和 <span class="target" id="index-32"></span><a class="pep reference external" href="https://peps.python.org/pep-0649/"><strong>PEP 649</strong></a><span class="link-target"> [https://peps.python.org/pep-0649/]</span> 。</p>
</aside>
</aside>
<div class="admonition seealso">
<p class="admonition-title">参见</p>
<dl class="simple">
<dt><a class="reference internal" href="../reference/simple_stmts.xhtml#future"><span class="std std-ref">future 语句</span></a></dt><dd><p>编译器怎样处理 future import。</p>
</dd>
<dt><span class="target" id="index-33"></span><a class="pep reference external" href="https://peps.python.org/pep-0236/"><strong>PEP 236</strong></a><span class="link-target"> [https://peps.python.org/pep-0236/]</span> - 回到 __future__</dt><dd><p>有关 __future__ 机制的最初提议。</p>
</dd>
</dl>
</div>
</section>
</section>


            <div class="clearer"></div>
          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>