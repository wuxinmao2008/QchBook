<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta name="viewport" content="width=device-width, initial-scale=1" />
<meta property="og:title" content="异常" />
<meta property="og:type" content="website" />
<meta property="og:url" content="https://docs.python.org/3/library/asyncio-exceptions.xhtml" />
<meta property="og:site_name" content="Python documentation" />
<meta property="og:description" content="源代码: Lib/asyncio/exceptions.py[https://github.com/python/cpython/tree/3.12/Lib/asyncio/exceptions.py]" />
<meta property="og:image" content="https://docs.python.org/3/_static/og-image.png" />
<meta property="og:image:alt" content="Python documentation" />
<meta name="description" content="源代码: Lib/asyncio/exceptions.py[https://github.com/python/cpython/tree/3.12/Lib/asyncio/exceptions.py]" />
<meta property="og:image:width" content="200" />
<meta property="og:image:height" content="200" />
<meta name="theme-color" content="#3776ab" />

    <title>异常</title>
    <link rel="stylesheet" type="text/css" href="../_static/pygments.css" />
    <link rel="stylesheet" type="text/css" href="../_static/epub.css" />
    <link rel="canonical" href="https://docs.python.org/3/library/asyncio-exceptions.html" />
    
      
    

    
    <style>
      @media only screen {
        table.full-width-table {
            width: 100%;
        }
      }
    </style>
 

  </head><body>


    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <section id="exceptions">
<span id="asyncio-exceptions"></span><h1>异常</h1>
<p><strong>源代码:</strong> <a class="reference external" href="https://github.com/python/cpython/tree/3.12/Lib/asyncio/exceptions.py">Lib/asyncio/exceptions.py</a><span class="link-target"> [https://github.com/python/cpython/tree/3.12/Lib/asyncio/exceptions.py]</span></p>
<hr class="docutils" />
<dl class="py exception">
<dt class="sig sig-object py" id="asyncio.TimeoutError">
<em class="property"><span class="pre">exception</span><span class="w"> </span></em><span class="sig-prename descclassname"><span class="pre">asyncio.</span></span><span class="sig-name descname"><span class="pre">TimeoutError</span></span></dt>
<dd><p><a class="reference internal" href="exceptions.xhtml#TimeoutError" title="TimeoutError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">TimeoutError</span></code></a> 的一个已被弃用的别名，会在操作超出了给定的时限时引发。</p>
<div class="versionchanged">
<p><span class="versionmodified changed">在 3.11 版本发生变更: </span>这个类是 <a class="reference internal" href="exceptions.xhtml#TimeoutError" title="TimeoutError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">TimeoutError</span></code></a> 的别名。</p>
</div>
</dd></dl>

<dl class="py exception">
<dt class="sig sig-object py" id="asyncio.CancelledError">
<em class="property"><span class="pre">exception</span><span class="w"> </span></em><span class="sig-prename descclassname"><span class="pre">asyncio.</span></span><span class="sig-name descname"><span class="pre">CancelledError</span></span></dt>
<dd><p>该操作已被取消。</p>
<p>取消asyncio任务时，可以捕获此异常以执行自定义操作。在几乎所有情况下，都必须重新引发异常。</p>
<div class="versionchanged">
<p><span class="versionmodified changed">在 3.8 版本发生变更: </span><a class="reference internal" href="#asyncio.CancelledError" title="asyncio.CancelledError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">CancelledError</span></code></a> 现在是 <a class="reference internal" href="exceptions.xhtml#BaseException" title="BaseException"><code class="xref py py-class docutils literal notranslate"><span class="pre">BaseException</span></code></a> 的子类而不是 <a class="reference internal" href="exceptions.xhtml#Exception" title="Exception"><code class="xref py py-class docutils literal notranslate"><span class="pre">Exception</span></code></a> 的子类。</p>
</div>
</dd></dl>

<dl class="py exception">
<dt class="sig sig-object py" id="asyncio.InvalidStateError">
<em class="property"><span class="pre">exception</span><span class="w"> </span></em><span class="sig-prename descclassname"><span class="pre">asyncio.</span></span><span class="sig-name descname"><span class="pre">InvalidStateError</span></span></dt>
<dd><p><a class="reference internal" href="asyncio-task.xhtml#asyncio.Task" title="asyncio.Task"><code class="xref py py-class docutils literal notranslate"><span class="pre">Task</span></code></a> 或 <a class="reference internal" href="asyncio-future.xhtml#asyncio.Future" title="asyncio.Future"><code class="xref py py-class docutils literal notranslate"><span class="pre">Future</span></code></a> 的内部状态无效。</p>
<p>在为已设置结果值的未来对象设置结果值等情况下，可以引发此问题。</p>
</dd></dl>

<dl class="py exception">
<dt class="sig sig-object py" id="asyncio.SendfileNotAvailableError">
<em class="property"><span class="pre">exception</span><span class="w"> </span></em><span class="sig-prename descclassname"><span class="pre">asyncio.</span></span><span class="sig-name descname"><span class="pre">SendfileNotAvailableError</span></span></dt>
<dd><p>&quot;sendfile&quot; 系统调用不适用于给定的套接字或文件类型。</p>
<p>子类 <a class="reference internal" href="exceptions.xhtml#RuntimeError" title="RuntimeError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">RuntimeError</span></code></a> 。</p>
</dd></dl>

<dl class="py exception">
<dt class="sig sig-object py" id="asyncio.IncompleteReadError">
<em class="property"><span class="pre">exception</span><span class="w"> </span></em><span class="sig-prename descclassname"><span class="pre">asyncio.</span></span><span class="sig-name descname"><span class="pre">IncompleteReadError</span></span></dt>
<dd><p>请求的读取操作未完全完成。</p>
<p>由 <a class="reference internal" href="asyncio-stream.xhtml#asyncio-streams"><span class="std std-ref">asyncio stream APIs</span></a> 提出</p>
<p>此异常是 <a class="reference internal" href="exceptions.xhtml#EOFError" title="EOFError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">EOFError</span></code></a> 的子类。</p>
<dl class="py attribute">
<dt class="sig sig-object py" id="asyncio.IncompleteReadError.expected">
<span class="sig-name descname"><span class="pre">expected</span></span></dt>
<dd><p>预期字节的总数（ <a class="reference internal" href="functions.xhtml#int" title="int"><code class="xref py py-class docutils literal notranslate"><span class="pre">int</span></code></a> ）。</p>
</dd></dl>

<dl class="py attribute">
<dt class="sig sig-object py" id="asyncio.IncompleteReadError.partial">
<span class="sig-name descname"><span class="pre">partial</span></span></dt>
<dd><p>到达流结束之前读取的 <a class="reference internal" href="stdtypes.xhtml#bytes" title="bytes"><code class="xref py py-class docutils literal notranslate"><span class="pre">bytes</span></code></a> 字符串。</p>
</dd></dl>

</dd></dl>

<dl class="py exception">
<dt class="sig sig-object py" id="asyncio.LimitOverrunError">
<em class="property"><span class="pre">exception</span><span class="w"> </span></em><span class="sig-prename descclassname"><span class="pre">asyncio.</span></span><span class="sig-name descname"><span class="pre">LimitOverrunError</span></span></dt>
<dd><p>在查找分隔符时达到缓冲区大小限制。</p>
<p>由 <a class="reference internal" href="asyncio-stream.xhtml#asyncio-streams"><span class="std std-ref">asyncio stream APIs</span></a> 提出</p>
<dl class="py attribute">
<dt class="sig sig-object py" id="asyncio.LimitOverrunError.consumed">
<span class="sig-name descname"><span class="pre">consumed</span></span></dt>
<dd><p>要消耗的字节总数。</p>
</dd></dl>

</dd></dl>

</section>


            <div class="clearer"></div>
          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>