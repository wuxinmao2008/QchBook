<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta name="viewport" content="width=device-width, initial-scale=1" />
<meta property="og:title" content="poplib --- POP3 协议客户端" />
<meta property="og:type" content="website" />
<meta property="og:url" content="https://docs.python.org/3/library/poplib.xhtml" />
<meta property="og:site_name" content="Python documentation" />
<meta property="og:description" content="源代码： Lib/poplib.py[https://github.com/python/cpython/tree/3.12/Lib/poplib.py] 本模块定义了一个 POP3 类，该类封装了到 POP3 服务器的连接过程，并实现了 RFC 1939[https://datatracker.ietf.org/doc/html/rfc1939.html] 中定义的协议。 POP3 类同时..." />
<meta property="og:image" content="https://docs.python.org/3/_static/og-image.png" />
<meta property="og:image:alt" content="Python documentation" />
<meta name="description" content="源代码： Lib/poplib.py[https://github.com/python/cpython/tree/3.12/Lib/poplib.py] 本模块定义了一个 POP3 类，该类封装了到 POP3 服务器的连接过程，并实现了 RFC 1939[https://datatracker.ietf.org/doc/html/rfc1939.html] 中定义的协议。 POP3 类同时..." />
<meta property="og:image:width" content="200" />
<meta property="og:image:height" content="200" />
<meta name="theme-color" content="#3776ab" />

    <title>poplib --- POP3 协议客户端</title>
    <link rel="stylesheet" type="text/css" href="../_static/pygments.css" />
    <link rel="stylesheet" type="text/css" href="../_static/epub.css" />
    <link rel="canonical" href="https://docs.python.org/3/library/poplib.html" />
    
      
    

    
    <style>
      @media only screen {
        table.full-width-table {
            width: 100%;
        }
      }
    </style>
 

  </head><body>


    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <section id="module-poplib">
<span id="poplib-pop3-protocol-client"></span><h1><code class="xref py py-mod docutils literal notranslate"><span class="pre">poplib</span></code> --- POP3 协议客户端</h1>
<p><strong>源代码：</strong> <a class="reference external" href="https://github.com/python/cpython/tree/3.12/Lib/poplib.py">Lib/poplib.py</a><span class="link-target"> [https://github.com/python/cpython/tree/3.12/Lib/poplib.py]</span></p>
<hr class="docutils" id="index-0" />
<p>本模块定义了一个 <a class="reference internal" href="#poplib.POP3" title="poplib.POP3"><code class="xref py py-class docutils literal notranslate"><span class="pre">POP3</span></code></a> 类，该类封装了到 POP3 服务器的连接过程，并实现了 <span class="target" id="index-13"></span><a class="rfc reference external" href="https://datatracker.ietf.org/doc/html/rfc1939.html"><strong>RFC 1939</strong></a><span class="link-target"> [https://datatracker.ietf.org/doc/html/rfc1939.html]</span> 中定义的协议。<a class="reference internal" href="#poplib.POP3" title="poplib.POP3"><code class="xref py py-class docutils literal notranslate"><span class="pre">POP3</span></code></a> 类同时支持 <span class="target" id="index-14"></span><a class="rfc reference external" href="https://datatracker.ietf.org/doc/html/rfc1939.html"><strong>RFC 1939</strong></a><span class="link-target"> [https://datatracker.ietf.org/doc/html/rfc1939.html]</span> 中最小的和可选的命令集。<a class="reference internal" href="#poplib.POP3" title="poplib.POP3"><code class="xref py py-class docutils literal notranslate"><span class="pre">POP3</span></code></a> 类还支持在 <span class="target" id="index-15"></span><a class="rfc reference external" href="https://datatracker.ietf.org/doc/html/rfc2595.html"><strong>RFC 2595</strong></a><span class="link-target"> [https://datatracker.ietf.org/doc/html/rfc2595.html]</span> 中引入的 <code class="docutils literal notranslate"><span class="pre">STLS</span></code> 命令，用于在已建立的连接上启用加密通信。</p>
<p>本模块额外提供一个 <a class="reference internal" href="#poplib.POP3_SSL" title="poplib.POP3_SSL"><code class="xref py py-class docutils literal notranslate"><span class="pre">POP3_SSL</span></code></a> 类，在连接到 POP3 服务器时，该类为使用 SSL 作为底层协议层提供了支持。</p>
<p>注意，尽管 POP3 具有广泛的支持，但它已经过时。POP3 服务器的实现质量差异很大，而且大多很糟糕。如果邮件服务器支持 IMAP，则最好使用 <a class="reference internal" href="imaplib.xhtml#imaplib.IMAP4" title="imaplib.IMAP4"><code class="xref py py-class docutils literal notranslate"><span class="pre">imaplib.IMAP4</span></code></a> 类，因为 IMAP 服务器一般实现得更好。</p>
<div class="availability docutils container">
<p><a class="reference internal" href="intro.xhtml#availability"><span class="std std-ref">可用性</span></a>: 非 Emscripten，非 WASI。</p>
<p>此模块在 WebAssembly 平台 <code class="docutils literal notranslate"><span class="pre">wasm32-emscripten</span></code> 和 <code class="docutils literal notranslate"><span class="pre">wasm32-wasi</span></code> 上不适用或不可用。 请参阅 <a class="reference internal" href="intro.xhtml#wasm-availability"><span class="std std-ref">WebAssembly 平台</span></a> 了解详情。</p>
</div>
<p><a class="reference internal" href="#module-poplib" title="poplib: POP3 protocol client (requires sockets)."><code class="xref py py-mod docutils literal notranslate"><span class="pre">poplib</span></code></a> 模块提供了两个类：</p>
<dl class="py class">
<dt class="sig sig-object py" id="poplib.POP3">
<em class="property"><span class="pre">class</span><span class="w"> </span></em><span class="sig-prename descclassname"><span class="pre">poplib.</span></span><span class="sig-name descname"><span class="pre">POP3</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">host</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">port=POP3_PORT</span></span></em><span class="optional">[</span>, <em class="sig-param"><span class="n"><span class="pre">timeout</span></span></em><span class="optional">]</span><span class="sig-paren">)</span></dt>
<dd><p>本类实现实际的 POP3 协议。实例初始化时，连接就会建立。如果省略 <em>port</em>，则使用标准 POP3 端口（110）。可选参数 <em>timeout</em> 指定连接尝试的超时时间（以秒为单位，如果未指定超时，将使用全局默认超时设置）。</p>
<p class="audit-hook">引发一个 <a class="reference internal" href="sys.xhtml#auditing"><span class="std std-ref">审计事件</span></a> <code class="docutils literal notranslate"><span class="pre">poplib.connect</span></code>，附带参数 <code class="docutils literal notranslate"><span class="pre">self</span></code>, <code class="docutils literal notranslate"><span class="pre">host</span></code>, <code class="docutils literal notranslate"><span class="pre">port</span></code>。</p>
<p class="audit-hook">引发一个 <a class="reference internal" href="sys.xhtml#auditing"><span class="std std-ref">审计事件</span></a> <code class="docutils literal notranslate"><span class="pre">poplib.putline</span></code>，附带参数 <code class="docutils literal notranslate"><span class="pre">self</span></code>, <code class="docutils literal notranslate"><span class="pre">line</span></code>。</p>
<div class="versionchanged">
<p><span class="versionmodified changed">在 3.9 版本发生变更: </span>如果 <em>timeout</em> 参数设置为 0，创建非阻塞套接字时，它将引发 <a class="reference internal" href="exceptions.xhtml#ValueError" title="ValueError"><code class="xref py py-class docutils literal notranslate"><span class="pre">ValueError</span></code></a> 来阻止该操作。</p>
</div>
</dd></dl>

<dl class="py class">
<dt class="sig sig-object py" id="poplib.POP3_SSL">
<em class="property"><span class="pre">class</span><span class="w"> </span></em><span class="sig-prename descclassname"><span class="pre">poplib.</span></span><span class="sig-name descname"><span class="pre">POP3_SSL</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">host</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">port</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">POP3_SSL_PORT</span></span></em>, <em class="sig-param"><span class="o"><span class="pre">*</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">timeout</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">context</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>一个 <a class="reference internal" href="#poplib.POP3" title="poplib.POP3"><code class="xref py py-class docutils literal notranslate"><span class="pre">POP3</span></code></a> 的子类，它使用经 SSL 加密的套接字连接到服务器。如果端口 <em>port</em> 未指定，则使用 995，它是标准的 POP3-over-SSL 端口。<em>timeout</em> 的作用与 <a class="reference internal" href="#poplib.POP3" title="poplib.POP3"><code class="xref py py-class docutils literal notranslate"><span class="pre">POP3</span></code></a> 构造函数中的相同。<em>context</em> 是一个可选的 <a class="reference internal" href="ssl.xhtml#ssl.SSLContext" title="ssl.SSLContext"><code class="xref py py-class docutils literal notranslate"><span class="pre">ssl.SSLContext</span></code></a> 对象，该对象可以将 SSL 配置选项、证书和私钥打包放入一个单独的（可以长久存在的）结构中。请阅读 <a class="reference internal" href="ssl.xhtml#ssl-security"><span class="std std-ref">安全考量</span></a> 以获取最佳实践。</p>
<p class="audit-hook">引发一个 <a class="reference internal" href="sys.xhtml#auditing"><span class="std std-ref">审计事件</span></a> <code class="docutils literal notranslate"><span class="pre">poplib.connect</span></code>，附带参数 <code class="docutils literal notranslate"><span class="pre">self</span></code>, <code class="docutils literal notranslate"><span class="pre">host</span></code>, <code class="docutils literal notranslate"><span class="pre">port</span></code>。</p>
<p class="audit-hook">引发一个 <a class="reference internal" href="sys.xhtml#auditing"><span class="std std-ref">审计事件</span></a> <code class="docutils literal notranslate"><span class="pre">poplib.putline</span></code>，附带参数 <code class="docutils literal notranslate"><span class="pre">self</span></code>, <code class="docutils literal notranslate"><span class="pre">line</span></code>。</p>
<div class="versionchanged">
<p><span class="versionmodified changed">在 3.2 版本发生变更: </span>添加了 <em>context</em> 参数。</p>
</div>
<div class="versionchanged">
<p><span class="versionmodified changed">在 3.4 版本发生变更: </span>该类现在支持使用 <a class="reference internal" href="ssl.xhtml#ssl.SSLContext.check_hostname" title="ssl.SSLContext.check_hostname"><code class="xref py py-attr docutils literal notranslate"><span class="pre">ssl.SSLContext.check_hostname</span></code></a> 和 <em>服务器名称提示</em> (参见 <a class="reference internal" href="ssl.xhtml#ssl.HAS_SNI" title="ssl.HAS_SNI"><code class="xref py py-const docutils literal notranslate"><span class="pre">ssl.HAS_SNI</span></code></a>) 进行主机名检测。</p>
</div>
<div class="versionchanged">
<p><span class="versionmodified changed">在 3.9 版本发生变更: </span>如果 <em>timeout</em> 参数设置为 0，创建非阻塞套接字时，它将引发 <a class="reference internal" href="exceptions.xhtml#ValueError" title="ValueError"><code class="xref py py-class docutils literal notranslate"><span class="pre">ValueError</span></code></a> 来阻止该操作。</p>
</div>
<div class="versionchanged">
<p><span class="versionmodified changed">在 3.12 版本发生变更: </span>已弃用的 <em>keyfile</em> 和 <em>certfile</em> 形参已被移除。</p>
</div>
</dd></dl>

<p>定义了一个异常，它是作为 <a class="reference internal" href="#module-poplib" title="poplib: POP3 protocol client (requires sockets)."><code class="xref py py-mod docutils literal notranslate"><span class="pre">poplib</span></code></a> 模块的属性定义的：</p>
<dl class="py exception">
<dt class="sig sig-object py" id="poplib.error_proto">
<em class="property"><span class="pre">exception</span><span class="w"> </span></em><span class="sig-prename descclassname"><span class="pre">poplib.</span></span><span class="sig-name descname"><span class="pre">error_proto</span></span></dt>
<dd><p>此模块的所有错误都将引发本异常（来自 <a class="reference internal" href="socket.xhtml#module-socket" title="socket: Low-level networking interface."><code class="xref py py-mod docutils literal notranslate"><span class="pre">socket</span></code></a> 模块的错误不会被捕获）。异常的原因将以字符串的形式传递给构造函数。</p>
</dd></dl>

<div class="admonition seealso">
<p class="admonition-title">参见</p>
<dl class="simple">
<dt><a class="reference internal" href="imaplib.xhtml#module-imaplib" title="imaplib: IMAP4 protocol client (requires sockets)."><code class="xref py py-mod docutils literal notranslate"><span class="pre">imaplib</span></code></a> 模块</dt><dd><p>标准的 Python IMAP 模块。</p>
</dd>
<dt><a class="reference external" href="http://www.catb.org/~esr/fetchmail/fetchmail-FAQ.html">有关 Fetchmail 的常见问题</a><span class="link-target"> [http://www.catb.org/~esr/fetchmail/fetchmail-FAQ.html]</span></dt><dd><p><strong class="program">fetchmail</strong> POP/IMAP 客户端的“常见问题”收集了 POP3 服务器之间的差异和 RFC 不兼容的信息，如果要编写基于 POP 协议的应用程序，这可能会很有用。</p>
</dd>
</dl>
</div>
<section id="pop3-objects">
<span id="id1"></span><h2>POP3 对象</h2>
<p>所有 POP3 命令均以同名的方法表示，使用小写形式；大多数方法返回的是服务器所发送的响应文本。</p>
<p><a class="reference internal" href="#poplib.POP3" title="poplib.POP3"><code class="xref py py-class docutils literal notranslate"><span class="pre">POP3</span></code></a> 实例具有下列方法:</p>
<dl class="py method">
<dt class="sig sig-object py" id="poplib.POP3.set_debuglevel">
<span class="sig-prename descclassname"><span class="pre">POP3.</span></span><span class="sig-name descname"><span class="pre">set_debuglevel</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">level</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>设置实例的调试级别，它控制着调试信息的数量。默认值 <code class="docutils literal notranslate"><span class="pre">0</span></code> 不产生调试信息。值 <code class="docutils literal notranslate"><span class="pre">1</span></code> 产生中等数量的调试信息，通常每个请求产生一行。大于或等于 <code class="docutils literal notranslate"><span class="pre">2</span></code> 的值产生的调试信息最多，FTP 控制连接上发送和接收的每一行都将被记录下来。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="poplib.POP3.getwelcome">
<span class="sig-prename descclassname"><span class="pre">POP3.</span></span><span class="sig-name descname"><span class="pre">getwelcome</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>返回 POP3 服务器发送的问候语字符串。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="poplib.POP3.capa">
<span class="sig-prename descclassname"><span class="pre">POP3.</span></span><span class="sig-name descname"><span class="pre">capa</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>查询服务器支持的功能，这些功能在 <span class="target" id="index-16"></span><a class="rfc reference external" href="https://datatracker.ietf.org/doc/html/rfc2449.html"><strong>RFC 2449</strong></a><span class="link-target"> [https://datatracker.ietf.org/doc/html/rfc2449.html]</span> 中有说明。返回一个 <code class="docutils literal notranslate"><span class="pre">{'name':</span> <span class="pre">['param'...]}</span></code> 形式的字典。</p>
<div class="versionadded">
<p><span class="versionmodified added">Added in version 3.4.</span></p>
</div>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="poplib.POP3.user">
<span class="sig-prename descclassname"><span class="pre">POP3.</span></span><span class="sig-name descname"><span class="pre">user</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">username</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>发送 user 命令，返回的响应应该指示需要一个密码。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="poplib.POP3.pass_">
<span class="sig-prename descclassname"><span class="pre">POP3.</span></span><span class="sig-name descname"><span class="pre">pass_</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">password</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>发送密码，响应包括邮件消息计数和邮箱大小。 注意：服务器上的邮箱将被锁定直到 <a class="reference internal" href="#poplib.POP3.quit" title="poplib.POP3.quit"><code class="xref py py-meth docutils literal notranslate"><span class="pre">quit()</span></code></a> 被调用。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="poplib.POP3.apop">
<span class="sig-prename descclassname"><span class="pre">POP3.</span></span><span class="sig-name descname"><span class="pre">apop</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">user</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">secret</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>使用更安全的 APOP 身份验证登录到 POP3 服务器。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="poplib.POP3.rpop">
<span class="sig-prename descclassname"><span class="pre">POP3.</span></span><span class="sig-name descname"><span class="pre">rpop</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">user</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>使用 RPOP 身份验证（类似于 Unix r-命令）登录到 POP3 服务器。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="poplib.POP3.stat">
<span class="sig-prename descclassname"><span class="pre">POP3.</span></span><span class="sig-name descname"><span class="pre">stat</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>获取邮箱状态。结果为 2 个整数组成的元组：<code class="docutils literal notranslate"><span class="pre">(message</span> <span class="pre">count,</span> <span class="pre">mailbox</span> <span class="pre">size)</span></code>。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="poplib.POP3.list">
<span class="sig-prename descclassname"><span class="pre">POP3.</span></span><span class="sig-name descname"><span class="pre">list</span></span><span class="sig-paren">(</span><span class="optional">[</span><em class="sig-param"><span class="n"><span class="pre">which</span></span></em><span class="optional">]</span><span class="sig-paren">)</span></dt>
<dd><p>请求消息列表，结果的形式为 <code class="docutils literal notranslate"><span class="pre">(response,</span> <span class="pre">['mesg_num</span> <span class="pre">octets',</span> <span class="pre">...],</span> <span class="pre">octets)</span></code>。如果设置了 <em>which</em>，它表示需要列出的消息。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="poplib.POP3.retr">
<span class="sig-prename descclassname"><span class="pre">POP3.</span></span><span class="sig-name descname"><span class="pre">retr</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">which</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>检索编号为 <em>which</em> 的整条消息，并设置其已读标志位。结果的形式为 <code class="docutils literal notranslate"><span class="pre">(response,</span> <span class="pre">['line',</span> <span class="pre">...],</span> <span class="pre">octets)</span></code>。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="poplib.POP3.dele">
<span class="sig-prename descclassname"><span class="pre">POP3.</span></span><span class="sig-name descname"><span class="pre">dele</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">which</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>将编号为 <em>which</em> 的消息标记为待删除。在多数服务器上，删除操作直到 QUIT 才会实际执行（主要例外是 Eudora QPOP，它在断开连接时执行删除，故意违反了 RFC）。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="poplib.POP3.rset">
<span class="sig-prename descclassname"><span class="pre">POP3.</span></span><span class="sig-name descname"><span class="pre">rset</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>移除邮箱中的所有待删除标记。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="poplib.POP3.noop">
<span class="sig-prename descclassname"><span class="pre">POP3.</span></span><span class="sig-name descname"><span class="pre">noop</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>什么都不做。可以用于保持活动状态。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="poplib.POP3.quit">
<span class="sig-prename descclassname"><span class="pre">POP3.</span></span><span class="sig-name descname"><span class="pre">quit</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>登出：提交更改，解除邮箱锁定，断开连接。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="poplib.POP3.top">
<span class="sig-prename descclassname"><span class="pre">POP3.</span></span><span class="sig-name descname"><span class="pre">top</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">which</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">howmuch</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>检索编号为 <em>which</em> 的消息，范围是消息头加上消息头往后数 <em>howmuch</em> 行。结果的形式为 <code class="docutils literal notranslate"><span class="pre">(response,</span> <span class="pre">['line',</span> <span class="pre">...],</span> <span class="pre">octets)</span></code>。</p>
<p>本方法使用 POP3 TOP 命令，不同于 RETR 命令，它不设置邮件的已读标志位。不幸的是，TOP 在 RFC 中说明不清晰，且在小众的服务器软件中往往不可用。信任并使用它之前，请先手动对目标 POP3 服务器测试本方法。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="poplib.POP3.uidl">
<span class="sig-prename descclassname"><span class="pre">POP3.</span></span><span class="sig-name descname"><span class="pre">uidl</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">which</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>返回消息摘要（唯一 ID）列表。如果指定了 <em>which</em>，那么结果将包含那条消息的唯一 ID，形式为 <code class="docutils literal notranslate"><span class="pre">'response</span> <span class="pre">mesgnum</span> <span class="pre">uid</span></code>，如果未指定，那么结果为列表 <code class="docutils literal notranslate"><span class="pre">(response,</span> <span class="pre">['mesgnum</span> <span class="pre">uid',</span> <span class="pre">...],</span> <span class="pre">octets)</span></code>。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="poplib.POP3.utf8">
<span class="sig-prename descclassname"><span class="pre">POP3.</span></span><span class="sig-name descname"><span class="pre">utf8</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>尝试切换至 UTF-8 模式。成功则返回服务器的响应，失败则引发 <a class="reference internal" href="#poplib.error_proto" title="poplib.error_proto"><code class="xref py py-class docutils literal notranslate"><span class="pre">error_proto</span></code></a> 异常。在 <span class="target" id="index-17"></span><a class="rfc reference external" href="https://datatracker.ietf.org/doc/html/rfc6856.html"><strong>RFC 6856</strong></a><span class="link-target"> [https://datatracker.ietf.org/doc/html/rfc6856.html]</span> 中有说明。</p>
<div class="versionadded">
<p><span class="versionmodified added">Added in version 3.5.</span></p>
</div>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="poplib.POP3.stls">
<span class="sig-prename descclassname"><span class="pre">POP3.</span></span><span class="sig-name descname"><span class="pre">stls</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">context</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>在活动连接上开启 TLS 会话，在 <span class="target" id="index-18"></span><a class="rfc reference external" href="https://datatracker.ietf.org/doc/html/rfc2595.html"><strong>RFC 2595</strong></a><span class="link-target"> [https://datatracker.ietf.org/doc/html/rfc2595.html]</span> 中有说明。仅在用户身份验证前允许这样做。</p>
<p><em>context</em> 参数是一个 <a class="reference internal" href="ssl.xhtml#ssl.SSLContext" title="ssl.SSLContext"><code class="xref py py-class docutils literal notranslate"><span class="pre">ssl.SSLContext</span></code></a> 对象，该对象可以将 SSL 配置选项、证书和私钥打包放入一个单独的（可以长久存在的）结构中。请阅读 <a class="reference internal" href="ssl.xhtml#ssl-security"><span class="std std-ref">安全考量</span></a> 以获取最佳实践。</p>
<p>此方法支持通过 <a class="reference internal" href="ssl.xhtml#ssl.SSLContext.check_hostname" title="ssl.SSLContext.check_hostname"><code class="xref py py-attr docutils literal notranslate"><span class="pre">ssl.SSLContext.check_hostname</span></code></a> 和 <em>服务器名称指示</em> (参见 <a class="reference internal" href="ssl.xhtml#ssl.HAS_SNI" title="ssl.HAS_SNI"><code class="xref py py-const docutils literal notranslate"><span class="pre">ssl.HAS_SNI</span></code></a>) 进行主机名检测。</p>
<div class="versionadded">
<p><span class="versionmodified added">Added in version 3.4.</span></p>
</div>
</dd></dl>

<p><a class="reference internal" href="#poplib.POP3_SSL" title="poplib.POP3_SSL"><code class="xref py py-class docutils literal notranslate"><span class="pre">POP3_SSL</span></code></a> 实例没有额外方法。该子类的接口与其父类的相同。</p>
</section>
<section id="pop3-example">
<span id="id2"></span><h2>POP3 示例</h2>
<p>以下是一个最短示例（不带错误检查），该示例将打开邮箱，检索并打印所有消息:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="kn">import</span> <span class="nn">getpass</span><span class="o">,</span> <span class="nn">poplib</span>

<span class="n">M</span> <span class="o">=</span> <span class="n">poplib</span><span class="o">.</span><span class="n">POP3</span><span class="p">(</span><span class="s1">&#39;localhost&#39;</span><span class="p">)</span>
<span class="n">M</span><span class="o">.</span><span class="n">user</span><span class="p">(</span><span class="n">getpass</span><span class="o">.</span><span class="n">getuser</span><span class="p">())</span>
<span class="n">M</span><span class="o">.</span><span class="n">pass_</span><span class="p">(</span><span class="n">getpass</span><span class="o">.</span><span class="n">getpass</span><span class="p">())</span>
<span class="n">numMessages</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="n">M</span><span class="o">.</span><span class="n">list</span><span class="p">()[</span><span class="mi">1</span><span class="p">])</span>
<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">numMessages</span><span class="p">):</span>
    <span class="k">for</span> <span class="n">j</span> <span class="ow">in</span> <span class="n">M</span><span class="o">.</span><span class="n">retr</span><span class="p">(</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">)[</span><span class="mi">1</span><span class="p">]:</span>
        <span class="nb">print</span><span class="p">(</span><span class="n">j</span><span class="p">)</span>
</pre></div>
</div>
<p>模块的最后有一段测试，其中包含的用法示例更加广泛。</p>
</section>
</section>


            <div class="clearer"></div>
          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>