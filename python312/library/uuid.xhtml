<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta name="viewport" content="width=device-width, initial-scale=1" />
<meta property="og:title" content="uuid --- 根据 RFC 4122 定义的 UUID 对象" />
<meta property="og:type" content="website" />
<meta property="og:url" content="https://docs.python.org/3/library/uuid.xhtml" />
<meta property="og:site_name" content="Python documentation" />
<meta property="og:description" content="uuid--- 根据 RFC 4122[https://datatracker.ietf.org/doc/html/rfc4122.html] 定义的 UUID 对象: 源代码： Lib/uuid.py[https://github.com/python/cpython/tree/3.12/Lib/uuid.py] 这个模块提供了不可变的 UUID 对象 ( UUID 类) 和 uuid1(..." />
<meta property="og:image" content="https://docs.python.org/3/_static/og-image.png" />
<meta property="og:image:alt" content="Python documentation" />
<meta name="description" content="uuid--- 根据 RFC 4122[https://datatracker.ietf.org/doc/html/rfc4122.html] 定义的 UUID 对象: 源代码： Lib/uuid.py[https://github.com/python/cpython/tree/3.12/Lib/uuid.py] 这个模块提供了不可变的 UUID 对象 ( UUID 类) 和 uuid1(..." />
<meta property="og:image:width" content="200" />
<meta property="og:image:height" content="200" />
<meta name="theme-color" content="#3776ab" />

    <title>uuid --- 根据 RFC 4122 定义的 UUID 对象</title>
    <link rel="stylesheet" type="text/css" href="../_static/pygments.css" />
    <link rel="stylesheet" type="text/css" href="../_static/epub.css" />
    <link rel="canonical" href="https://docs.python.org/3/library/uuid.html" />
    
      
    

    
    <style>
      @media only screen {
        table.full-width-table {
            width: 100%;
        }
      }
    </style>
 

  </head><body>


    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <section id="module-uuid">
<span id="uuid-uuid-objects-according-to-rfc-4122"></span><h1><code class="xref py py-mod docutils literal notranslate"><span class="pre">uuid</span></code> --- 根据 <span class="target" id="index-12"></span><a class="rfc reference external" href="https://datatracker.ietf.org/doc/html/rfc4122.html"><strong>RFC 4122</strong></a><span class="link-target"> [https://datatracker.ietf.org/doc/html/rfc4122.html]</span> 定义的 UUID 对象</h1>
<p><strong>源代码：</strong> <a class="reference external" href="https://github.com/python/cpython/tree/3.12/Lib/uuid.py">Lib/uuid.py</a><span class="link-target"> [https://github.com/python/cpython/tree/3.12/Lib/uuid.py]</span></p>
<hr class="docutils" />
<p>这个模块提供了不可变的 <a class="reference internal" href="#uuid.UUID" title="uuid.UUID"><code class="xref py py-class docutils literal notranslate"><span class="pre">UUID</span></code></a> 对象 (<a class="reference internal" href="#uuid.UUID" title="uuid.UUID"><code class="xref py py-class docutils literal notranslate"><span class="pre">UUID</span></code></a> 类) 和 <a class="reference internal" href="#uuid.uuid1" title="uuid.uuid1"><code class="xref py py-func docutils literal notranslate"><span class="pre">uuid1()</span></code></a>, <a class="reference internal" href="#uuid.uuid3" title="uuid.uuid3"><code class="xref py py-func docutils literal notranslate"><span class="pre">uuid3()</span></code></a>, <a class="reference internal" href="#uuid.uuid4" title="uuid.uuid4"><code class="xref py py-func docutils literal notranslate"><span class="pre">uuid4()</span></code></a>, <a class="reference internal" href="#uuid.uuid5" title="uuid.uuid5"><code class="xref py py-func docutils literal notranslate"><span class="pre">uuid5()</span></code></a> 等函数用于生成 <span class="target" id="index-19"></span><a class="rfc reference external" href="https://datatracker.ietf.org/doc/html/rfc4122.html"><strong>RFC 4122</strong></a><span class="link-target"> [https://datatracker.ietf.org/doc/html/rfc4122.html]</span> 所定义的第 1, 3, 4 和 5 版 UUID。</p>
<p>如果你想要的只是一个唯一的ID，你可能应该调用 <a class="reference internal" href="#uuid.uuid1" title="uuid.uuid1"><code class="xref py py-func docutils literal notranslate"><span class="pre">uuid1()</span></code></a> 或 <a class="reference internal" href="#uuid.uuid4" title="uuid.uuid4"><code class="xref py py-func docutils literal notranslate"><span class="pre">uuid4()</span></code></a>。 注意 <a class="reference internal" href="#uuid.uuid1" title="uuid.uuid1"><code class="xref py py-func docutils literal notranslate"><span class="pre">uuid1()</span></code></a> 可能会损害隐私，因为它创建了一个包含计算机网络地址的UUID。 <a class="reference internal" href="#uuid.uuid4" title="uuid.uuid4"><code class="xref py py-func docutils literal notranslate"><span class="pre">uuid4()</span></code></a> 可以创建一个随机UUID。</p>
<p>根据底层平台的支持情况，<a class="reference internal" href="#uuid.uuid1" title="uuid.uuid1"><code class="xref py py-func docutils literal notranslate"><span class="pre">uuid1()</span></code></a> 可能会也可能不会返回“安全“的 UUID。 安全的 UUID 是指使用同步方法生成的 UUID，此方法可确保没有两个进程能获得相同的 UUID。 <a class="reference internal" href="#uuid.UUID" title="uuid.UUID"><code class="xref py py-class docutils literal notranslate"><span class="pre">UUID</span></code></a> 的所有实例都有一个能够中转关于 UUID 安全性的任何信息的 <a class="reference internal" href="#uuid.UUID.is_safe" title="uuid.UUID.is_safe"><code class="xref py py-attr docutils literal notranslate"><span class="pre">is_safe</span></code></a> 属性，它可使用下列枚举：</p>
<dl class="py class">
<dt class="sig sig-object py" id="uuid.SafeUUID">
<em class="property"><span class="pre">class</span><span class="w"> </span></em><span class="sig-prename descclassname"><span class="pre">uuid.</span></span><span class="sig-name descname"><span class="pre">SafeUUID</span></span></dt>
<dd><div class="versionadded">
<p><span class="versionmodified added">Added in version 3.7.</span></p>
</div>
<dl class="py attribute">
<dt class="sig sig-object py" id="uuid.SafeUUID.safe">
<span class="sig-name descname"><span class="pre">safe</span></span></dt>
<dd><p>该UUID是由平台以多进程安全的方式生成的。</p>
</dd></dl>

<dl class="py attribute">
<dt class="sig sig-object py" id="uuid.SafeUUID.unsafe">
<span class="sig-name descname"><span class="pre">unsafe</span></span></dt>
<dd><p>UUID不是以多进程安全的方式生成的。</p>
</dd></dl>

<dl class="py attribute">
<dt class="sig sig-object py" id="uuid.SafeUUID.unknown">
<span class="sig-name descname"><span class="pre">unknown</span></span></dt>
<dd><p>该平台不提供UUID是否安全生成的信息。</p>
</dd></dl>

</dd></dl>

<dl class="py class">
<dt class="sig sig-object py" id="uuid.UUID">
<em class="property"><span class="pre">class</span><span class="w"> </span></em><span class="sig-prename descclassname"><span class="pre">uuid.</span></span><span class="sig-name descname"><span class="pre">UUID</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">hex</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">bytes</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">bytes_le</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">fields</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">int</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">version</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="o"><span class="pre">*</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">is_safe</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">SafeUUID.unknown</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>用一串32位十六进制数字、一串大端序16个字节作为*bytes*参数、一串16个小端序字节作为*bytes_le*参数、一个由六个整数组成的元组（32位*time_low*，16位*time_mid*，16位*time_hi_version*，8位*clock_seq_hi_variant*，8位*clock_seq_low*，48位*node*）作为*fields*参数，或者一个128位整数作为*int*参数创建一个UUID。当给出一串十六进制数字时，大括号、连字符和URN前缀都是可选的。 例如，这些表达式都产生相同的UUID:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="n">UUID</span><span class="p">(</span><span class="s1">&#39;{12345678-1234-5678-1234-567812345678}&#39;</span><span class="p">)</span>
<span class="n">UUID</span><span class="p">(</span><span class="s1">&#39;12345678123456781234567812345678&#39;</span><span class="p">)</span>
<span class="n">UUID</span><span class="p">(</span><span class="s1">&#39;urn:uuid:12345678-1234-5678-1234-567812345678&#39;</span><span class="p">)</span>
<span class="n">UUID</span><span class="p">(</span><span class="nb">bytes</span><span class="o">=</span><span class="sa">b</span><span class="s1">&#39;</span><span class="se">\x12\x34\x56\x78</span><span class="s1">&#39;</span><span class="o">*</span><span class="mi">4</span><span class="p">)</span>
<span class="n">UUID</span><span class="p">(</span><span class="n">bytes_le</span><span class="o">=</span><span class="sa">b</span><span class="s1">&#39;</span><span class="se">\x78\x56\x34\x12\x34\x12\x78\x56</span><span class="s1">&#39;</span> <span class="o">+</span>
              <span class="sa">b</span><span class="s1">&#39;</span><span class="se">\x12\x34\x56\x78\x12\x34\x56\x78</span><span class="s1">&#39;</span><span class="p">)</span>
<span class="n">UUID</span><span class="p">(</span><span class="n">fields</span><span class="o">=</span><span class="p">(</span><span class="mh">0x12345678</span><span class="p">,</span> <span class="mh">0x1234</span><span class="p">,</span> <span class="mh">0x5678</span><span class="p">,</span> <span class="mh">0x12</span><span class="p">,</span> <span class="mh">0x34</span><span class="p">,</span> <span class="mh">0x567812345678</span><span class="p">))</span>
<span class="n">UUID</span><span class="p">(</span><span class="nb">int</span><span class="o">=</span><span class="mh">0x12345678123456781234567812345678</span><span class="p">)</span>
</pre></div>
</div>
<p>必须给出 <em>hex</em>、<em>bytes</em>、<em>bytes_le</em>、<em>fields</em> 或 <em>int</em> 中的唯一一个。 <em>version</em> 参数是可选的；如果给定，产生的UUID将根据 <span class="target" id="index-20"></span><a class="rfc reference external" href="https://datatracker.ietf.org/doc/html/rfc4122.html"><strong>RFC 4122</strong></a><span class="link-target"> [https://datatracker.ietf.org/doc/html/rfc4122.html]</span> 设置其变体和版本号，覆盖给定的 <em>hex</em>、<em>bytes</em>、<em>bytes_le</em>、<em>fields</em> 或 <em>int</em> 中的位。</p>
<p>UUID 对象的比较是通过比较它们的 <a class="reference internal" href="#uuid.UUID.int" title="uuid.UUID.int"><code class="xref py py-attr docutils literal notranslate"><span class="pre">UUID.int</span></code></a> 属性进行的。 与非 UUID 对象的比较会引发 <a class="reference internal" href="exceptions.xhtml#TypeError" title="TypeError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">TypeError</span></code></a>。</p>
<p><code class="docutils literal notranslate"><span class="pre">str(uuid)</span></code> 返回一个 <code class="docutils literal notranslate"><span class="pre">12345678-1234-5678-1234-567812345678</span></code> 形式的字符串，其中 32 位十六进制数字代表 UUID。</p>
</dd></dl>

<p><a class="reference internal" href="#uuid.UUID" title="uuid.UUID"><code class="xref py py-class docutils literal notranslate"><span class="pre">UUID</span></code></a> 实例有这些只读的属性:</p>
<dl class="py attribute">
<dt class="sig sig-object py" id="uuid.UUID.bytes">
<span class="sig-prename descclassname"><span class="pre">UUID.</span></span><span class="sig-name descname"><span class="pre">bytes</span></span></dt>
<dd><p>UUID是一个16字节的字符串（包含6个大端字节序的整数字段）。</p>
</dd></dl>

<dl class="py attribute">
<dt class="sig sig-object py" id="uuid.UUID.bytes_le">
<span class="sig-prename descclassname"><span class="pre">UUID.</span></span><span class="sig-name descname"><span class="pre">bytes_le</span></span></dt>
<dd><p>UUID 是一个 16 字节的字符串（其中 <em>time_low</em>、<em>time_mid</em> 和 <em>time_hi_version</em> 为小端字节顺序）。</p>
</dd></dl>

<dl class="py attribute">
<dt class="sig sig-object py" id="uuid.UUID.fields">
<span class="sig-prename descclassname"><span class="pre">UUID.</span></span><span class="sig-name descname"><span class="pre">fields</span></span></dt>
<dd><p>以元组形式存放的UUID的6个整数域，有六个单独的属性和两个派生属性：</p>
</dd></dl>

<table class="docutils align-default">
<tbody>
<tr class="row-odd"><td><p>域</p></td>
<td><p>含意</p></td>
</tr>
<tr class="row-even"><td><dl class="py attribute">
<dt class="sig sig-object py" id="uuid.UUID.time_low">
<span class="sig-prename descclassname"><span class="pre">UUID.</span></span><span class="sig-name descname"><span class="pre">time_low</span></span></dt>
<dd></dd></dl>

</td>
<td><p>UUID 的前 32 位。</p></td>
</tr>
<tr class="row-odd"><td><dl class="py attribute">
<dt class="sig sig-object py" id="uuid.UUID.time_mid">
<span class="sig-prename descclassname"><span class="pre">UUID.</span></span><span class="sig-name descname"><span class="pre">time_mid</span></span></dt>
<dd></dd></dl>

</td>
<td><p>UUID 后续的 16 位。</p></td>
</tr>
<tr class="row-even"><td><dl class="py attribute">
<dt class="sig sig-object py" id="uuid.UUID.time_hi_version">
<span class="sig-prename descclassname"><span class="pre">UUID.</span></span><span class="sig-name descname"><span class="pre">time_hi_version</span></span></dt>
<dd></dd></dl>

</td>
<td><p>UUID 后续的 16 位。</p></td>
</tr>
<tr class="row-odd"><td><dl class="py attribute">
<dt class="sig sig-object py" id="uuid.UUID.clock_seq_hi_variant">
<span class="sig-prename descclassname"><span class="pre">UUID.</span></span><span class="sig-name descname"><span class="pre">clock_seq_hi_variant</span></span></dt>
<dd></dd></dl>

</td>
<td><p>UUID 后续的 8 位。</p></td>
</tr>
<tr class="row-even"><td><dl class="py attribute">
<dt class="sig sig-object py" id="uuid.UUID.clock_seq_low">
<span class="sig-prename descclassname"><span class="pre">UUID.</span></span><span class="sig-name descname"><span class="pre">clock_seq_low</span></span></dt>
<dd></dd></dl>

</td>
<td><p>UUID 后续的 8 位。</p></td>
</tr>
<tr class="row-odd"><td><dl class="py attribute">
<dt class="sig sig-object py" id="uuid.UUID.node">
<span class="sig-prename descclassname"><span class="pre">UUID.</span></span><span class="sig-name descname"><span class="pre">node</span></span></dt>
<dd></dd></dl>

</td>
<td><p>UUID 的最后 48 位。</p></td>
</tr>
<tr class="row-even"><td><dl class="py attribute">
<dt class="sig sig-object py" id="uuid.UUID.time">
<span class="sig-prename descclassname"><span class="pre">UUID.</span></span><span class="sig-name descname"><span class="pre">time</span></span></dt>
<dd></dd></dl>

</td>
<td><p>60 比特位的时间戳。</p></td>
</tr>
<tr class="row-odd"><td><dl class="py attribute">
<dt class="sig sig-object py" id="uuid.UUID.clock_seq">
<span class="sig-prename descclassname"><span class="pre">UUID.</span></span><span class="sig-name descname"><span class="pre">clock_seq</span></span></dt>
<dd></dd></dl>

</td>
<td><p>14 比特位的序列编号。</p></td>
</tr>
</tbody>
</table>
<dl class="py attribute">
<dt class="sig sig-object py" id="uuid.UUID.hex">
<span class="sig-prename descclassname"><span class="pre">UUID.</span></span><span class="sig-name descname"><span class="pre">hex</span></span></dt>
<dd><p>UUID 是一个 32 字符的小写十六进制数码字符串。</p>
</dd></dl>

<dl class="py attribute">
<dt class="sig sig-object py" id="uuid.UUID.int">
<span class="sig-prename descclassname"><span class="pre">UUID.</span></span><span class="sig-name descname"><span class="pre">int</span></span></dt>
<dd><p>UUID是一个128位的整数。</p>
</dd></dl>

<dl class="py attribute">
<dt class="sig sig-object py" id="uuid.UUID.urn">
<span class="sig-prename descclassname"><span class="pre">UUID.</span></span><span class="sig-name descname"><span class="pre">urn</span></span></dt>
<dd><p>在 <span class="target" id="index-21"></span><a class="rfc reference external" href="https://datatracker.ietf.org/doc/html/rfc4122.html"><strong>RFC 4122</strong></a><span class="link-target"> [https://datatracker.ietf.org/doc/html/rfc4122.html]</span> 中定义的 URN 形式的 UUID。</p>
</dd></dl>

<dl class="py attribute">
<dt class="sig sig-object py" id="uuid.UUID.variant">
<span class="sig-prename descclassname"><span class="pre">UUID.</span></span><span class="sig-name descname"><span class="pre">variant</span></span></dt>
<dd><p>UUID 的变体，它决定了 UUID 的内部布局。 这将是 <a class="reference internal" href="#uuid.RESERVED_NCS" title="uuid.RESERVED_NCS"><code class="xref py py-const docutils literal notranslate"><span class="pre">RESERVED_NCS</span></code></a>, <a class="reference internal" href="#uuid.RFC_4122" title="uuid.RFC_4122"><code class="xref py py-const docutils literal notranslate"><span class="pre">RFC_4122</span></code></a>, <a class="reference internal" href="#uuid.RESERVED_MICROSOFT" title="uuid.RESERVED_MICROSOFT"><code class="xref py py-const docutils literal notranslate"><span class="pre">RESERVED_MICROSOFT</span></code></a> 或 <a class="reference internal" href="#uuid.RESERVED_FUTURE" title="uuid.RESERVED_FUTURE"><code class="xref py py-const docutils literal notranslate"><span class="pre">RESERVED_FUTURE</span></code></a> 中的一个。</p>
</dd></dl>

<dl class="py attribute">
<dt class="sig sig-object py" id="uuid.UUID.version">
<span class="sig-prename descclassname"><span class="pre">UUID.</span></span><span class="sig-name descname"><span class="pre">version</span></span></dt>
<dd><p>UUID 版本号（1 到 5，只有当变体为 <a class="reference internal" href="#uuid.RFC_4122" title="uuid.RFC_4122"><code class="xref py py-const docutils literal notranslate"><span class="pre">RFC_4122</span></code></a> 时才有意义）。</p>
</dd></dl>

<dl class="py attribute">
<dt class="sig sig-object py" id="uuid.UUID.is_safe">
<span class="sig-prename descclassname"><span class="pre">UUID.</span></span><span class="sig-name descname"><span class="pre">is_safe</span></span></dt>
<dd><p>一个 <a class="reference internal" href="#uuid.SafeUUID" title="uuid.SafeUUID"><code class="xref py py-class docutils literal notranslate"><span class="pre">SafeUUID</span></code></a> 的枚举，表示平台是否以多进程安全的方式生成 UUID。</p>
<div class="versionadded">
<p><span class="versionmodified added">Added in version 3.7.</span></p>
</div>
</dd></dl>

<p><a class="reference internal" href="#module-uuid" title="uuid: UUID objects (universally unique identifiers) according to RFC 4122"><code class="xref py py-mod docutils literal notranslate"><span class="pre">uuid</span></code></a> 模块定义了以下函数：</p>
<dl class="py function">
<dt class="sig sig-object py" id="uuid.getnode">
<span class="sig-prename descclassname"><span class="pre">uuid.</span></span><span class="sig-name descname"><span class="pre">getnode</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>获取 48 位正整数形式的硬件地址。 第一次运行时，它可能会启动一个单独的程序，这可能会相当慢。 如果所有获取硬件地址的尝试都失败了，我们会按照 <span class="target" id="index-22"></span><a class="rfc reference external" href="https://datatracker.ietf.org/doc/html/rfc4122.html"><strong>RFC 4122</strong></a><span class="link-target"> [https://datatracker.ietf.org/doc/html/rfc4122.html]</span> 中的建议，选择一个随机的 48 位数字，其多播位 (第一个八进制数的最小有效位) 设置为 1。 “硬件地址”是指一个网络接口的 MAC 地址。 在一台有多个网络接口的机器上，普遍管理的 MAC 地址 (即第一个八位数的第二个最小有效位是 <em>未设置的</em>) 将比本地管理的 MAC 地址优先，但没有其他排序保证。</p>
<div class="versionchanged">
<p><span class="versionmodified changed">在 3.7 版本发生变更: </span>普遍管理的MAC地址优于本地管理的MAC地址，因为前者保证是全球唯一的，而后者则不是。</p>
</div>
</dd></dl>

<dl class="py function" id="index-5">
<dt class="sig sig-object py" id="uuid.uuid1">
<span class="sig-prename descclassname"><span class="pre">uuid.</span></span><span class="sig-name descname"><span class="pre">uuid1</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">node</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">clock_seq</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>根据主机 ID、序列号和当前时间生成一个 UUID。 如果没有给出 <em>node</em>，则使用 <a class="reference internal" href="#uuid.getnode" title="uuid.getnode"><code class="xref py py-func docutils literal notranslate"><span class="pre">getnode()</span></code></a> 来获取硬件地址。 如果给出了 <em>clock_seq</em>，它将被用作序列号；否则将选择一个随机的 14 比特位序列号。</p>
</dd></dl>

<dl class="py function" id="index-6">
<dt class="sig sig-object py" id="uuid.uuid3">
<span class="sig-prename descclassname"><span class="pre">uuid.</span></span><span class="sig-name descname"><span class="pre">uuid3</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">namespace</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">name</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>根据命名空间标识符（一个 UUID）和名称（一个 <a class="reference internal" href="stdtypes.xhtml#bytes" title="bytes"><code class="xref py py-class docutils literal notranslate"><span class="pre">bytes</span></code></a> 对象或将使用 UTF-8 进行编码的字符串）的 MD5 哈希值来生成一个 UUID。</p>
</dd></dl>

<dl class="py function" id="index-7">
<dt class="sig sig-object py" id="uuid.uuid4">
<span class="sig-prename descclassname"><span class="pre">uuid.</span></span><span class="sig-name descname"><span class="pre">uuid4</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>生成一个随机的UUID。</p>
</dd></dl>

<dl class="py function" id="index-8">
<dt class="sig sig-object py" id="uuid.uuid5">
<span class="sig-prename descclassname"><span class="pre">uuid.</span></span><span class="sig-name descname"><span class="pre">uuid5</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">namespace</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">name</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>根据命名空间标识符（一个 UUID）和名称（一个 <a class="reference internal" href="stdtypes.xhtml#bytes" title="bytes"><code class="xref py py-class docutils literal notranslate"><span class="pre">bytes</span></code></a> 对象或将使用 UTF-8 进行编码的字符串）的 SHA-1 哈希值来生成一个 UUID。</p>
</dd></dl>

<p id="index-9"><a class="reference internal" href="#module-uuid" title="uuid: UUID objects (universally unique identifiers) according to RFC 4122"><code class="xref py py-mod docutils literal notranslate"><span class="pre">uuid</span></code></a> 模块定义了以下命名空间标识符，供 <a class="reference internal" href="#uuid.uuid3" title="uuid.uuid3"><code class="xref py py-func docutils literal notranslate"><span class="pre">uuid3()</span></code></a> 或 <a class="reference internal" href="#uuid.uuid5" title="uuid.uuid5"><code class="xref py py-func docutils literal notranslate"><span class="pre">uuid5()</span></code></a> 使用。</p>
<dl class="py data">
<dt class="sig sig-object py" id="uuid.NAMESPACE_DNS">
<span class="sig-prename descclassname"><span class="pre">uuid.</span></span><span class="sig-name descname"><span class="pre">NAMESPACE_DNS</span></span></dt>
<dd><p>当指定这个命名空间时，<em>name</em> 字符串是一个完全限定的域名。</p>
</dd></dl>

<dl class="py data">
<dt class="sig sig-object py" id="uuid.NAMESPACE_URL">
<span class="sig-prename descclassname"><span class="pre">uuid.</span></span><span class="sig-name descname"><span class="pre">NAMESPACE_URL</span></span></dt>
<dd><p>当指定这个命名空间时，<em>name</em> 字符串是一个 URL。</p>
</dd></dl>

<dl class="py data">
<dt class="sig sig-object py" id="uuid.NAMESPACE_OID">
<span class="sig-prename descclassname"><span class="pre">uuid.</span></span><span class="sig-name descname"><span class="pre">NAMESPACE_OID</span></span></dt>
<dd><p>当指定这个命名空间时，<em>name</em> 字符串是一个 ISO OID。</p>
</dd></dl>

<dl class="py data">
<dt class="sig sig-object py" id="uuid.NAMESPACE_X500">
<span class="sig-prename descclassname"><span class="pre">uuid.</span></span><span class="sig-name descname"><span class="pre">NAMESPACE_X500</span></span></dt>
<dd><p>当指定这个命名空间时，<em>name</em> 字符串是 DER 或文本输出格式的 X.500 DN。</p>
</dd></dl>

<p><a class="reference internal" href="#module-uuid" title="uuid: UUID objects (universally unique identifiers) according to RFC 4122"><code class="xref py py-mod docutils literal notranslate"><span class="pre">uuid</span></code></a> 模块为 <a class="reference internal" href="#uuid.UUID.variant" title="uuid.UUID.variant"><code class="xref py py-attr docutils literal notranslate"><span class="pre">variant</span></code></a> 属性的可能值定义了以下常量：</p>
<dl class="py data">
<dt class="sig sig-object py" id="uuid.RESERVED_NCS">
<span class="sig-prename descclassname"><span class="pre">uuid.</span></span><span class="sig-name descname"><span class="pre">RESERVED_NCS</span></span></dt>
<dd><p>为NCS兼容性保留。</p>
</dd></dl>

<dl class="py data">
<dt class="sig sig-object py" id="uuid.RFC_4122">
<span class="sig-prename descclassname"><span class="pre">uuid.</span></span><span class="sig-name descname"><span class="pre">RFC_4122</span></span></dt>
<dd><p>指定 <span class="target" id="index-23"></span><a class="rfc reference external" href="https://datatracker.ietf.org/doc/html/rfc4122.html"><strong>RFC 4122</strong></a><span class="link-target"> [https://datatracker.ietf.org/doc/html/rfc4122.html]</span> 中给出的 UUID 布局。</p>
</dd></dl>

<dl class="py data">
<dt class="sig sig-object py" id="uuid.RESERVED_MICROSOFT">
<span class="sig-prename descclassname"><span class="pre">uuid.</span></span><span class="sig-name descname"><span class="pre">RESERVED_MICROSOFT</span></span></dt>
<dd><p>为微软的兼容性保留。</p>
</dd></dl>

<dl class="py data">
<dt class="sig sig-object py" id="uuid.RESERVED_FUTURE">
<span class="sig-prename descclassname"><span class="pre">uuid.</span></span><span class="sig-name descname"><span class="pre">RESERVED_FUTURE</span></span></dt>
<dd><p>保留给未来的定义。</p>
</dd></dl>

<div class="admonition seealso">
<p class="admonition-title">参见</p>
<dl class="simple">
<dt><span class="target" id="index-24"></span><a class="rfc reference external" href="https://datatracker.ietf.org/doc/html/rfc4122.html"><strong>RFC 4122</strong></a><span class="link-target"> [https://datatracker.ietf.org/doc/html/rfc4122.html]</span> - 通用唯一标识符（UUID）URN命名空间</dt><dd><p>本规范定义了UUID的统一资源名称空间，UUID的内部格式，以及生成UUID的方法。</p>
</dd>
</dl>
</div>
<section id="command-line-usage">
<span id="uuid-cli"></span><h2>命令行用法</h2>
<div class="versionadded">
<p><span class="versionmodified added">Added in version 3.12.</span></p>
</div>
<p><a class="reference internal" href="#module-uuid" title="uuid: UUID objects (universally unique identifiers) according to RFC 4122"><code class="xref py py-mod docutils literal notranslate"><span class="pre">uuid</span></code></a> 模块可以在命令行下作为脚本来执行。</p>
<div class="highlight-sh notranslate"><div class="highlight"><pre><span></span>python<span class="w"> </span>-m<span class="w"> </span>uuid<span class="w"> </span><span class="o">[</span>-h<span class="o">]</span><span class="w"> </span><span class="o">[</span>-u<span class="w"> </span><span class="o">{</span>uuid1,uuid3,uuid4,uuid5<span class="o">}]</span><span class="w"> </span><span class="o">[</span>-n<span class="w"> </span>NAMESPACE<span class="o">]</span><span class="w"> </span><span class="o">[</span>-N<span class="w"> </span>NAME<span class="o">]</span>
</pre></div>
</div>
<p>可以接受以下选项：</p>
<dl class="std option">
<dt class="sig sig-object std" id="cmdoption-uuid-h">
<span id="cmdoption-uuid-help"></span><span class="sig-name descname"><span class="pre">-h</span></span><span class="sig-prename descclassname"></span><span class="sig-prename descclassname"><span class="pre">,</span> </span><span class="sig-name descname"><span class="pre">--help</span></span><span class="sig-prename descclassname"></span></dt>
<dd><p>显示帮助信息并退出。</p>
</dd></dl>

<dl class="std option">
<dt class="sig sig-object std" id="cmdoption-uuid-u">
<span class="sig-name descname"><span class="pre">-u</span></span><span class="sig-prename descclassname"> <span class="pre">&lt;uuid&gt;</span></span></dt>
<dt class="sig sig-object std" id="cmdoption-uuid-uuid">
<span class="sig-name descname"><span class="pre">--uuid</span></span><span class="sig-prename descclassname"> <span class="pre">&lt;uuid&gt;</span></span></dt>
<dd><p>指定要用于生成 uuid 的函数名称。 默认会使用 <a class="reference internal" href="#uuid.uuid4" title="uuid.uuid4"><code class="xref py py-func docutils literal notranslate"><span class="pre">uuid4()</span></code></a>。</p>
</dd></dl>

<dl class="std option">
<dt class="sig sig-object std" id="cmdoption-uuid-n">
<span class="sig-name descname"><span class="pre">-n</span></span><span class="sig-prename descclassname"> <span class="pre">&lt;namespace&gt;</span></span></dt>
<dt class="sig sig-object std" id="cmdoption-uuid-namespace">
<span class="sig-name descname"><span class="pre">--namespace</span></span><span class="sig-prename descclassname"> <span class="pre">&lt;namespace&gt;</span></span></dt>
<dd><p>该命名空间是一个 <code class="docutils literal notranslate"><span class="pre">UUID</span></code> 或者 <code class="docutils literal notranslate"><span class="pre">&#64;ns</span></code> 其中 <code class="docutils literal notranslate"><span class="pre">ns</span></code> 是一个以命名空间名称来定位的知名预定义 UUID。 例如 <code class="docutils literal notranslate"><span class="pre">&#64;dns</span></code>, <code class="docutils literal notranslate"><span class="pre">&#64;url</span></code>, <code class="docutils literal notranslate"><span class="pre">&#64;oid</span></code> 和 <code class="docutils literal notranslate"><span class="pre">&#64;x500</span></code>。 仅对于 <a class="reference internal" href="#uuid.uuid3" title="uuid.uuid3"><code class="xref py py-func docutils literal notranslate"><span class="pre">uuid3()</span></code></a> / <a class="reference internal" href="#uuid.uuid5" title="uuid.uuid5"><code class="xref py py-func docutils literal notranslate"><span class="pre">uuid5()</span></code></a> 等函数是必需的。</p>
</dd></dl>

<dl class="std option">
<dt class="sig sig-object std" id="cmdoption-uuid-N">
<span class="sig-name descname"><span class="pre">-N</span></span><span class="sig-prename descclassname"> <span class="pre">&lt;name&gt;</span></span></dt>
<dt class="sig sig-object std" id="cmdoption-uuid-name">
<span class="sig-name descname"><span class="pre">--name</span></span><span class="sig-prename descclassname"> <span class="pre">&lt;name&gt;</span></span></dt>
<dd><p>用作生成 uuid 的一部分的名称。 仅对于 <a class="reference internal" href="#uuid.uuid3" title="uuid.uuid3"><code class="xref py py-func docutils literal notranslate"><span class="pre">uuid3()</span></code></a> / <a class="reference internal" href="#uuid.uuid5" title="uuid.uuid5"><code class="xref py py-func docutils literal notranslate"><span class="pre">uuid5()</span></code></a> 等函数是必需的。</p>
</dd></dl>

</section>
<section id="example">
<span id="uuid-example"></span><h2>示例</h2>
<p>下面是一些 <a class="reference internal" href="#module-uuid" title="uuid: UUID objects (universally unique identifiers) according to RFC 4122"><code class="xref py py-mod docutils literal notranslate"><span class="pre">uuid</span></code></a> 模块的典型使用例子:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="kn">import</span> <span class="nn">uuid</span>

<span class="gp">&gt;&gt;&gt; </span><span class="c1"># make a UUID based on the host ID and current time</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">uuid</span><span class="o">.</span><span class="n">uuid1</span><span class="p">()</span>
<span class="go">UUID(&#39;a8098c1a-f86e-11da-bd1a-00112444be1e&#39;)</span>

<span class="gp">&gt;&gt;&gt; </span><span class="c1"># make a UUID using an MD5 hash of a namespace UUID and a name</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">uuid</span><span class="o">.</span><span class="n">uuid3</span><span class="p">(</span><span class="n">uuid</span><span class="o">.</span><span class="n">NAMESPACE_DNS</span><span class="p">,</span> <span class="s1">&#39;python.org&#39;</span><span class="p">)</span>
<span class="go">UUID(&#39;6fa459ea-ee8a-3ca4-894e-db77e160355e&#39;)</span>

<span class="gp">&gt;&gt;&gt; </span><span class="c1"># make a random UUID</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">uuid</span><span class="o">.</span><span class="n">uuid4</span><span class="p">()</span>
<span class="go">UUID(&#39;16fd2706-8baf-433b-82eb-8c7fada847da&#39;)</span>

<span class="gp">&gt;&gt;&gt; </span><span class="c1"># make a UUID using a SHA-1 hash of a namespace UUID and a name</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">uuid</span><span class="o">.</span><span class="n">uuid5</span><span class="p">(</span><span class="n">uuid</span><span class="o">.</span><span class="n">NAMESPACE_DNS</span><span class="p">,</span> <span class="s1">&#39;python.org&#39;</span><span class="p">)</span>
<span class="go">UUID(&#39;886313e1-3b8a-5372-9b90-0c9aee199e5d&#39;)</span>

<span class="gp">&gt;&gt;&gt; </span><span class="c1"># make a UUID from a string of hex digits (braces and hyphens ignored)</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">x</span> <span class="o">=</span> <span class="n">uuid</span><span class="o">.</span><span class="n">UUID</span><span class="p">(</span><span class="s1">&#39;{00010203-0405-0607-0809-0a0b0c0d0e0f}&#39;</span><span class="p">)</span>

<span class="gp">&gt;&gt;&gt; </span><span class="c1"># convert a UUID to a string of hex digits in standard form</span>
<span class="gp">&gt;&gt;&gt; </span><span class="nb">str</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
<span class="go">&#39;00010203-0405-0607-0809-0a0b0c0d0e0f&#39;</span>

<span class="gp">&gt;&gt;&gt; </span><span class="c1"># get the raw 16 bytes of the UUID</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">x</span><span class="o">.</span><span class="n">bytes</span>
<span class="go">b&#39;\x00\x01\x02\x03\x04\x05\x06\x07\x08\t\n\x0b\x0c\r\x0e\x0f&#39;</span>

<span class="gp">&gt;&gt;&gt; </span><span class="c1"># make a UUID from a 16-byte string</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">uuid</span><span class="o">.</span><span class="n">UUID</span><span class="p">(</span><span class="nb">bytes</span><span class="o">=</span><span class="n">x</span><span class="o">.</span><span class="n">bytes</span><span class="p">)</span>
<span class="go">UUID(&#39;00010203-0405-0607-0809-0a0b0c0d0e0f&#39;)</span>
</pre></div>
</div>
</section>
<section id="command-line-example">
<span id="uuid-cli-example"></span><h2>命令行示例</h2>
<p>下面是一些 <a class="reference internal" href="#module-uuid" title="uuid: UUID objects (universally unique identifiers) according to RFC 4122"><code class="xref py py-mod docutils literal notranslate"><span class="pre">uuid</span></code></a> 命令行接口的典型用法示例:</p>
<div class="highlight-shell notranslate"><div class="highlight"><pre><span></span><span class="c1"># generate a random uuid - by default uuid4() is used</span>
$<span class="w"> </span>python<span class="w"> </span>-m<span class="w"> </span>uuid

<span class="c1"># generate a uuid using uuid1()</span>
$<span class="w"> </span>python<span class="w"> </span>-m<span class="w"> </span>uuid<span class="w"> </span>-u<span class="w"> </span>uuid1

<span class="c1"># generate a uuid using uuid5</span>
$<span class="w"> </span>python<span class="w"> </span>-m<span class="w"> </span>uuid<span class="w"> </span>-u<span class="w"> </span>uuid5<span class="w"> </span>-n<span class="w"> </span>@url<span class="w"> </span>-N<span class="w"> </span>example.com
</pre></div>
</div>
</section>
</section>


            <div class="clearer"></div>
          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>