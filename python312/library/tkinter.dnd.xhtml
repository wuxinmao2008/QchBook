<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta name="viewport" content="width=device-width, initial-scale=1" />
<meta property="og:title" content="tkinter.dnd --- Drag and drop support" />
<meta property="og:type" content="website" />
<meta property="og:url" content="https://docs.python.org/3/library/tkinter.dnd.xhtml" />
<meta property="og:site_name" content="Python documentation" />
<meta property="og:description" content="源代码: Lib/tkinter/dnd.py[https://github.com/python/cpython/tree/3.12/Lib/tkinter/dnd.py] tkinter.dnd 模块为单个应用内部的对象提供了在同一窗口中或多个窗口间的拖放操作支持。 要将对象设为可拖放，你必须为其创建启动拖放进程的事件绑定。 通常，你要将 ButtonPress 事件绑定到你所编写的回调..." />
<meta property="og:image" content="https://docs.python.org/3/_static/og-image.png" />
<meta property="og:image:alt" content="Python documentation" />
<meta name="description" content="源代码: Lib/tkinter/dnd.py[https://github.com/python/cpython/tree/3.12/Lib/tkinter/dnd.py] tkinter.dnd 模块为单个应用内部的对象提供了在同一窗口中或多个窗口间的拖放操作支持。 要将对象设为可拖放，你必须为其创建启动拖放进程的事件绑定。 通常，你要将 ButtonPress 事件绑定到你所编写的回调..." />
<meta property="og:image:width" content="200" />
<meta property="og:image:height" content="200" />
<meta name="theme-color" content="#3776ab" />

    <title>tkinter.dnd --- Drag and drop support</title>
    <link rel="stylesheet" type="text/css" href="../_static/pygments.css" />
    <link rel="stylesheet" type="text/css" href="../_static/epub.css" />
    <link rel="canonical" href="https://docs.python.org/3/library/tkinter.dnd.html" />
    
      
    

    
    <style>
      @media only screen {
        table.full-width-table {
            width: 100%;
        }
      }
    </style>
 

  </head><body>


    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <section id="module-tkinter.dnd">
<span id="tkinter-dnd-drag-and-drop-support"></span><h1><code class="xref py py-mod docutils literal notranslate"><span class="pre">tkinter.dnd</span></code> --- Drag and drop support</h1>
<p><strong>源代码:</strong> <a class="reference external" href="https://github.com/python/cpython/tree/3.12/Lib/tkinter/dnd.py">Lib/tkinter/dnd.py</a><span class="link-target"> [https://github.com/python/cpython/tree/3.12/Lib/tkinter/dnd.py]</span></p>
<hr class="docutils" />
<div class="admonition note">
<p class="admonition-title">备注</p>
<p>此模块是实验性的且在为 Tk DND 所替代后将被弃用。</p>
</div>
<p><a class="reference internal" href="#module-tkinter.dnd" title="tkinter.dnd: Tkinter drag-and-drop interface (Tk)"><code class="xref py py-mod docutils literal notranslate"><span class="pre">tkinter.dnd</span></code></a> 模块为单个应用内部的对象提供了在同一窗口中或多个窗口间的拖放操作支持。 要将对象设为可拖放，你必须为其创建启动拖放进程的事件绑定。 通常，你要将 ButtonPress 事件绑定到你所编写的回调函数 (参见 <a class="reference internal" href="tkinter.xhtml#bindings-and-events"><span class="std std-ref">绑定和事件</span></a>)。 该函数应当调用 <a class="reference internal" href="#tkinter.dnd.dnd_start" title="tkinter.dnd.dnd_start"><code class="xref py py-func docutils literal notranslate"><span class="pre">dnd_start()</span></code></a>，其中 'source' 为要拖动的对象，而 'event' 为发起调用的事件（你的回调函数的参数）。</p>
<p>目标对象的选择方式如下:</p>
<ol class="arabic simple">
<li><p>从顶至底地在鼠标之下的区域中搜索目标控件</p></li>
</ol>
<blockquote>
<div><ul class="simple">
<li><p>目标控件应当具有一个指向可调用对象的 <em>dnd_accept</em> 属性</p></li>
<li><p>If <em>dnd_accept</em> is not present or returns <code class="docutils literal notranslate"><span class="pre">None</span></code>, search moves to parent widget</p></li>
<li><p>If no target widget is found, then the target object is <code class="docutils literal notranslate"><span class="pre">None</span></code></p></li>
</ul>
</div></blockquote>
<ol class="arabic simple" start="2">
<li><p>调用 <em>&lt;old_target&gt;.dnd_leave(source, event)</em></p></li>
<li><p>调用 <em>&lt;new_target&gt;.dnd_enter(source, event)</em></p></li>
<li><p>调用 <em>&lt;target&gt;.dnd_commit(source, event)</em> 来通知释放</p></li>
<li><p>调用 <em>&lt;source&gt;.dnd_end(target, event)</em> 来表明拖放的结束</p></li>
</ol>
<dl class="py class">
<dt class="sig sig-object py" id="tkinter.dnd.DndHandler">
<em class="property"><span class="pre">class</span><span class="w"> </span></em><span class="sig-prename descclassname"><span class="pre">tkinter.dnd.</span></span><span class="sig-name descname"><span class="pre">DndHandler</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">source</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">event</span></span></em><span class="sig-paren">)</span></dt>
<dd><p><em>DndHandler</em> 类处理拖放事件，在事件控件的根对象上跟踪 Motion 和 ButtonRelease 事件。</p>
<dl class="py method">
<dt class="sig sig-object py" id="tkinter.dnd.DndHandler.cancel">
<span class="sig-name descname"><span class="pre">cancel</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">event</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>取消拖放进程。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="tkinter.dnd.DndHandler.finish">
<span class="sig-name descname"><span class="pre">finish</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">event</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">commit</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">0</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>执行结束播放函数。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="tkinter.dnd.DndHandler.on_motion">
<span class="sig-name descname"><span class="pre">on_motion</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">event</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>在执行拖动期间为目标对象检查鼠标之下的区域。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="tkinter.dnd.DndHandler.on_release">
<span class="sig-name descname"><span class="pre">on_release</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">event</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>当释放模式被触发时表明拖动的结束。</p>
</dd></dl>

</dd></dl>

<dl class="py function">
<dt class="sig sig-object py" id="tkinter.dnd.dnd_start">
<span class="sig-prename descclassname"><span class="pre">tkinter.dnd.</span></span><span class="sig-name descname"><span class="pre">dnd_start</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">source</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">event</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>用于拖放进程的工厂函数。</p>
</dd></dl>

<div class="admonition seealso">
<p class="admonition-title">参见</p>
<p><a class="reference internal" href="tkinter.xhtml#bindings-and-events"><span class="std std-ref">绑定和事件</span></a></p>
</div>
</section>


            <div class="clearer"></div>
          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>