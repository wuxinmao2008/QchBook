<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta name="viewport" content="width=device-width, initial-scale=1" />
<meta property="og:title" content="webbrowser --- 方便的 Web 浏览器控制工具" />
<meta property="og:type" content="website" />
<meta property="og:url" content="https://docs.python.org/3/library/webbrowser.xhtml" />
<meta property="og:site_name" content="Python documentation" />
<meta property="og:description" content="源码： Lib/webbrowser.py[https://github.com/python/cpython/tree/3.12/Lib/webbrowser.py] webbrowser 模块提供了一个高层级接口，允许向用户显示基于 Web 的文档。 在大多数情况下，只需调用此模块的 open() 函数就可以了。 在 Unix 下，图形浏览器在 X11 下是首选，但如果图形浏览器不可用或..." />
<meta property="og:image" content="https://docs.python.org/3/_static/og-image.png" />
<meta property="og:image:alt" content="Python documentation" />
<meta name="description" content="源码： Lib/webbrowser.py[https://github.com/python/cpython/tree/3.12/Lib/webbrowser.py] webbrowser 模块提供了一个高层级接口，允许向用户显示基于 Web 的文档。 在大多数情况下，只需调用此模块的 open() 函数就可以了。 在 Unix 下，图形浏览器在 X11 下是首选，但如果图形浏览器不可用或..." />
<meta property="og:image:width" content="200" />
<meta property="og:image:height" content="200" />
<meta name="theme-color" content="#3776ab" />

    <title>webbrowser --- 方便的 Web 浏览器控制工具</title>
    <link rel="stylesheet" type="text/css" href="../_static/pygments.css" />
    <link rel="stylesheet" type="text/css" href="../_static/epub.css" />
    <link rel="canonical" href="https://docs.python.org/3/library/webbrowser.html" />
    
      
    

    
    <style>
      @media only screen {
        table.full-width-table {
            width: 100%;
        }
      }
    </style>
 

  </head><body>


    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <section id="module-webbrowser">
<span id="webbrowser-convenient-web-browser-controller"></span><h1><code class="xref py py-mod docutils literal notranslate"><span class="pre">webbrowser</span></code> --- 方便的 Web 浏览器控制工具</h1>
<p><strong>源码：</strong> <a class="reference external" href="https://github.com/python/cpython/tree/3.12/Lib/webbrowser.py">Lib/webbrowser.py</a><span class="link-target"> [https://github.com/python/cpython/tree/3.12/Lib/webbrowser.py]</span></p>
<hr class="docutils" />
<p><a class="reference internal" href="#module-webbrowser" title="webbrowser: Easy-to-use controller for web browsers."><code class="xref py py-mod docutils literal notranslate"><span class="pre">webbrowser</span></code></a> 模块提供了一个高层级接口，允许向用户显示基于 Web 的文档。 在大多数情况下，只需调用此模块的 <a class="reference internal" href="#webbrowser.open" title="webbrowser.open"><code class="xref py py-func docutils literal notranslate"><span class="pre">open()</span></code></a> 函数就可以了。</p>
<p>在 Unix 下，图形浏览器在 X11 下是首选，但如果图形浏览器不可用或 X11 显示不可用，则将使用文本模式浏览器。 如果使用文本模式浏览器，则调用进程将阻塞，直到用户退出浏览器。</p>
<p>如果存在环境变量 <span class="target" id="index-7"></span><code class="xref std std-envvar docutils literal notranslate"><span class="pre">BROWSER</span></code> ，则将其解释为 <a class="reference internal" href="os.xhtml#os.pathsep" title="os.pathsep"><code class="xref py py-data docutils literal notranslate"><span class="pre">os.pathsep</span></code></a> 分隔的浏览器列表，以便在平台默认值之前尝试。 当列表部分的值包含字符串 <code class="docutils literal notranslate"><span class="pre">％s</span></code> 时，它被解释为一个文字浏览器命令行，用于替换 <code class="docutils literal notranslate"><span class="pre">％s</span></code> 的参数 URL ；如果该部分不包含 <code class="docutils literal notranslate"><span class="pre">％s</span></code>，则它只被解释为要启动的浏览器的名称。 <a class="footnote-reference brackets" href="#id2" id="id1" role="doc-noteref"><span class="fn-bracket">[</span>1<span class="fn-bracket">]</span></a></p>
<p>对于非 Unix 平台，或者当 Unix 上有远程浏览器时，控制过程不会等待用户完成浏览器，而是允许远程浏览器在显示界面上维护自己的窗口。 如果 Unix 上没有远程浏览器，控制进程将启动一个新的浏览器并等待。</p>
<p>The script <strong class="program">webbrowser</strong> can be used as a command-line interface for the
module. It accepts a URL as the argument. It accepts the following optional
parameters: <code class="docutils literal notranslate"><span class="pre">-n</span></code> opens the URL in a new browser window, if possible;
<code class="docutils literal notranslate"><span class="pre">-t</span></code> opens the URL in a new browser page (&quot;tab&quot;). The options are,
naturally, mutually exclusive.  Usage example:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="n">python</span> <span class="o">-</span><span class="n">m</span> <span class="n">webbrowser</span> <span class="o">-</span><span class="n">t</span> <span class="s2">&quot;https://www.python.org&quot;</span>
</pre></div>
</div>
<div class="availability docutils container">
<p><a class="reference internal" href="intro.xhtml#availability"><span class="std std-ref">可用性</span></a>: 非 Emscripten，非 WASI。</p>
<p>此模块在 WebAssembly 平台 <code class="docutils literal notranslate"><span class="pre">wasm32-emscripten</span></code> 和 <code class="docutils literal notranslate"><span class="pre">wasm32-wasi</span></code> 上不适用或不可用。 请参阅 <a class="reference internal" href="intro.xhtml#wasm-availability"><span class="std std-ref">WebAssembly 平台</span></a> 了解详情。</p>
</div>
<p>定义了以下异常：</p>
<dl class="py exception">
<dt class="sig sig-object py" id="webbrowser.Error">
<em class="property"><span class="pre">exception</span><span class="w"> </span></em><span class="sig-prename descclassname"><span class="pre">webbrowser.</span></span><span class="sig-name descname"><span class="pre">Error</span></span></dt>
<dd><p>发生浏览器控件错误时引发异常。</p>
</dd></dl>

<p>定义了以下函数：</p>
<dl class="py function">
<dt class="sig sig-object py" id="webbrowser.open">
<span class="sig-prename descclassname"><span class="pre">webbrowser.</span></span><span class="sig-name descname"><span class="pre">open</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">url</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">new</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">0</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">autoraise</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">True</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>使用默认浏览器显示 <em>url</em>。 如果 <em>new</em> 为 0，则尽可能在同一浏览器窗口中打开 <em>url</em>。 如果 <em>new</em> 为 1，则尽可能打开新的浏览器窗口。 如果 <em>new</em> 为 2，则尽可能打开新的浏览器页面（“标签”）。 如果 <em>autoraise</em> 为 “True”，则会尽可能置前窗口（请注意，在许多窗口管理器下，无论此变量的设置如何，都会置前窗口）。</p>
<p>请注意，在某些平台上，尝试使用此函数打开文件名，可能会起作用并启动操作系统的关联程序。 但是，这种方式不被支持也不可移植。</p>
<p class="audit-hook">使用 <code class="docutils literal notranslate"><span class="pre">url</span></code> 参数会引发  <a class="reference internal" href="sys.xhtml#auditing"><span class="std std-ref">auditing event</span></a> <code class="docutils literal notranslate"><span class="pre">webbrowser.open</span></code> 。</p>
</dd></dl>

<dl class="py function">
<dt class="sig sig-object py" id="webbrowser.open_new">
<span class="sig-prename descclassname"><span class="pre">webbrowser.</span></span><span class="sig-name descname"><span class="pre">open_new</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">url</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>如果可能，在默认浏览器的新窗口中打开 <em>url</em>，否则，在唯一的浏览器窗口中打开 <em>url</em>。</p>
</dd></dl>

<dl class="py function">
<dt class="sig sig-object py" id="webbrowser.open_new_tab">
<span class="sig-prename descclassname"><span class="pre">webbrowser.</span></span><span class="sig-name descname"><span class="pre">open_new_tab</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">url</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>如果可能，在默认浏览器的新页面（“标签”）中打开 <em>url</em>，否则等效于 <a class="reference internal" href="#webbrowser.open_new" title="webbrowser.open_new"><code class="xref py py-func docutils literal notranslate"><span class="pre">open_new()</span></code></a>。</p>
</dd></dl>

<dl class="py function">
<dt class="sig sig-object py" id="webbrowser.get">
<span class="sig-prename descclassname"><span class="pre">webbrowser.</span></span><span class="sig-name descname"><span class="pre">get</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">using</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>返回浏览器类型为 <em>using</em> 指定的控制器对象。 如果 <em>using</em> 为 <code class="docutils literal notranslate"><span class="pre">None</span></code>，则返回适用于调用者环境的默认浏览器的控制器。</p>
</dd></dl>

<dl class="py function">
<dt class="sig sig-object py" id="webbrowser.register">
<span class="sig-prename descclassname"><span class="pre">webbrowser.</span></span><span class="sig-name descname"><span class="pre">register</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">name</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">constructor</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">instance</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="o"><span class="pre">*</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">preferred</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">False</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>注册 <em>name</em> 浏览器类型。 注册浏览器类型后， <a class="reference internal" href="#webbrowser.get" title="webbrowser.get"><code class="xref py py-func docutils literal notranslate"><span class="pre">get()</span></code></a> 函数可以返回该浏览器类型的控制器。 如果没有提供 <em>instance</em>，或者为 <code class="docutils literal notranslate"><span class="pre">None</span></code>，<em>constructor</em> 将在没有参数的情况下被调用，以在需要时创建实例。 如果提供了 <em>instance</em>，则永远不会调用 <em>constructor</em>，并且可能是 <code class="docutils literal notranslate"><span class="pre">None</span></code>。</p>
<p>将 <em>preferred</em> 设置为 <code class="docutils literal notranslate"><span class="pre">True</span></code> 使得这个浏览器成为 <a class="reference internal" href="#webbrowser.get" title="webbrowser.get"><code class="xref py py-func docutils literal notranslate"><span class="pre">get()</span></code></a> 不带参数调用的首选结果。 否则，只有在您计划设置 <span class="target" id="index-8"></span><code class="xref std std-envvar docutils literal notranslate"><span class="pre">BROWSER</span></code> 变量，或使用与您声明的处理程序的名称相匹配的非空参数调用 <a class="reference internal" href="#webbrowser.get" title="webbrowser.get"><code class="xref py py-func docutils literal notranslate"><span class="pre">get()</span></code></a> 时，此入口点才有用。</p>
<div class="versionchanged">
<p><span class="versionmodified changed">在 3.7 版本发生变更: </span>添加了仅关键字参数 <em>preferred</em>。</p>
</div>
</dd></dl>

<p>预定义了许多浏览器类型。 此表给出了可以传递给 <a class="reference internal" href="#webbrowser.get" title="webbrowser.get"><code class="xref py py-func docutils literal notranslate"><span class="pre">get()</span></code></a> 函数的类型名称以及控制器类的相应实例化，这些都在此模块中定义。</p>
<table class="docutils align-default">
<thead>
<tr class="row-odd"><th class="head"><p>类型名</p></th>
<th class="head"><p>类名</p></th>
<th class="head"><p>备注</p></th>
</tr>
</thead>
<tbody>
<tr class="row-even"><td><p><code class="docutils literal notranslate"><span class="pre">'mozilla'</span></code></p></td>
<td><p><code class="xref py py-class docutils literal notranslate"><span class="pre">Mozilla('mozilla')</span></code></p></td>
<td></td>
</tr>
<tr class="row-odd"><td><p><code class="docutils literal notranslate"><span class="pre">'firefox'</span></code></p></td>
<td><p><code class="xref py py-class docutils literal notranslate"><span class="pre">Mozilla('mozilla')</span></code></p></td>
<td></td>
</tr>
<tr class="row-even"><td><p><code class="docutils literal notranslate"><span class="pre">'epiphany'</span></code></p></td>
<td><p><code class="xref py py-class docutils literal notranslate"><span class="pre">Epiphany('epiphany')</span></code></p></td>
<td></td>
</tr>
<tr class="row-odd"><td><p><code class="docutils literal notranslate"><span class="pre">'kfmclient'</span></code></p></td>
<td><p><code class="xref py py-class docutils literal notranslate"><span class="pre">Konqueror()</span></code></p></td>
<td><p>(1)</p></td>
</tr>
<tr class="row-even"><td><p><code class="docutils literal notranslate"><span class="pre">'konqueror'</span></code></p></td>
<td><p><code class="xref py py-class docutils literal notranslate"><span class="pre">Konqueror()</span></code></p></td>
<td><p>(1)</p></td>
</tr>
<tr class="row-odd"><td><p><code class="docutils literal notranslate"><span class="pre">'kfm'</span></code></p></td>
<td><p><code class="xref py py-class docutils literal notranslate"><span class="pre">Konqueror()</span></code></p></td>
<td><p>(1)</p></td>
</tr>
<tr class="row-even"><td><p><code class="docutils literal notranslate"><span class="pre">'opera'</span></code></p></td>
<td><p><code class="xref py py-class docutils literal notranslate"><span class="pre">Opera()</span></code></p></td>
<td></td>
</tr>
<tr class="row-odd"><td><p><code class="docutils literal notranslate"><span class="pre">'links'</span></code></p></td>
<td><p><code class="xref py py-class docutils literal notranslate"><span class="pre">GenericBrowser('links')</span></code></p></td>
<td></td>
</tr>
<tr class="row-even"><td><p><code class="docutils literal notranslate"><span class="pre">'elinks'</span></code></p></td>
<td><p><code class="xref py py-class docutils literal notranslate"><span class="pre">Elinks('elinks')</span></code></p></td>
<td></td>
</tr>
<tr class="row-odd"><td><p><code class="docutils literal notranslate"><span class="pre">'lynx'</span></code></p></td>
<td><p><code class="xref py py-class docutils literal notranslate"><span class="pre">GenericBrowser('lynx')</span></code></p></td>
<td></td>
</tr>
<tr class="row-even"><td><p><code class="docutils literal notranslate"><span class="pre">'w3m'</span></code></p></td>
<td><p><code class="xref py py-class docutils literal notranslate"><span class="pre">GenericBrowser('w3m')</span></code></p></td>
<td></td>
</tr>
<tr class="row-odd"><td><p><code class="docutils literal notranslate"><span class="pre">'windows-default'</span></code></p></td>
<td><p><code class="xref py py-class docutils literal notranslate"><span class="pre">WindowsDefault</span></code></p></td>
<td><p>(2)</p></td>
</tr>
<tr class="row-even"><td><p><code class="docutils literal notranslate"><span class="pre">'macosx'</span></code></p></td>
<td><p><code class="xref py py-class docutils literal notranslate"><span class="pre">MacOSXOSAScript('default')</span></code></p></td>
<td><p>(3)</p></td>
</tr>
<tr class="row-odd"><td><p><code class="docutils literal notranslate"><span class="pre">'safari'</span></code></p></td>
<td><p><code class="xref py py-class docutils literal notranslate"><span class="pre">MacOSXOSAScript('safari')</span></code></p></td>
<td><p>(3)</p></td>
</tr>
<tr class="row-even"><td><p><code class="docutils literal notranslate"><span class="pre">'google-chrome'</span></code></p></td>
<td><p><code class="xref py py-class docutils literal notranslate"><span class="pre">Chrome('google-chrome')</span></code></p></td>
<td></td>
</tr>
<tr class="row-odd"><td><p><code class="docutils literal notranslate"><span class="pre">'chrome'</span></code></p></td>
<td><p><code class="xref py py-class docutils literal notranslate"><span class="pre">Chrome('chrome')</span></code></p></td>
<td></td>
</tr>
<tr class="row-even"><td><p><code class="docutils literal notranslate"><span class="pre">'chromium'</span></code></p></td>
<td><p><code class="xref py py-class docutils literal notranslate"><span class="pre">Chromium('chromium')</span></code></p></td>
<td></td>
</tr>
<tr class="row-odd"><td><p><code class="docutils literal notranslate"><span class="pre">'chromium-browser'</span></code></p></td>
<td><p><code class="xref py py-class docutils literal notranslate"><span class="pre">Chromium('chromium-browser')</span></code></p></td>
<td></td>
</tr>
</tbody>
</table>
<p>注释：</p>
<ol class="arabic simple">
<li><p>&quot;Konqueror&quot; is the file manager for the KDE desktop environment for Unix, and
only makes sense to use if KDE is running.  Some way of reliably detecting KDE
would be nice; the <span class="target" id="index-2"></span><code class="xref std std-envvar docutils literal notranslate"><span class="pre">KDEDIR</span></code> variable is not sufficient.  Note also that
the name &quot;kfm&quot; is used even when using the <strong class="program">konqueror</strong> command with KDE
2 --- the implementation selects the best strategy for running Konqueror.</p></li>
<li><p>仅限 Windows 平台。</p></li>
<li><p>Only on macOS platform.</p></li>
</ol>
<div class="versionadded">
<p><span class="versionmodified added">Added in version 3.3: </span>添加了对 Chrome/Chromium 的支持。</p>
</div>
<div class="versionchanged">
<p><span class="versionmodified changed">在 3.12 版本发生变更: </span>对某些过时浏览器的支持已被移除。 被移除的浏览器包括 Grail, Mosaic, Netscape, Galeon, Skipstone, Iceape 和 Firefox 35 及以下的版本。</p>
</div>
<div class="deprecated-removed">
<p><span class="versionmodified">从 3.11 版起不建议使用，将在 3.13 版中移除: </span><code class="xref py py-class docutils literal notranslate"><span class="pre">MacOSX</span></code> is deprecated, use <code class="xref py py-class docutils literal notranslate"><span class="pre">MacOSXOSAScript</span></code> instead.</p>
</div>
<p>以下是一些简单的例子:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="n">url</span> <span class="o">=</span> <span class="s1">&#39;https://docs.python.org/&#39;</span>

<span class="c1"># Open URL in a new tab, if a browser window is already open.</span>
<span class="n">webbrowser</span><span class="o">.</span><span class="n">open_new_tab</span><span class="p">(</span><span class="n">url</span><span class="p">)</span>

<span class="c1"># Open URL in new window, raising the window if possible.</span>
<span class="n">webbrowser</span><span class="o">.</span><span class="n">open_new</span><span class="p">(</span><span class="n">url</span><span class="p">)</span>
</pre></div>
</div>
<section id="browser-controller-objects">
<span id="browser-controllers"></span><h2>浏览器控制器对象</h2>
<p>浏览器控制器提供三个与模块级便捷函数相同的方法：</p>
<dl class="py attribute">
<dt class="sig sig-object py" id="webbrowser.name">
<span class="sig-prename descclassname"><span class="pre">webbrowser.</span></span><span class="sig-name descname"><span class="pre">name</span></span></dt>
<dd><p>浏览器依赖于系统的名称。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="webbrowser.controller.open">
<span class="sig-prename descclassname"><span class="pre">controller.</span></span><span class="sig-name descname"><span class="pre">open</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">url</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">new</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">0</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">autoraise</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">True</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>使用此控制器处理的浏览器显示 <em>url</em>。 如果 <em>new</em> 为 1，则尽可能打开新的浏览器窗口。 如果 <em>new</em> 为 2，则尽可能打开新的浏览器页面（“标签”）。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="webbrowser.controller.open_new">
<span class="sig-prename descclassname"><span class="pre">controller.</span></span><span class="sig-name descname"><span class="pre">open_new</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">url</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>如果可能，在此控制器处理的浏览器的新窗口中打开 <em>url</em> ，否则，在唯一的浏览器窗口中打开 <em>url</em> 。 别名 <a class="reference internal" href="#webbrowser.open_new" title="webbrowser.open_new"><code class="xref py py-func docutils literal notranslate"><span class="pre">open_new()</span></code></a>。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="webbrowser.controller.open_new_tab">
<span class="sig-prename descclassname"><span class="pre">controller.</span></span><span class="sig-name descname"><span class="pre">open_new_tab</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">url</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>如果可能，在此控制器处理的浏览器的新页面（“标签”）中打开 <em>url</em>，否则等效于 <a class="reference internal" href="#webbrowser.open_new" title="webbrowser.open_new"><code class="xref py py-func docutils literal notranslate"><span class="pre">open_new()</span></code></a>。</p>
</dd></dl>

<p class="rubric">备注</p>
<aside class="footnote-list brackets">
<aside class="footnote brackets" id="id2" role="doc-footnote">
<span class="label"><span class="fn-bracket">[</span><a role="doc-backlink" href="#id1">1</a><span class="fn-bracket">]</span></span>
<p>这里命名的不带完整路径的可执行文件将在 <span class="target" id="index-9"></span><code class="xref std std-envvar docutils literal notranslate"><span class="pre">PATH</span></code> 环境变量给出的目录中搜索。</p>
</aside>
</aside>
</section>
</section>


            <div class="clearer"></div>
          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>