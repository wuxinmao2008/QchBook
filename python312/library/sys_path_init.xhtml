<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta name="viewport" content="width=device-width, initial-scale=1" />
<meta property="og:title" content="sys.path 模块搜索路径的初始化" />
<meta property="og:type" content="website" />
<meta property="og:url" content="https://docs.python.org/3/library/sys_path_init.xhtml" />
<meta property="og:site_name" content="Python documentation" />
<meta property="og:description" content="模块搜索路径是在 Python 启动时被初始化的。 这个模块搜索路径可通过 sys.path 来访问。 模块搜索路径的第一个条目是包含输入脚本的目录，如果存在输入脚本的话。 否则，第一个条目将是当前目录，当执行交互式 shell,-c 命令, 或-m 模块时都属于这种情况。 PYTHONPATH 环境变量经常被用于将目录添加到搜索路径。 如果发现了该环境变量则其内容将被添加到模块搜索路径中。..." />
<meta property="og:image" content="https://docs.python.org/3/_static/og-image.png" />
<meta property="og:image:alt" content="Python documentation" />
<meta name="description" content="模块搜索路径是在 Python 启动时被初始化的。 这个模块搜索路径可通过 sys.path 来访问。 模块搜索路径的第一个条目是包含输入脚本的目录，如果存在输入脚本的话。 否则，第一个条目将是当前目录，当执行交互式 shell,-c 命令, 或-m 模块时都属于这种情况。 PYTHONPATH 环境变量经常被用于将目录添加到搜索路径。 如果发现了该环境变量则其内容将被添加到模块搜索路径中。..." />
<meta property="og:image:width" content="200" />
<meta property="og:image:height" content="200" />
<meta name="theme-color" content="#3776ab" />

    <title>sys.path 模块搜索路径的初始化</title>
    <link rel="stylesheet" type="text/css" href="../_static/pygments.css" />
    <link rel="stylesheet" type="text/css" href="../_static/epub.css" />
    <link rel="canonical" href="https://docs.python.org/3/library/sys_path_init.html" />
    
      
    

    
    <style>
      @media only screen {
        table.full-width-table {
            width: 100%;
        }
      }
    </style>
 

  </head><body>


    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <section id="the-initialization-of-the-sys-path-module-search-path">
<span id="sys-path-init"></span><h1><a class="reference internal" href="sys.xhtml#sys.path" title="sys.path"><code class="xref py py-data docutils literal notranslate"><span class="pre">sys.path</span></code></a> 模块搜索路径的初始化</h1>
<p>模块搜索路径是在 Python 启动时被初始化的。 这个模块搜索路径可通过 <a class="reference internal" href="sys.xhtml#sys.path" title="sys.path"><code class="xref py py-data docutils literal notranslate"><span class="pre">sys.path</span></code></a> 来访问。</p>
<p>模块搜索路径的第一个条目是包含输入脚本的目录，如果存在输入脚本的话。 否则，第一个条目将是当前目录，当执行交互式 shell, <a class="reference internal" href="../using/cmdline.xhtml#cmdoption-c"><code class="xref std std-option docutils literal notranslate"><span class="pre">-c</span></code></a> 命令, 或 <a class="reference internal" href="../using/cmdline.xhtml#cmdoption-m"><code class="xref std std-option docutils literal notranslate"><span class="pre">-m</span></code></a> 模块时都属于这种情况。</p>
<p><span class="target" id="index-10"></span><a class="reference internal" href="../using/cmdline.xhtml#envvar-PYTHONPATH"><code class="xref std std-envvar docutils literal notranslate"><span class="pre">PYTHONPATH</span></code></a> 环境变量经常被用于将目录添加到搜索路径。 如果发现了该环境变量则其内容将被添加到模块搜索路径中。</p>
<div class="admonition note">
<p class="admonition-title">备注</p>
<p><span class="target" id="index-11"></span><a class="reference internal" href="../using/cmdline.xhtml#envvar-PYTHONPATH"><code class="xref std std-envvar docutils literal notranslate"><span class="pre">PYTHONPATH</span></code></a> 将影响所有已安装的 Python 版本/环境。 在你的 shell 用户配置或全局环境变量中设置它时需要小心谨慎。 <a class="reference internal" href="site.xhtml#module-site" title="site: Module responsible for site-specific configuration."><code class="xref py py-mod docutils literal notranslate"><span class="pre">site</span></code></a> 模块提供了下文所述的更细微的技巧。</p>
</div>
<p>随后加入的条目是包含标准 Python 模块以及这些模块所依赖的任何 <a class="reference internal" href="../glossary.xhtml#term-extension-module"><span class="xref std std-term">extension module</span></a> 的目录。 扩展模块在 Windows 上为 <code class="docutils literal notranslate"><span class="pre">.pyd</span></code> 文件而在其他平台上则为 <code class="docutils literal notranslate"><span class="pre">.so</span></code> 文件。 独立于平台的 Python 模块的目录称为 <code class="docutils literal notranslate"><span class="pre">prefix</span></code>。 扩展模块的目录称为 <code class="docutils literal notranslate"><span class="pre">exec_prefix</span></code>。</p>
<p><span class="target" id="index-12"></span><a class="reference internal" href="../using/cmdline.xhtml#envvar-PYTHONHOME"><code class="xref std std-envvar docutils literal notranslate"><span class="pre">PYTHONHOME</span></code></a> 环境变量可以被用于设置 <code class="docutils literal notranslate"><span class="pre">prefix</span></code> 和 <code class="docutils literal notranslate"><span class="pre">exec_prefix</span></code> 的位置。 在其他情况下这些目录将使用 Python 可执行文件作为起始点来确定然后再查找几处 '地标' 文件和目录。 请注意任何符号链接也会被引入以便使用实际的 Python 可执行文件位置作为搜索起始点。 这个 Python 可执行文件位置被称为 <code class="docutils literal notranslate"><span class="pre">home</span></code>。</p>
<p>一旦确定了 <code class="docutils literal notranslate"><span class="pre">home</span></code>，则 <code class="docutils literal notranslate"><span class="pre">prefix</span></code> 目录将通过首先查找 <code class="file docutils literal notranslate"><span class="pre">python</span><em><span class="pre">majorversion</span></em><em><span class="pre">minorversion</span></em><span class="pre">.zip</span></code> (<code class="docutils literal notranslate"><span class="pre">python311.zip</span></code>) 来找到。 在 Windows 上将会到 <code class="docutils literal notranslate"><span class="pre">home</span></code> 中搜索 zip 归档而在 Unix 上则会到 <code class="file docutils literal notranslate"><span class="pre">lib</span></code> 中搜索它。 请注意预期的 zip 归档位置即使在此归档不存在时仍然会被添加到模块搜索路径。 如果未找到归档，在 Windows 上 Python 将继续通过查找 <code class="file docutils literal notranslate"><span class="pre">Lib\os.py</span></code> 来搜索 <code class="docutils literal notranslate"><span class="pre">prefix</span></code>。 在 Unix 上 Python 将查找 <code class="file docutils literal notranslate"><span class="pre">lib/python</span><em><span class="pre">majorversion</span></em><span class="pre">.</span><em><span class="pre">minorversion</span></em><span class="pre">/os.py</span></code> (<code class="docutils literal notranslate"><span class="pre">lib/python3.11/os.py</span></code>)。 在 Windows 上 <code class="docutils literal notranslate"><span class="pre">prefix</span></code> 和 <code class="docutils literal notranslate"><span class="pre">exec_prefix</span></code> 是相同的，但是在其他平台上则会搜索 <code class="file docutils literal notranslate"><span class="pre">lib/python</span><em><span class="pre">majorversion</span></em><span class="pre">.</span><em><span class="pre">minorversion</span></em><span class="pre">/lib-dynload</span></code> (<code class="docutils literal notranslate"><span class="pre">lib/python3.11/lib-dynload</span></code>) 并将其用作 <code class="docutils literal notranslate"><span class="pre">exec_prefix</span></code> 的锚点。 在某些平台上 <code class="file docutils literal notranslate"><span class="pre">lib</span></code> 可能为 <code class="file docutils literal notranslate"><span class="pre">lib64</span></code> 或其他值，请参阅 <a class="reference internal" href="sys.xhtml#sys.platlibdir" title="sys.platlibdir"><code class="xref py py-data docutils literal notranslate"><span class="pre">sys.platlibdir</span></code></a> 和 <span class="target" id="index-13"></span><a class="reference internal" href="../using/cmdline.xhtml#envvar-PYTHONPLATLIBDIR"><code class="xref std std-envvar docutils literal notranslate"><span class="pre">PYTHONPLATLIBDIR</span></code></a>。</p>
<p>一旦找到，<code class="docutils literal notranslate"><span class="pre">prefix</span></code> 和 <code class="docutils literal notranslate"><span class="pre">exec_prefix</span></code> 将分别在 <a class="reference internal" href="sys.xhtml#sys.prefix" title="sys.prefix"><code class="xref py py-data docutils literal notranslate"><span class="pre">sys.prefix</span></code></a> 和 <a class="reference internal" href="sys.xhtml#sys.exec_prefix" title="sys.exec_prefix"><code class="xref py py-data docutils literal notranslate"><span class="pre">sys.exec_prefix</span></code></a> 上可用。</p>
<p>最后，将会处理 <a class="reference internal" href="site.xhtml#module-site" title="site: Module responsible for site-specific configuration."><code class="xref py py-mod docutils literal notranslate"><span class="pre">site</span></code></a> 模块并将 <code class="file docutils literal notranslate"><span class="pre">site-packages</span></code> 目录添加到模块搜索路径。 自定义搜索路径的一个常用方式是创建 <a class="reference internal" href="site.xhtml#module-sitecustomize" title="sitecustomize"><code class="xref py py-mod docutils literal notranslate"><span class="pre">sitecustomize</span></code></a> 或 <a class="reference internal" href="site.xhtml#module-usercustomize" title="usercustomize"><code class="xref py py-mod docutils literal notranslate"><span class="pre">usercustomize</span></code></a> 模块，如 <a class="reference internal" href="site.xhtml#module-site" title="site: Module responsible for site-specific configuration."><code class="xref py py-mod docutils literal notranslate"><span class="pre">site</span></code></a> 模块文档所描述的那样。</p>
<div class="admonition note">
<p class="admonition-title">备注</p>
<p>特定的命令行选项可能对路径计算造成额外的影响。 请参阅 <a class="reference internal" href="../using/cmdline.xhtml#cmdoption-E"><code class="xref std std-option docutils literal notranslate"><span class="pre">-E</span></code></a>, <a class="reference internal" href="../using/cmdline.xhtml#cmdoption-I"><code class="xref std std-option docutils literal notranslate"><span class="pre">-I</span></code></a>, <a class="reference internal" href="../using/cmdline.xhtml#cmdoption-s"><code class="xref std std-option docutils literal notranslate"><span class="pre">-s</span></code></a> 和 <a class="reference internal" href="../using/cmdline.xhtml#cmdoption-S"><code class="xref std std-option docutils literal notranslate"><span class="pre">-S</span></code></a> 了解更多细节。</p>
</div>
<section id="virtual-environments">
<h2>从虚拟环境</h2>
<p>如果 Python 运行在虚拟环境中（如 <a class="reference internal" href="../tutorial/venv.xhtml#tut-venv"><span class="std std-ref">虚拟环境和包</span></a> 所描述）则 <code class="docutils literal notranslate"><span class="pre">prefix</span></code> 和 <code class="docutils literal notranslate"><span class="pre">exec_prefix</span></code> 都将是该虚拟环境专属的。</p>
<p>如果在主可执行文件的相同位置，或者在可执行文件的上一级目录中找到了 <code class="docutils literal notranslate"><span class="pre">pyvenv.cfg</span></code> 文件，则将应用以下变化形式:</p>
<ul class="simple">
<li><p>如果 <code class="docutils literal notranslate"><span class="pre">home</span></code> 是一个绝对路径并且未设置 <span class="target" id="index-14"></span><a class="reference internal" href="../using/cmdline.xhtml#envvar-PYTHONHOME"><code class="xref std std-envvar docutils literal notranslate"><span class="pre">PYTHONHOME</span></code></a>，则在推断 <code class="docutils literal notranslate"><span class="pre">prefix</span></code> 和 <code class="docutils literal notranslate"><span class="pre">exec_prefix</span></code> 时将使用此路径而不是主可执行文件的路径。</p></li>
</ul>
</section>
<section id="pth-files">
<h2>_pth 文件</h2>
<p>若要完全覆盖 <a class="reference internal" href="sys.xhtml#sys.path" title="sys.path"><code class="xref py py-data docutils literal notranslate"><span class="pre">sys.path</span></code></a> 则请创建一个与共享库或可执行文件 (<code class="docutils literal notranslate"><span class="pre">python._pth</span></code> 或 <code class="docutils literal notranslate"><span class="pre">python311._pth</span></code>) 同名的 <code class="docutils literal notranslate"><span class="pre">._pth</span></code> 文件。 共享库路径在 Windows 是始终是已知的，但这在其他平台上也许会不可用。 请在 <code class="docutils literal notranslate"><span class="pre">._pth</span></code> 文件中为添加到 <a class="reference internal" href="sys.xhtml#sys.path" title="sys.path"><code class="xref py py-data docutils literal notranslate"><span class="pre">sys.path</span></code></a> 的每个路径指定对应的一行。 基于共享库名称的文件会覆盖基于可执行文件的对应文件，这允许在必要时为任何加载运行时的程序限制路径。</p>
<p>当文件存在时，将忽略所有注册表和环境变量，启用隔离模式，并且：除非文件中的一行指定 <code class="docutils literal notranslate"><span class="pre">import</span> <span class="pre">site</span></code> ，否则不会导入 <a class="reference internal" href="site.xhtml#module-site" title="site: Module responsible for site-specific configuration."><code class="xref py py-mod docutils literal notranslate"><span class="pre">site</span></code></a> 。以 <code class="docutils literal notranslate"><span class="pre">＃</span></code> 开头的空白路径和行将被忽略。每个路径可以是绝对的或相对于文件的位置。不允许使用除 <code class="docutils literal notranslate"><span class="pre">site</span></code> 以外的导入语句，并且不能指定任意代码。</p>
<p>请注意，当指定 <code class="docutils literal notranslate"><span class="pre">import</span> <span class="pre">site</span></code> 时， <code class="docutils literal notranslate"><span class="pre">.pth</span></code> 文件（没有前导下划线）将由 <a class="reference internal" href="site.xhtml#module-site" title="site: Module responsible for site-specific configuration."><code class="xref py py-mod docutils literal notranslate"><span class="pre">site</span></code></a> 模块正常处理。</p>
</section>
<section id="embedded-python">
<h2>嵌入式 Python</h2>
<p>如果 Python 被嵌入到其他应用程序中则 <a class="reference internal" href="../c-api/init_config.xhtml#c.Py_InitializeFromConfig" title="Py_InitializeFromConfig"><code class="xref c c-func docutils literal notranslate"><span class="pre">Py_InitializeFromConfig()</span></code></a> 和 <a class="reference internal" href="../c-api/init_config.xhtml#c.PyConfig" title="PyConfig"><code class="xref c c-type docutils literal notranslate"><span class="pre">PyConfig</span></code></a> 结构体可被用来初始化 Python。 路径专属的细节描述见 <a class="reference internal" href="../c-api/init_config.xhtml#init-path-config"><span class="std std-ref">Python 路径配置</span></a>。 另外也可以使用较旧的 <a class="reference internal" href="../c-api/init.xhtml#c.Py_SetPath" title="Py_SetPath"><code class="xref c c-func docutils literal notranslate"><span class="pre">Py_SetPath()</span></code></a> 来绕过模块搜索路径的初始化。</p>
<div class="admonition seealso">
<p class="admonition-title">参见</p>
<ul class="simple">
<li><p><a class="reference internal" href="../using/windows.xhtml#windows-finding-modules"><span class="std std-ref">查找模块</span></a> 了解更多有关 Windows 的细节说明。</p></li>
<li><p><a class="reference internal" href="../using/unix.xhtml#using-on-unix"><span class="std std-ref">在类Unix环境下使用Python</span></a> 了解 Unix 的相关细节。</p></li>
</ul>
</div>
</section>
</section>


            <div class="clearer"></div>
          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>