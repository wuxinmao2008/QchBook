<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta name="viewport" content="width=device-width, initial-scale=1" />
<meta property="og:title" content="sunau --- 读写 Sun AU 文件" />
<meta property="og:type" content="website" />
<meta property="og:url" content="https://docs.python.org/3/library/sunau.xhtml" />
<meta property="og:site_name" content="Python documentation" />
<meta property="og:description" content="源代码: Lib/sunau.py[https://github.com/python/cpython/tree/3.12/Lib/sunau.py] sunau 模拟提供了一个处理 Sun AU 声音格式的便利接口。请注意此模块与 aifc 和 wave 是兼容接口的。 音频文件由标头和数据组成。标头的字段为：,, 域, 目录,,, magic word, 四个字节.snd,, heade..." />
<meta property="og:image" content="https://docs.python.org/3/_static/og-image.png" />
<meta property="og:image:alt" content="Python documentation" />
<meta name="description" content="源代码: Lib/sunau.py[https://github.com/python/cpython/tree/3.12/Lib/sunau.py] sunau 模拟提供了一个处理 Sun AU 声音格式的便利接口。请注意此模块与 aifc 和 wave 是兼容接口的。 音频文件由标头和数据组成。标头的字段为：,, 域, 目录,,, magic word, 四个字节.snd,, heade..." />
<meta property="og:image:width" content="200" />
<meta property="og:image:height" content="200" />
<meta name="theme-color" content="#3776ab" />

    <title>sunau --- 读写 Sun AU 文件</title>
    <link rel="stylesheet" type="text/css" href="../_static/pygments.css" />
    <link rel="stylesheet" type="text/css" href="../_static/epub.css" />
    <link rel="canonical" href="https://docs.python.org/3/library/sunau.html" />
    
      
    

    
    <style>
      @media only screen {
        table.full-width-table {
            width: 100%;
        }
      }
    </style>
 

  </head><body>


    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <section id="module-sunau">
<span id="sunau-read-and-write-sun-au-files"></span><h1><a class="reference internal" href="#module-sunau" title="sunau: Provide an interface to the Sun AU sound format.（已弃用）"><code class="xref py py-mod docutils literal notranslate"><span class="pre">sunau</span></code></a> --- 读写 Sun AU 文件</h1>
<p><strong>源代码:</strong> <a class="reference external" href="https://github.com/python/cpython/tree/3.12/Lib/sunau.py">Lib/sunau.py</a><span class="link-target"> [https://github.com/python/cpython/tree/3.12/Lib/sunau.py]</span></p>
<div class="deprecated-removed">
<p><span class="versionmodified">从 3.11 版起不建议使用，将在 3.13 版中移除: </span><a class="reference internal" href="#module-sunau" title="sunau: Provide an interface to the Sun AU sound format.（已弃用）"><code class="xref py py-mod docutils literal notranslate"><span class="pre">sunau</span></code></a> 模块已被弃用（请参阅 <span class="target" id="index-2"></span><a class="pep reference external" href="https://peps.python.org/pep-0594/#sunau"><strong>PEP 594</strong></a><span class="link-target"> [https://peps.python.org/pep-0594/#sunau]</span> 了解详情）。</p>
</div>
<hr class="docutils" />
<p><a class="reference internal" href="#module-sunau" title="sunau: Provide an interface to the Sun AU sound format.（已弃用）"><code class="xref py py-mod docutils literal notranslate"><span class="pre">sunau</span></code></a> 模拟提供了一个处理 Sun AU 声音格式的便利接口。请注意此模块与 <a class="reference internal" href="aifc.xhtml#module-aifc" title="aifc: Read and write audio files in AIFF or AIFC format.（已弃用）"><code class="xref py py-mod docutils literal notranslate"><span class="pre">aifc</span></code></a> 和 <a class="reference internal" href="wave.xhtml#module-wave" title="wave: Provide an interface to the WAV sound format."><code class="xref py py-mod docutils literal notranslate"><span class="pre">wave</span></code></a> 是兼容接口的。</p>
<p>音频文件由标头和数据组成。标头的字段为：</p>
<table class="docutils align-default">
<thead>
<tr class="row-odd"><th class="head"><p>域</p></th>
<th class="head"><p>目录</p></th>
</tr>
</thead>
<tbody>
<tr class="row-even"><td><p>magic word</p></td>
<td><p>四个字节 <code class="docutils literal notranslate"><span class="pre">.snd</span></code></p></td>
</tr>
<tr class="row-odd"><td><p>header size</p></td>
<td><p>标头的大小，包括信息，以字节为单位。</p></td>
</tr>
<tr class="row-even"><td><p>data size</p></td>
<td><p>数据的物理大小，以字节为单位。</p></td>
</tr>
<tr class="row-odd"><td><p>encoding</p></td>
<td><p>指示音频样本的编码方式。</p></td>
</tr>
<tr class="row-even"><td><p>sample rate</p></td>
<td><p>采样率</p></td>
</tr>
<tr class="row-odd"><td><p># of channels</p></td>
<td><p>采样中的通道数。</p></td>
</tr>
<tr class="row-even"><td><p>info</p></td>
<td><p>提供音频文件描述的ASCII字符串（用空字节填充）。</p></td>
</tr>
</tbody>
</table>
<p>除了 info 字段，所有标头字段的大小都是 4 字节。 它们都是采用大端字节序编码的 32 位无符号整数。</p>
<p><a class="reference internal" href="#module-sunau" title="sunau: Provide an interface to the Sun AU sound format.（已弃用）"><code class="xref py py-mod docutils literal notranslate"><span class="pre">sunau</span></code></a> 模块定义了以下函数:</p>
<dl class="py function">
<dt class="sig sig-object py" id="sunau.open">
<span class="sig-prename descclassname"><span class="pre">sunau.</span></span><span class="sig-name descname"><span class="pre">open</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">file</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">mode</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>如果 <em>file</em> 是一个字符串，打开相应名称的文件，否则就把它作为可定位的文件型对象来处理。 <em>mode</em> 可以是</p>
<dl class="simple">
<dt><code class="docutils literal notranslate"><span class="pre">'r'</span></code></dt><dd><p>只读模式。</p>
</dd>
<dt><code class="docutils literal notranslate"><span class="pre">'w'</span></code></dt><dd><p>只写模式。</p>
</dd>
</dl>
<p>注意它不支持同时读/写文件。</p>
<p><em>mode</em> 为 <code class="docutils literal notranslate"><span class="pre">'r'</span></code> 时返回一个 <code class="xref py py-class docutils literal notranslate"><span class="pre">AU_read</span></code> 对象，而 <em>mode</em> 为 <code class="docutils literal notranslate"><span class="pre">'w'</span></code> 或 <code class="docutils literal notranslate"><span class="pre">'wb'</span></code> 时返回一个 <code class="xref py py-class docutils literal notranslate"><span class="pre">AU_write</span></code> 对象。</p>
</dd></dl>

<p><a class="reference internal" href="#module-sunau" title="sunau: Provide an interface to the Sun AU sound format.（已弃用）"><code class="xref py py-mod docutils literal notranslate"><span class="pre">sunau</span></code></a> 模块定义了以下异常:</p>
<dl class="py exception">
<dt class="sig sig-object py" id="sunau.Error">
<em class="property"><span class="pre">exception</span><span class="w"> </span></em><span class="sig-prename descclassname"><span class="pre">sunau.</span></span><span class="sig-name descname"><span class="pre">Error</span></span></dt>
<dd><p>当 Sun AU 规范或实现的低效导致无法操作时引发的错误。</p>
</dd></dl>

<p><a class="reference internal" href="#module-sunau" title="sunau: Provide an interface to the Sun AU sound format.（已弃用）"><code class="xref py py-mod docutils literal notranslate"><span class="pre">sunau</span></code></a> 模块定义了以下数据条目:</p>
<dl class="py data">
<dt class="sig sig-object py" id="sunau.AUDIO_FILE_MAGIC">
<span class="sig-prename descclassname"><span class="pre">sunau.</span></span><span class="sig-name descname"><span class="pre">AUDIO_FILE_MAGIC</span></span></dt>
<dd><p>位于每个有效的 Sun AU 文件开头的整数，以大端序形式存储。 这是一个被当作整数来解读的字符串 <code class="docutils literal notranslate"><span class="pre">.snd</span></code>。</p>
</dd></dl>

<dl class="py data">
<dt class="sig sig-object py" id="sunau.AUDIO_FILE_ENCODING_MULAW_8">
<span class="sig-prename descclassname"><span class="pre">sunau.</span></span><span class="sig-name descname"><span class="pre">AUDIO_FILE_ENCODING_MULAW_8</span></span></dt>
<dt class="sig sig-object py" id="sunau.AUDIO_FILE_ENCODING_LINEAR_8">
<span class="sig-prename descclassname"><span class="pre">sunau.</span></span><span class="sig-name descname"><span class="pre">AUDIO_FILE_ENCODING_LINEAR_8</span></span></dt>
<dt class="sig sig-object py" id="sunau.AUDIO_FILE_ENCODING_LINEAR_16">
<span class="sig-prename descclassname"><span class="pre">sunau.</span></span><span class="sig-name descname"><span class="pre">AUDIO_FILE_ENCODING_LINEAR_16</span></span></dt>
<dt class="sig sig-object py" id="sunau.AUDIO_FILE_ENCODING_LINEAR_24">
<span class="sig-prename descclassname"><span class="pre">sunau.</span></span><span class="sig-name descname"><span class="pre">AUDIO_FILE_ENCODING_LINEAR_24</span></span></dt>
<dt class="sig sig-object py" id="sunau.AUDIO_FILE_ENCODING_LINEAR_32">
<span class="sig-prename descclassname"><span class="pre">sunau.</span></span><span class="sig-name descname"><span class="pre">AUDIO_FILE_ENCODING_LINEAR_32</span></span></dt>
<dt class="sig sig-object py" id="sunau.AUDIO_FILE_ENCODING_ALAW_8">
<span class="sig-prename descclassname"><span class="pre">sunau.</span></span><span class="sig-name descname"><span class="pre">AUDIO_FILE_ENCODING_ALAW_8</span></span></dt>
<dd><p>AU 标头中被此模块所支持的 encoding 字段值。</p>
</dd></dl>

<dl class="py data">
<dt class="sig sig-object py" id="sunau.AUDIO_FILE_ENCODING_FLOAT">
<span class="sig-prename descclassname"><span class="pre">sunau.</span></span><span class="sig-name descname"><span class="pre">AUDIO_FILE_ENCODING_FLOAT</span></span></dt>
<dt class="sig sig-object py" id="sunau.AUDIO_FILE_ENCODING_DOUBLE">
<span class="sig-prename descclassname"><span class="pre">sunau.</span></span><span class="sig-name descname"><span class="pre">AUDIO_FILE_ENCODING_DOUBLE</span></span></dt>
<dt class="sig sig-object py" id="sunau.AUDIO_FILE_ENCODING_ADPCM_G721">
<span class="sig-prename descclassname"><span class="pre">sunau.</span></span><span class="sig-name descname"><span class="pre">AUDIO_FILE_ENCODING_ADPCM_G721</span></span></dt>
<dt class="sig sig-object py" id="sunau.AUDIO_FILE_ENCODING_ADPCM_G722">
<span class="sig-prename descclassname"><span class="pre">sunau.</span></span><span class="sig-name descname"><span class="pre">AUDIO_FILE_ENCODING_ADPCM_G722</span></span></dt>
<dt class="sig sig-object py" id="sunau.AUDIO_FILE_ENCODING_ADPCM_G723_3">
<span class="sig-prename descclassname"><span class="pre">sunau.</span></span><span class="sig-name descname"><span class="pre">AUDIO_FILE_ENCODING_ADPCM_G723_3</span></span></dt>
<dt class="sig sig-object py" id="sunau.AUDIO_FILE_ENCODING_ADPCM_G723_5">
<span class="sig-prename descclassname"><span class="pre">sunau.</span></span><span class="sig-name descname"><span class="pre">AUDIO_FILE_ENCODING_ADPCM_G723_5</span></span></dt>
<dd><p>AU 标头中附加的已知但不被此模块所支持的 encoding 字段值。</p>
</dd></dl>

<section id="au-read-objects">
<span id="id1"></span><h2>AU_read 对象</h2>
<p>由上面的 <a class="reference internal" href="#sunau.open" title="sunau.open"><code class="xref py py-func docutils literal notranslate"><span class="pre">open()</span></code></a> 所返回的 AU_read 对象具有以下几种方法:</p>
<dl class="py method">
<dt class="sig sig-object py" id="sunau.AU_read.close">
<span class="sig-prename descclassname"><span class="pre">AU_read.</span></span><span class="sig-name descname"><span class="pre">close</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>关闭流，并使实例不可用。 （此方法会在删除对象时自动调用。）</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="sunau.AU_read.getnchannels">
<span class="sig-prename descclassname"><span class="pre">AU_read.</span></span><span class="sig-name descname"><span class="pre">getnchannels</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>返回音频的通道数（单声道为 1，立体声为 2）。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="sunau.AU_read.getsampwidth">
<span class="sig-prename descclassname"><span class="pre">AU_read.</span></span><span class="sig-name descname"><span class="pre">getsampwidth</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>返回采样字节长度。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="sunau.AU_read.getframerate">
<span class="sig-prename descclassname"><span class="pre">AU_read.</span></span><span class="sig-name descname"><span class="pre">getframerate</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>返回采样频率。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="sunau.AU_read.getnframes">
<span class="sig-prename descclassname"><span class="pre">AU_read.</span></span><span class="sig-name descname"><span class="pre">getnframes</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>返回音频总帧数。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="sunau.AU_read.getcomptype">
<span class="sig-prename descclassname"><span class="pre">AU_read.</span></span><span class="sig-name descname"><span class="pre">getcomptype</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>返回压缩类型。 受支持的压缩类型有 <code class="docutils literal notranslate"><span class="pre">'ULAW'</span></code>, <code class="docutils literal notranslate"><span class="pre">'ALAW'</span></code> 和 <code class="docutils literal notranslate"><span class="pre">'NONE'</span></code>。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="sunau.AU_read.getcompname">
<span class="sig-prename descclassname"><span class="pre">AU_read.</span></span><span class="sig-name descname"><span class="pre">getcompname</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p><a class="reference internal" href="#sunau.AU_read.getcomptype" title="sunau.AU_read.getcomptype"><code class="xref py py-meth docutils literal notranslate"><span class="pre">getcomptype()</span></code></a> 的人类可读的版本。 受支持的类型将为相应的名称 <code class="docutils literal notranslate"><span class="pre">'CCITT</span> <span class="pre">G.711</span> <span class="pre">u-law'</span></code>, <code class="docutils literal notranslate"><span class="pre">'CCITT</span> <span class="pre">G.711</span> <span class="pre">A-law'</span></code> 和 <code class="docutils literal notranslate"><span class="pre">'not</span> <span class="pre">compressed'</span></code>。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="sunau.AU_read.getparams">
<span class="sig-prename descclassname"><span class="pre">AU_read.</span></span><span class="sig-name descname"><span class="pre">getparams</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>返回一个 <a class="reference internal" href="collections.xhtml#collections.namedtuple" title="collections.namedtuple"><code class="xref py py-func docutils literal notranslate"><span class="pre">namedtuple()</span></code></a> <code class="docutils literal notranslate"><span class="pre">(nchannels,</span> <span class="pre">sampwidth,</span> <span class="pre">framerate,</span> <span class="pre">nframes,</span> <span class="pre">comptype,</span> <span class="pre">compname)</span></code>，与 <code class="xref py py-meth docutils literal notranslate"><span class="pre">get*()</span></code> 方法的输出相同。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="sunau.AU_read.readframes">
<span class="sig-prename descclassname"><span class="pre">AU_read.</span></span><span class="sig-name descname"><span class="pre">readframes</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">n</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>读取至多 <em>n</em> 帧音频并作为 <a class="reference internal" href="stdtypes.xhtml#bytes" title="bytes"><code class="xref py py-class docutils literal notranslate"><span class="pre">bytes</span></code></a> 对象返回。 数据将以线性格式返回。 如果原始数据为 u-LAW 格式，则它将被转换。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="sunau.AU_read.rewind">
<span class="sig-prename descclassname"><span class="pre">AU_read.</span></span><span class="sig-name descname"><span class="pre">rewind</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>重置文件指针至音频开头.</p>
</dd></dl>

<p>以下两个方法都使用指针，具体实现由其底层决定。</p>
<dl class="py method">
<dt class="sig sig-object py" id="sunau.AU_read.setpos">
<span class="sig-prename descclassname"><span class="pre">AU_read.</span></span><span class="sig-name descname"><span class="pre">setpos</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">pos</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>设置文件指针到特定位置。 只有从 <a class="reference internal" href="#sunau.AU_read.tell" title="sunau.AU_read.tell"><code class="xref py py-meth docutils literal notranslate"><span class="pre">tell()</span></code></a> 返回的值才可被用作 <em>pos</em>。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="sunau.AU_read.tell">
<span class="sig-prename descclassname"><span class="pre">AU_read.</span></span><span class="sig-name descname"><span class="pre">tell</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>返回当前文件指针的位置。 请注意该返回值与文件中的实例位置无关。</p>
</dd></dl>

<p>以下两个函数是为了与 <a class="reference internal" href="aifc.xhtml#module-aifc" title="aifc: Read and write audio files in AIFF or AIFC format.（已弃用）"><code class="xref py py-mod docutils literal notranslate"><span class="pre">aifc</span></code></a> 保持兼容而定义的，实际不做任何事情。</p>
<dl class="py method">
<dt class="sig sig-object py" id="sunau.AU_read.getmarkers">
<span class="sig-prename descclassname"><span class="pre">AU_read.</span></span><span class="sig-name descname"><span class="pre">getmarkers</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>返回 <code class="docutils literal notranslate"><span class="pre">None</span></code>。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="sunau.AU_read.getmark">
<span class="sig-prename descclassname"><span class="pre">AU_read.</span></span><span class="sig-name descname"><span class="pre">getmark</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">id</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>引发错误异常。</p>
</dd></dl>

</section>
<section id="au-write-objects">
<span id="id2"></span><h2>AU_write 对象</h2>
<p>由上面的 <a class="reference internal" href="#sunau.open" title="sunau.open"><code class="xref py py-func docutils literal notranslate"><span class="pre">open()</span></code></a> 所返回的 AU_write 对象具有以下几种方法:</p>
<dl class="py method">
<dt class="sig sig-object py" id="sunau.AU_write.setnchannels">
<span class="sig-prename descclassname"><span class="pre">AU_write.</span></span><span class="sig-name descname"><span class="pre">setnchannels</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">n</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>设置声道数。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="sunau.AU_write.setsampwidth">
<span class="sig-prename descclassname"><span class="pre">AU_write.</span></span><span class="sig-name descname"><span class="pre">setsampwidth</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">n</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>设置采样宽度（字节长度。）</p>
<div class="versionchanged">
<p><span class="versionmodified changed">在 3.4 版本发生变更: </span>增加了对 24 位采样的支持。</p>
</div>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="sunau.AU_write.setframerate">
<span class="sig-prename descclassname"><span class="pre">AU_write.</span></span><span class="sig-name descname"><span class="pre">setframerate</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">n</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>设置帧速率。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="sunau.AU_write.setnframes">
<span class="sig-prename descclassname"><span class="pre">AU_write.</span></span><span class="sig-name descname"><span class="pre">setnframes</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">n</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>设置总帧数。 如果写入了更多的帧，此值将会被更改。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="sunau.AU_write.setcomptype">
<span class="sig-prename descclassname"><span class="pre">AU_write.</span></span><span class="sig-name descname"><span class="pre">setcomptype</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">type</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">name</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>设置压缩类型和描述。 对于输出只支持 <code class="docutils literal notranslate"><span class="pre">'NONE'</span></code> 和 <code class="docutils literal notranslate"><span class="pre">'ULAW'</span></code>。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="sunau.AU_write.setparams">
<span class="sig-prename descclassname"><span class="pre">AU_write.</span></span><span class="sig-name descname"><span class="pre">setparams</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">tuple</span></span></em><span class="sig-paren">)</span></dt>
<dd><p><em>tuple</em> 应该是 <code class="docutils literal notranslate"><span class="pre">(nchannels,</span> <span class="pre">sampwidth,</span> <span class="pre">framerate,</span> <span class="pre">nframes,</span> <span class="pre">comptype,</span> <span class="pre">compname)</span></code>，每项的值可用于 <code class="xref py py-meth docutils literal notranslate"><span class="pre">set*()</span></code> 方法。 设置所有形参。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="sunau.AU_write.tell">
<span class="sig-prename descclassname"><span class="pre">AU_write.</span></span><span class="sig-name descname"><span class="pre">tell</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>返回文件中的当前位置，其含义与 <a class="reference internal" href="#sunau.AU_read.tell" title="sunau.AU_read.tell"><code class="xref py py-meth docutils literal notranslate"><span class="pre">AU_read.tell()</span></code></a> 和 <a class="reference internal" href="#sunau.AU_read.setpos" title="sunau.AU_read.setpos"><code class="xref py py-meth docutils literal notranslate"><span class="pre">AU_read.setpos()</span></code></a> 方法的一致。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="sunau.AU_write.writeframesraw">
<span class="sig-prename descclassname"><span class="pre">AU_write.</span></span><span class="sig-name descname"><span class="pre">writeframesraw</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">data</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>写入音频数据但不更新 <em>nframes</em>。</p>
<div class="versionchanged">
<p><span class="versionmodified changed">在 3.4 版本发生变更: </span>现在可接受任意 <a class="reference internal" href="../glossary.xhtml#term-bytes-like-object"><span class="xref std std-term">bytes-like object</span></a>。</p>
</div>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="sunau.AU_write.writeframes">
<span class="sig-prename descclassname"><span class="pre">AU_write.</span></span><span class="sig-name descname"><span class="pre">writeframes</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">data</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>写入音频数据并更新 <em>nframes</em>。</p>
<div class="versionchanged">
<p><span class="versionmodified changed">在 3.4 版本发生变更: </span>现在可接受任意 <a class="reference internal" href="../glossary.xhtml#term-bytes-like-object"><span class="xref std std-term">bytes-like object</span></a>。</p>
</div>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="sunau.AU_write.close">
<span class="sig-prename descclassname"><span class="pre">AU_write.</span></span><span class="sig-name descname"><span class="pre">close</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>确保 <em>nframes</em> 正确，并关闭文件。</p>
<p>此方法会在删除时被调用。</p>
</dd></dl>

<p>请注意在调用 <code class="xref py py-meth docutils literal notranslate"><span class="pre">writeframes()</span></code> 和 <code class="xref py py-meth docutils literal notranslate"><span class="pre">writeframesraw()</span></code> 之后再设置任何形参都是无效的。</p>
</section>
</section>


            <div class="clearer"></div>
          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>