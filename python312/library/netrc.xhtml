<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta name="viewport" content="width=device-width, initial-scale=1" />
<meta property="og:title" content="netrc --- netrc 文件处理" />
<meta property="og:type" content="website" />
<meta property="og:url" content="https://docs.python.org/3/library/netrc.xhtml" />
<meta property="og:site_name" content="Python documentation" />
<meta property="og:description" content="源代码: Lib/netrc.py[https://github.com/python/cpython/tree/3.12/Lib/netrc.py] netrc 类解析并封装了 Unix 的 ftp 程序和其他 FTP 客户端所使用的 netrc 文件格式。 netrc 对象: netrc 实例具有下列方法: netrc 的实例具有一些公共实例变量:" />
<meta property="og:image" content="https://docs.python.org/3/_static/og-image.png" />
<meta property="og:image:alt" content="Python documentation" />
<meta name="description" content="源代码: Lib/netrc.py[https://github.com/python/cpython/tree/3.12/Lib/netrc.py] netrc 类解析并封装了 Unix 的 ftp 程序和其他 FTP 客户端所使用的 netrc 文件格式。 netrc 对象: netrc 实例具有下列方法: netrc 的实例具有一些公共实例变量:" />
<meta property="og:image:width" content="200" />
<meta property="og:image:height" content="200" />
<meta name="theme-color" content="#3776ab" />

    <title>netrc --- netrc 文件处理</title>
    <link rel="stylesheet" type="text/css" href="../_static/pygments.css" />
    <link rel="stylesheet" type="text/css" href="../_static/epub.css" />
    <link rel="canonical" href="https://docs.python.org/3/library/netrc.html" />
    
      
    

    
    <style>
      @media only screen {
        table.full-width-table {
            width: 100%;
        }
      }
    </style>
 

  </head><body>


    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <section id="module-netrc">
<span id="netrc-netrc-file-processing"></span><h1><code class="xref py py-mod docutils literal notranslate"><span class="pre">netrc</span></code> --- netrc 文件处理</h1>
<p><strong>源代码:</strong> <a class="reference external" href="https://github.com/python/cpython/tree/3.12/Lib/netrc.py">Lib/netrc.py</a><span class="link-target"> [https://github.com/python/cpython/tree/3.12/Lib/netrc.py]</span></p>
<hr class="docutils" />
<p><a class="reference internal" href="#netrc.netrc" title="netrc.netrc"><code class="xref py py-class docutils literal notranslate"><span class="pre">netrc</span></code></a> 类解析并封装了 Unix 的 <strong class="program">ftp</strong> 程序和其他 FTP 客户端所使用的 netrc 文件格式。</p>
<dl class="py class">
<dt class="sig sig-object py" id="netrc.netrc">
<em class="property"><span class="pre">class</span><span class="w"> </span></em><span class="sig-prename descclassname"><span class="pre">netrc.</span></span><span class="sig-name descname"><span class="pre">netrc</span></span><span class="sig-paren">(</span><span class="optional">[</span><em class="sig-param"><span class="n"><span class="pre">file</span></span></em><span class="optional">]</span><span class="sig-paren">)</span></dt>
<dd><p><a class="reference internal" href="#netrc.netrc" title="netrc.netrc"><code class="xref py py-class docutils literal notranslate"><span class="pre">netrc</span></code></a> 的实例或其子类的实例会被用来封装来自 netrc 文件的数据。 如果有初始化参数，它将指明要解析的文件。 如果未给出参数，则位于用户家目录的 <code class="file docutils literal notranslate"><span class="pre">.netrc</span></code> 文件 -- 即 <a class="reference internal" href="os.path.xhtml#os.path.expanduser" title="os.path.expanduser"><code class="xref py py-func docutils literal notranslate"><span class="pre">os.path.expanduser()</span></code></a> 所确定的文件 -- 将会被读取。 在其他情况下，则将引发 <a class="reference internal" href="exceptions.xhtml#FileNotFoundError" title="FileNotFoundError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">FileNotFoundError</span></code></a> 异常。 解析错误将引发 <a class="reference internal" href="#netrc.NetrcParseError" title="netrc.NetrcParseError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">NetrcParseError</span></code></a> 并附带诊断信息，包括文件名、行号以及终止令牌。 如果在 POSIX 系统上未指明参数，则当 <code class="file docutils literal notranslate"><span class="pre">.netrc</span></code> 文件中有密码时，如果文件归属或权限不安全（归属的用户不是运行进程的用户，或者可供任何其他用户读取或写入）将引发 <a class="reference internal" href="#netrc.NetrcParseError" title="netrc.NetrcParseError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">NetrcParseError</span></code></a>。 这实现了与 ftp 和其他使用 <code class="file docutils literal notranslate"><span class="pre">.netrc</span></code> 的程序同等的安全行为。</p>
<div class="versionchanged">
<p><span class="versionmodified changed">在 3.4 版本发生变更: </span>添加了 POSIX 权限检查。</p>
</div>
<div class="versionchanged">
<p><span class="versionmodified changed">在 3.7 版本发生变更: </span>当未将 <em>file</em> 作为参数传入时会使用 <a class="reference internal" href="os.path.xhtml#os.path.expanduser" title="os.path.expanduser"><code class="xref py py-func docutils literal notranslate"><span class="pre">os.path.expanduser()</span></code></a> 来查找 <code class="file docutils literal notranslate"><span class="pre">.netrc</span></code> 文件的位置。</p>
</div>
<div class="versionchanged">
<p><span class="versionmodified changed">在 3.10 版本发生变更: </span><a class="reference internal" href="#module-netrc" title="netrc: Loading of .netrc files."><code class="xref py py-class docutils literal notranslate"><span class="pre">netrc</span></code></a> 会在使用语言区域专属的编码格式之前先尝试 UTF-8 编码格式。 netrc 文件中的条目不再需要包括所有凭据。 缺失的凭据值默认将为空字符串。 所有的凭据及其值现在可以包含任意字符，如空格和非 ASCII 字符。 如果登录名为 anonymous，它将不会触发安全检查。</p>
</div>
</dd></dl>

<dl class="py exception">
<dt class="sig sig-object py" id="netrc.NetrcParseError">
<em class="property"><span class="pre">exception</span><span class="w"> </span></em><span class="sig-prename descclassname"><span class="pre">netrc.</span></span><span class="sig-name descname"><span class="pre">NetrcParseError</span></span></dt>
<dd><p>当源代码文本中出现语法错误时由 <a class="reference internal" href="#netrc.netrc" title="netrc.netrc"><code class="xref py py-class docutils literal notranslate"><span class="pre">netrc</span></code></a> 类所引发的异常。 该异常的实例提供了三个有用的属性:</p>
<dl class="py attribute">
<dt class="sig sig-object py" id="netrc.NetrcParseError.msg">
<span class="sig-name descname"><span class="pre">msg</span></span></dt>
<dd><p>错误的解释性文本。</p>
</dd></dl>

<dl class="py attribute">
<dt class="sig sig-object py" id="netrc.NetrcParseError.filename">
<span class="sig-name descname"><span class="pre">filename</span></span></dt>
<dd><p>源代码文件名。</p>
</dd></dl>

<dl class="py attribute">
<dt class="sig sig-object py" id="netrc.NetrcParseError.lineno">
<span class="sig-name descname"><span class="pre">lineno</span></span></dt>
<dd><p>发现错误所在的行号。</p>
</dd></dl>

</dd></dl>

<section id="netrc-objects">
<span id="id1"></span><h2>netrc 对象</h2>
<p><a class="reference internal" href="#netrc.netrc" title="netrc.netrc"><code class="xref py py-class docutils literal notranslate"><span class="pre">netrc</span></code></a> 实例具有下列方法:</p>
<dl class="py method">
<dt class="sig sig-object py" id="netrc.netrc.authenticators">
<span class="sig-prename descclassname"><span class="pre">netrc.</span></span><span class="sig-name descname"><span class="pre">authenticators</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">host</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>针对 <em>host</em> 的身份验证者返回一个 3 元组 <code class="docutils literal notranslate"><span class="pre">(login,</span> <span class="pre">account,</span> <span class="pre">password)</span></code>。 如果 netrc 文件不包含针对给定主机的条目，则返回关联到 'default' 条目的元组。 如果匹配的主机或默认条目均不可用，则返回 <code class="docutils literal notranslate"><span class="pre">None</span></code>。</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="netrc.netrc.__repr__">
<span class="sig-prename descclassname"><span class="pre">netrc.</span></span><span class="sig-name descname"><span class="pre">__repr__</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>将类数据以 netrc 文件的格式转储为一个字符串。 （这会丢弃注释并可能重排条目顺序。）</p>
</dd></dl>

<p><a class="reference internal" href="#netrc.netrc" title="netrc.netrc"><code class="xref py py-class docutils literal notranslate"><span class="pre">netrc</span></code></a> 的实例具有一些公共实例变量:</p>
<dl class="py attribute">
<dt class="sig sig-object py" id="netrc.netrc.hosts">
<span class="sig-prename descclassname"><span class="pre">netrc.</span></span><span class="sig-name descname"><span class="pre">hosts</span></span></dt>
<dd><p>将主机名映射到 <code class="docutils literal notranslate"><span class="pre">(login,</span> <span class="pre">account,</span> <span class="pre">password)</span></code> 元组的字典。 如果存在 'default' 条目，则会表示为使用该名称的伪主机。</p>
</dd></dl>

<dl class="py attribute">
<dt class="sig sig-object py" id="netrc.netrc.macros">
<span class="sig-prename descclassname"><span class="pre">netrc.</span></span><span class="sig-name descname"><span class="pre">macros</span></span></dt>
<dd><p>将宏名称映射到字符串列表的字典。</p>
</dd></dl>

</section>
</section>


            <div class="clearer"></div>
          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>