<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta name="viewport" content="width=device-width, initial-scale=1" />
<meta property="og:title" content="site --- Site-specific configuration hook" />
<meta property="og:type" content="website" />
<meta property="og:url" content="https://docs.python.org/3/library/site.xhtml" />
<meta property="og:site_name" content="Python documentation" />
<meta property="og:description" content="源代码: Lib/site.py[https://github.com/python/cpython/tree/3.12/Lib/site.py] 这个模块将在初始化时被自动导入。 此自动导入可以通过使用解释器的-S 选项来屏蔽。 导入此模块将会附加站点专属的路径到模块搜索路径并添加一些内置对象，除非使用了-S 。 在这种情况下，模块可以被安全地导入而不会自动修改模块搜索路径或添加内置对象。..." />
<meta property="og:image" content="https://docs.python.org/3/_static/og-image.png" />
<meta property="og:image:alt" content="Python documentation" />
<meta name="description" content="源代码: Lib/site.py[https://github.com/python/cpython/tree/3.12/Lib/site.py] 这个模块将在初始化时被自动导入。 此自动导入可以通过使用解释器的-S 选项来屏蔽。 导入此模块将会附加站点专属的路径到模块搜索路径并添加一些内置对象，除非使用了-S 。 在这种情况下，模块可以被安全地导入而不会自动修改模块搜索路径或添加内置对象。..." />
<meta property="og:image:width" content="200" />
<meta property="og:image:height" content="200" />
<meta name="theme-color" content="#3776ab" />

    <title>site --- Site-specific configuration hook</title>
    <link rel="stylesheet" type="text/css" href="../_static/pygments.css" />
    <link rel="stylesheet" type="text/css" href="../_static/epub.css" />
    <link rel="canonical" href="https://docs.python.org/3/library/site.html" />
    
      
    

    
    <style>
      @media only screen {
        table.full-width-table {
            width: 100%;
        }
      }
    </style>
 

  </head><body>


    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <section id="module-site">
<span id="site-site-specific-configuration-hook"></span><h1><code class="xref py py-mod docutils literal notranslate"><span class="pre">site</span></code> --- Site-specific configuration hook</h1>
<p><strong>源代码:</strong> <a class="reference external" href="https://github.com/python/cpython/tree/3.12/Lib/site.py">Lib/site.py</a><span class="link-target"> [https://github.com/python/cpython/tree/3.12/Lib/site.py]</span></p>
<hr class="docutils" />
<p><strong>这个模块将在初始化时被自动导入。</strong> 此自动导入可以通过使用解释器的 <a class="reference internal" href="../using/cmdline.xhtml#cmdoption-S"><code class="xref std std-option docutils literal notranslate"><span class="pre">-S</span></code></a> 选项来屏蔽。</p>
<p id="index-0">导入此模块将会附加站点专属的路径到模块搜索路径并添加一些内置对象，除非使用了 <a class="reference internal" href="../using/cmdline.xhtml#cmdoption-S"><code class="xref std std-option docutils literal notranslate"><span class="pre">-S</span></code></a>。 在这种情况下，模块可以被安全地导入而不会自动修改模块搜索路径或添加内置对象。 要明确地触发通常站点专属的添加，请调用 <a class="reference internal" href="#site.main" title="site.main"><code class="xref py py-func docutils literal notranslate"><span class="pre">main()</span></code></a> 函数。</p>
<div class="versionchanged">
<p><span class="versionmodified changed">在 3.3 版本发生变更: </span>在之前即便使用了 <a class="reference internal" href="../using/cmdline.xhtml#cmdoption-S"><code class="xref std std-option docutils literal notranslate"><span class="pre">-S</span></code></a>，导入此模块仍然会触发路径操纵。</p>
</div>
<p id="index-1">它会从头部和尾部构建至多四个目录作为起点。 对于头部，它会使用 <code class="docutils literal notranslate"><span class="pre">sys.prefix</span></code> 和 <code class="docutils literal notranslate"><span class="pre">sys.exec_prefix</span></code>；空的头部会被跳过。 对于尾部，它会使用空字符串然后是 <code class="file docutils literal notranslate"><span class="pre">lib/site-packages</span></code> (在 Windows 上) 或 <code class="file docutils literal notranslate"><span class="pre">lib/python</span><em><span class="pre">X.Y</span></em><span class="pre">/site-packages</span></code> (在 Unix 和 macOS 上)。 对于每个不同的头-尾组合，它会查看其是否指向现有的目录，如果是的话，则将其添加到 <code class="docutils literal notranslate"><span class="pre">sys.path</span></code> 并且检查新添加目录中的配置文件。</p>
<div class="versionchanged">
<p><span class="versionmodified changed">在 3.5 版本发生变更: </span>对 &quot;site-python&quot; 目录的支持已被移除。</p>
</div>
<p>如果名为 &quot;pyvenv.cfg&quot; 的文件存在于 sys.executable 之上的一个目录中，则 sys.prefix 和 sys.exec_prefix 将被设置为该目录，并且还会检查 site-packages （ sys.base_prefix 和 sys.base_exec_prefix 始终是 Python 安装的 &quot;真实&quot; 前缀）。 如果 &quot;pyvenv.cfg&quot; （引导程序配置文件）包含设置为非 &quot;true&quot;（不区分大小写）的 &quot;include-system-site-packages&quot; 键，则不会在系统级前缀中搜索 site-packages；反之则会。</p>
<p id="index-2">一个路径配置文件是具有 <code class="file docutils literal notranslate"><em><span class="pre">name</span></em><span class="pre">.pth</span></code> 命名格式的文件，并且存在上面提到的四个目录之一中；它的内容是要添加到 <code class="docutils literal notranslate"><span class="pre">sys.path</span></code> 中的额外项目（每行一个）。不存在的项目不会添加到 <code class="docutils literal notranslate"><span class="pre">sys.path</span></code>，并且不会检查项目指向的是目录还是文件。项目不会被添加到 <code class="docutils literal notranslate"><span class="pre">sys.path</span></code> 超过一次。空行和由 <code class="docutils literal notranslate"><span class="pre">#</span></code> 起始的行会被跳过。以 <code class="docutils literal notranslate"><span class="pre">import</span></code> 开始的行（跟着空格或 TAB）会被执行。</p>
<div class="admonition note">
<p class="admonition-title">备注</p>
<p>每次启动 Python，在 <code class="file docutils literal notranslate"><span class="pre">.pth</span></code> 文件中的可执行行都将会被运行，而不管特定的模块实际上是否需要被使用。 因此，其影响应降至最低。可执行行的主要预期目的是使相关模块可导入（加载第三方导入钩子，调整 <span class="target" id="index-16"></span><code class="xref std std-envvar docutils literal notranslate"><span class="pre">PATH</span></code> 等）。如果它发生了，任何其他的初始化都应当在模块实际导入之前完成。将代码块限制为一行是一种有意采取的措施，不鼓励在此处放置更复杂的内容。</p>
</div>
<p id="index-4">例如，假设 <code class="docutils literal notranslate"><span class="pre">sys.prefix</span></code> 和 <code class="docutils literal notranslate"><span class="pre">sys.exec_prefix</span></code> 已经被设置为 <code class="file docutils literal notranslate"><span class="pre">/usr/local</span></code>。 Python X.Y 的库之后被安装为 <code class="file docutils literal notranslate"><span class="pre">/usr/local/lib/python</span><em><span class="pre">X.Y</span></em></code>。假设有一个拥有三个孙目录 <code class="file docutils literal notranslate"><span class="pre">foo</span></code>, <code class="file docutils literal notranslate"><span class="pre">bar</span></code> 和 <code class="file docutils literal notranslate"><span class="pre">spam</span></code> 的子目录 <code class="file docutils literal notranslate"><span class="pre">/usr/local/lib/python</span><em><span class="pre">X.Y</span></em><span class="pre">/site-packages</span></code>，并且有两个路径配置文件 <code class="file docutils literal notranslate"><span class="pre">foo.pth</span></code> 和 <code class="file docutils literal notranslate"><span class="pre">bar.pth</span></code>。假定 <code class="file docutils literal notranslate"><span class="pre">foo.pth</span></code> 内容如下:</p>
<div class="highlight-none notranslate"><div class="highlight"><pre><span></span># foo package configuration

foo
bar
bletch
</pre></div>
</div>
<p>并且 <code class="file docutils literal notranslate"><span class="pre">bar.pth</span></code> 包含:</p>
<div class="highlight-none notranslate"><div class="highlight"><pre><span></span># bar package configuration

bar
</pre></div>
</div>
<p>则下面特定版目录将以如下顺序被添加到 <code class="docutils literal notranslate"><span class="pre">sys.path</span></code>。</p>
<div class="highlight-none notranslate"><div class="highlight"><pre><span></span>/usr/local/lib/pythonX.Y/site-packages/bar
/usr/local/lib/pythonX.Y/site-packages/foo
</pre></div>
</div>
<p>请注意 <code class="file docutils literal notranslate"><span class="pre">bletch</span></code> 已被省略因为它并不存在；<code class="file docutils literal notranslate"><span class="pre">bar</span></code> 目前在 <code class="file docutils literal notranslate"><span class="pre">foo</span></code> 目录之前因为 <code class="file docutils literal notranslate"><span class="pre">bar.pth</span></code> 按字母顺序排在 <code class="file docutils literal notranslate"><span class="pre">foo.pth</span></code> 之前；而 <code class="file docutils literal notranslate"><span class="pre">spam</span></code> 已被省略因为它在两个路径配置文件中都未被提及。</p>
<section id="module-sitecustomize">
<span id="sitecustomize"></span><h2><a class="reference internal" href="#module-sitecustomize" title="sitecustomize"><code class="xref py py-mod docutils literal notranslate"><span class="pre">sitecustomize</span></code></a></h2>
<p>在这些路径操作之后，会尝试导入 一个名为 <a class="reference internal" href="#module-sitecustomize" title="sitecustomize"><code class="xref py py-mod docutils literal notranslate"><span class="pre">sitecustomize</span></code></a> 的模块，它可以执行任意站点专属的定制。 它通常是由系统管理员在 site-packages 目录下创建的。 如果此导入失败并引发 <a class="reference internal" href="exceptions.xhtml#ImportError" title="ImportError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">ImportError</span></code></a> 或其子类的异常，并且异常的 <a class="reference internal" href="exceptions.xhtml#ImportError.name" title="ImportError.name"><code class="xref py py-attr docutils literal notranslate"><span class="pre">name</span></code></a> 属性等于 <code class="docutils literal notranslate"><span class="pre">'sitecustomize'</span></code>，则它会被静默地忽略。 如果 Python 是在没有可用输出流的情况下启动的，例如在 Windows 上使用 <code class="file docutils literal notranslate"><span class="pre">pythonw.exe</span></code> (它被默认被用于 IDLE)，则来自 <a class="reference internal" href="#module-sitecustomize" title="sitecustomize"><code class="xref py py-mod docutils literal notranslate"><span class="pre">sitecustomize</span></code></a> 的输出尝试会被忽略。 任何其他异常都会导致静默且可能令人困惑的进程失败。</p>
</section>
<section id="module-usercustomize">
<span id="usercustomize"></span><h2><a class="reference internal" href="#module-usercustomize" title="usercustomize"><code class="xref py py-mod docutils literal notranslate"><span class="pre">usercustomize</span></code></a></h2>
<p>在此之后，会尝试导入一个名为 <a class="reference internal" href="#module-usercustomize" title="usercustomize"><code class="xref py py-mod docutils literal notranslate"><span class="pre">usercustomize</span></code></a> 的模块，如果 <a class="reference internal" href="#site.ENABLE_USER_SITE" title="site.ENABLE_USER_SITE"><code class="xref py py-data docutils literal notranslate"><span class="pre">ENABLE_USER_SITE</span></code></a> 为真值，则它可以执行任意的用户专属定制。 这个文件应在用户的 site-packages 目录中创建（见下文），除非被 <a class="reference internal" href="../using/cmdline.xhtml#cmdoption-s"><code class="xref std std-option docutils literal notranslate"><span class="pre">-s</span></code></a> 所禁用，在其他情况下该目录都是 <code class="docutils literal notranslate"><span class="pre">sys.path</span></code> 的组成部分。 如果此导入失败并引发 <a class="reference internal" href="exceptions.xhtml#ImportError" title="ImportError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">ImportError</span></code></a> 或其子类异常，并且异常的 <a class="reference internal" href="exceptions.xhtml#ImportError.name" title="ImportError.name"><code class="xref py py-attr docutils literal notranslate"><span class="pre">name</span></code></a> 属性等于 <code class="docutils literal notranslate"><span class="pre">'usercustomize'</span></code>，它会被静默地忽略。</p>
<p>请注意对于某些非 Unix 系统来说，<code class="docutils literal notranslate"><span class="pre">sys.prefix</span></code> 和 <code class="docutils literal notranslate"><span class="pre">sys.exec_prefix</span></code> 均为空值，并且路径操作会被跳过；但是仍然会尝试导入 <a class="reference internal" href="#module-sitecustomize" title="sitecustomize"><code class="xref py py-mod docutils literal notranslate"><span class="pre">sitecustomize</span></code></a> 和 <a class="reference internal" href="#module-usercustomize" title="usercustomize"><code class="xref py py-mod docutils literal notranslate"><span class="pre">usercustomize</span></code></a>。</p>
</section>
<section id="readline-configuration">
<span id="rlcompleter-config"></span><h2>Readline 配置</h2>
<p>在支持 <a class="reference internal" href="readline.xhtml#module-readline" title="readline: GNU readline support for Python. (Unix)"><code class="xref py py-mod docutils literal notranslate"><span class="pre">readline</span></code></a> 的系统上，这个模块也将导入并配置 <a class="reference internal" href="rlcompleter.xhtml#module-rlcompleter" title="rlcompleter: Python identifier completion, suitable for the GNU readline library."><code class="xref py py-mod docutils literal notranslate"><span class="pre">rlcompleter</span></code></a> 模块，如果 Python 是以 <a class="reference internal" href="../tutorial/interpreter.xhtml#tut-interactive"><span class="std std-ref">交互模式</span></a> 启动并且不带 <a class="reference internal" href="../using/cmdline.xhtml#cmdoption-S"><code class="xref std std-option docutils literal notranslate"><span class="pre">-S</span></code></a> 选项的话。  默认的行为是启用 tab 键补全并使用 <code class="file docutils literal notranslate"><span class="pre">~/.python_history</span></code> 作为历史存档文件。 要禁用它，请删除（或重载）你的 <a class="reference internal" href="#module-sitecustomize" title="sitecustomize"><code class="xref py py-mod docutils literal notranslate"><span class="pre">sitecustomize</span></code></a> 或 <a class="reference internal" href="#module-usercustomize" title="usercustomize"><code class="xref py py-mod docutils literal notranslate"><span class="pre">usercustomize</span></code></a> 模块或 <span class="target" id="index-17"></span><a class="reference internal" href="../using/cmdline.xhtml#envvar-PYTHONSTARTUP"><code class="xref std std-envvar docutils literal notranslate"><span class="pre">PYTHONSTARTUP</span></code></a> 文件中的 <a class="reference internal" href="sys.xhtml#sys.__interactivehook__" title="sys.__interactivehook__"><code class="xref py py-data docutils literal notranslate"><span class="pre">sys.__interactivehook__</span></code></a> 属性。</p>
<div class="versionchanged">
<p><span class="versionmodified changed">在 3.4 版本发生变更: </span>rlcompleter 和 history 会被自动激活。</p>
</div>
</section>
<section id="module-contents">
<h2>模块内容</h2>
<dl class="py data">
<dt class="sig sig-object py" id="site.PREFIXES">
<span class="sig-prename descclassname"><span class="pre">site.</span></span><span class="sig-name descname"><span class="pre">PREFIXES</span></span></dt>
<dd><p>site-packages 目录的前缀列表。</p>
</dd></dl>

<dl class="py data">
<dt class="sig sig-object py" id="site.ENABLE_USER_SITE">
<span class="sig-prename descclassname"><span class="pre">site.</span></span><span class="sig-name descname"><span class="pre">ENABLE_USER_SITE</span></span></dt>
<dd><p>显示用户 site-packages 目录状态的旗标。 <code class="docutils literal notranslate"><span class="pre">True</span></code> 意味着它被启用并被添加到 <code class="docutils literal notranslate"><span class="pre">sys.path</span></code>。 <code class="docutils literal notranslate"><span class="pre">False</span></code> 意味着它按照用户请求被禁用 (通过 <a class="reference internal" href="../using/cmdline.xhtml#cmdoption-s"><code class="xref std std-option docutils literal notranslate"><span class="pre">-s</span></code></a> 或 <span class="target" id="index-18"></span><a class="reference internal" href="../using/cmdline.xhtml#envvar-PYTHONNOUSERSITE"><code class="xref std std-envvar docutils literal notranslate"><span class="pre">PYTHONNOUSERSITE</span></code></a>)。 <code class="docutils literal notranslate"><span class="pre">None</span></code> 意味着它因安全理由（user 或 group id 和 effective id 之间不匹配）或是被管理员所禁用。</p>
</dd></dl>

<dl class="py data">
<dt class="sig sig-object py" id="site.USER_SITE">
<span class="sig-prename descclassname"><span class="pre">site.</span></span><span class="sig-name descname"><span class="pre">USER_SITE</span></span></dt>
<dd><p>正在运行的 Python 的用户级 site-packages 的路径。 它可以为 <code class="docutils literal notranslate"><span class="pre">None</span></code>，如果 <a class="reference internal" href="#site.getusersitepackages" title="site.getusersitepackages"><code class="xref py py-func docutils literal notranslate"><span class="pre">getusersitepackages()</span></code></a> 尚未被调用的话。 默认值在 UNIX 和非框架 macOS 编译版上为 <code class="file docutils literal notranslate"><span class="pre">~/.local/lib/python</span><em><span class="pre">X.Y</span></em><span class="pre">/site-packages</span></code>，在 macOS 框架编译版上为  <code class="file docutils literal notranslate"><span class="pre">~/Library/Python/</span><em><span class="pre">X.Y</span></em><span class="pre">/lib/python/site-packages</span></code>，而在 Windows 上则为 <code class="file docutils literal notranslate"><em><span class="pre">%APPDATA%</span></em><span class="pre">\Python\Python</span><em><span class="pre">XY</span></em><span class="pre">\site-packages</span></code>。 此目录属于站点目录，这意味着其中的 <code class="file docutils literal notranslate"><span class="pre">.pth</span></code> 文件将会被处理。</p>
</dd></dl>

<dl class="py data">
<dt class="sig sig-object py" id="site.USER_BASE">
<span class="sig-prename descclassname"><span class="pre">site.</span></span><span class="sig-name descname"><span class="pre">USER_BASE</span></span></dt>
<dd><p>用户级 site-packages 目录的路径。 如果尚未调用 <a class="reference internal" href="#site.getuserbase" title="site.getuserbase"><code class="xref py py-func docutils literal notranslate"><span class="pre">getuserbase()</span></code></a> 则它可以为 <code class="docutils literal notranslate"><span class="pre">None</span></code>。默认值在 Unix 和 macOS 非框架编译版上为 <code class="file docutils literal notranslate"><span class="pre">~/.local</span></code>，在 macOS框架编译版上为 <code class="file docutils literal notranslate"><span class="pre">~/Library/Python/</span><em><span class="pre">X.Y</span></em></code>，而在 Windows 上则为 <code class="file docutils literal notranslate"><em><span class="pre">%APPDATA%</span></em><span class="pre">\Python</span></code>。 这个值会被用于计算针对 <a class="reference internal" href="sysconfig.xhtml#sysconfig-user-scheme"><span class="std std-ref">用户安装方案</span></a> 的脚本、数据文件、Python 模块等的安装目录。 另请参阅 <span class="target" id="index-19"></span><a class="reference internal" href="../using/cmdline.xhtml#envvar-PYTHONUSERBASE"><code class="xref std std-envvar docutils literal notranslate"><span class="pre">PYTHONUSERBASE</span></code></a>。</p>
</dd></dl>

<dl class="py function">
<dt class="sig sig-object py" id="site.main">
<span class="sig-prename descclassname"><span class="pre">site.</span></span><span class="sig-name descname"><span class="pre">main</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>将所有的标准站点专属目录添加到模块搜索路径。 这个函数会在导入此模块时被自动调用，除非 Python 解释器启动时附带了 <a class="reference internal" href="../using/cmdline.xhtml#cmdoption-S"><code class="xref std std-option docutils literal notranslate"><span class="pre">-S</span></code></a> 旗标。</p>
<div class="versionchanged">
<p><span class="versionmodified changed">在 3.3 版本发生变更: </span>这个函数使用无条件调用。</p>
</div>
</dd></dl>

<dl class="py function">
<dt class="sig sig-object py" id="site.addsitedir">
<span class="sig-prename descclassname"><span class="pre">site.</span></span><span class="sig-name descname"><span class="pre">addsitedir</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">sitedir</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">known_paths</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>将一个目录添加到 sys.path 并处理其 <code class="file docutils literal notranslate"><span class="pre">.pth</span></code> 文件。 通常被用于 <a class="reference internal" href="#module-sitecustomize" title="sitecustomize"><code class="xref py py-mod docutils literal notranslate"><span class="pre">sitecustomize</span></code></a> 或 <a class="reference internal" href="#module-usercustomize" title="usercustomize"><code class="xref py py-mod docutils literal notranslate"><span class="pre">usercustomize</span></code></a> (见下文)。</p>
</dd></dl>

<dl class="py function">
<dt class="sig sig-object py" id="site.getsitepackages">
<span class="sig-prename descclassname"><span class="pre">site.</span></span><span class="sig-name descname"><span class="pre">getsitepackages</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>返回包含所有全局 site-packages 目录的列表。</p>
<div class="versionadded">
<p><span class="versionmodified added">Added in version 3.2.</span></p>
</div>
</dd></dl>

<dl class="py function">
<dt class="sig sig-object py" id="site.getuserbase">
<span class="sig-prename descclassname"><span class="pre">site.</span></span><span class="sig-name descname"><span class="pre">getuserbase</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>返回用户基准目录的路径 <a class="reference internal" href="#site.USER_BASE" title="site.USER_BASE"><code class="xref py py-data docutils literal notranslate"><span class="pre">USER_BASE</span></code></a>。 如果它尚未被初始化，则此函数还将参照 <span class="target" id="index-20"></span><a class="reference internal" href="../using/cmdline.xhtml#envvar-PYTHONUSERBASE"><code class="xref std std-envvar docutils literal notranslate"><span class="pre">PYTHONUSERBASE</span></code></a> 来设置它。</p>
<div class="versionadded">
<p><span class="versionmodified added">Added in version 3.2.</span></p>
</div>
</dd></dl>

<dl class="py function">
<dt class="sig sig-object py" id="site.getusersitepackages">
<span class="sig-prename descclassname"><span class="pre">site.</span></span><span class="sig-name descname"><span class="pre">getusersitepackages</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>返回用户专属 site-packages 目录的路径 <a class="reference internal" href="#site.USER_SITE" title="site.USER_SITE"><code class="xref py py-data docutils literal notranslate"><span class="pre">USER_SITE</span></code></a>。 如果它尚未被初始化，则此函数还将参照 <a class="reference internal" href="#site.USER_BASE" title="site.USER_BASE"><code class="xref py py-data docutils literal notranslate"><span class="pre">USER_BASE</span></code></a> 来设置它。 要确定用户专属 site-packages 是否已被添加到 <code class="docutils literal notranslate"><span class="pre">sys.path</span></code> 则应当使用 <a class="reference internal" href="#site.ENABLE_USER_SITE" title="site.ENABLE_USER_SITE"><code class="xref py py-data docutils literal notranslate"><span class="pre">ENABLE_USER_SITE</span></code></a>。</p>
<div class="versionadded">
<p><span class="versionmodified added">Added in version 3.2.</span></p>
</div>
</dd></dl>

</section>
<section id="command-line-interface">
<span id="site-commandline"></span><h2>命令行界面</h2>
<p><a class="reference internal" href="#module-site" title="site: Module responsible for site-specific configuration."><code class="xref py py-mod docutils literal notranslate"><span class="pre">site</span></code></a> 模块还提供了一个从命令行获取用户目录的方式:</p>
<div class="highlight-shell-session notranslate"><div class="highlight"><pre><span></span><span class="gp">$ </span>python<span class="w"> </span>-m<span class="w"> </span>site<span class="w"> </span>--user-site
<span class="go">/home/user/.local/lib/python3.11/site-packages</span>
</pre></div>
</div>
<p>如果它被不带参数地调用，它将在标准输出打印 <a class="reference internal" href="sys.xhtml#sys.path" title="sys.path"><code class="xref py py-data docutils literal notranslate"><span class="pre">sys.path</span></code></a> 的内容，再打印 <a class="reference internal" href="#site.USER_BASE" title="site.USER_BASE"><code class="xref py py-data docutils literal notranslate"><span class="pre">USER_BASE</span></code></a> 的值以及该目录是否存在，然后打印 <a class="reference internal" href="#site.USER_SITE" title="site.USER_SITE"><code class="xref py py-data docutils literal notranslate"><span class="pre">USER_SITE</span></code></a> 的相应信息，最后打印 <a class="reference internal" href="#site.ENABLE_USER_SITE" title="site.ENABLE_USER_SITE"><code class="xref py py-data docutils literal notranslate"><span class="pre">ENABLE_USER_SITE</span></code></a> 的值。</p>
<dl class="std option">
<dt class="sig sig-object std" id="cmdoption-site-user-base">
<span class="sig-name descname"><span class="pre">--user-base</span></span><span class="sig-prename descclassname"></span></dt>
<dd><p>输出用户基本的路径。</p>
</dd></dl>

<dl class="std option">
<dt class="sig sig-object std" id="cmdoption-site-user-site">
<span class="sig-name descname"><span class="pre">--user-site</span></span><span class="sig-prename descclassname"></span></dt>
<dd><p>输出用户site-packages目录的路径。</p>
</dd></dl>

<p>如果同时给出了两个选项，则将打印用户基准目录和用户站点信息（总是按此顺序），并以 <a class="reference internal" href="os.xhtml#os.pathsep" title="os.pathsep"><code class="xref py py-data docutils literal notranslate"><span class="pre">os.pathsep</span></code></a> 分隔。</p>
<p>如果给出了其中一个选项，脚本将退出并返回以下值中的一个：如果用户级 site-packages 目录被启用则为 <code class="docutils literal notranslate"><span class="pre">0</span></code>，如果它被用户禁用则为 <code class="docutils literal notranslate"><span class="pre">1</span></code>，如果它因安全理由或被管理员禁用则为 <code class="docutils literal notranslate"><span class="pre">2</span></code>，如果发生错误则为大于 2 的值。</p>
<div class="admonition seealso">
<p class="admonition-title">参见</p>
<ul class="simple">
<li><p><span class="target" id="index-21"></span><a class="pep reference external" href="https://peps.python.org/pep-0370/"><strong>PEP 370</strong></a><span class="link-target"> [https://peps.python.org/pep-0370/]</span> -- 分用户的 site-packages 目录</p></li>
<li><p><a class="reference internal" href="sys_path_init.xhtml#sys-path-init"><span class="std std-ref">sys.path 模块搜索路径的初始化</span></a> -- <a class="reference internal" href="sys.xhtml#sys.path" title="sys.path"><code class="xref py py-data docutils literal notranslate"><span class="pre">sys.path</span></code></a> 的初始化。</p></li>
</ul>
</div>
</section>
</section>


            <div class="clearer"></div>
          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>