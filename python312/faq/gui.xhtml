<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta name="viewport" content="width=device-width, initial-scale=1" />
<meta property="og:title" content="图形用户界面（GUI）常见问题" />
<meta property="og:type" content="website" />
<meta property="og:url" content="https://docs.python.org/3/faq/gui.xhtml" />
<meta property="og:site_name" content="Python documentation" />
<meta property="og:description" content="目录: 图形用户界面（GUI）常见问题- 图形界面常见问题, Python 有哪些 GUI 工具包？, 有关Tkinter的问题- 我怎样“冻结”Tkinter程序？, 在等待 I/O 操作时能够处理 Tk 事件吗？, 在Tkinter中键绑定不工作：为什么？... 图形界面常见问题: Python 有哪些 GUI 工具包？: Python 的标准构建包括一个指向 Tcl/Tk 部件集的面向..." />
<meta property="og:image" content="https://docs.python.org/3/_static/og-image.png" />
<meta property="og:image:alt" content="Python documentation" />
<meta name="description" content="目录: 图形用户界面（GUI）常见问题- 图形界面常见问题, Python 有哪些 GUI 工具包？, 有关Tkinter的问题- 我怎样“冻结”Tkinter程序？, 在等待 I/O 操作时能够处理 Tk 事件吗？, 在Tkinter中键绑定不工作：为什么？... 图形界面常见问题: Python 有哪些 GUI 工具包？: Python 的标准构建包括一个指向 Tcl/Tk 部件集的面向..." />
<meta property="og:image:width" content="200" />
<meta property="og:image:height" content="200" />
<meta name="theme-color" content="#3776ab" />

    <title>图形用户界面（GUI）常见问题</title>
    <link rel="stylesheet" type="text/css" href="../_static/pygments.css" />
    <link rel="stylesheet" type="text/css" href="../_static/epub.css" />
    <link rel="canonical" href="https://docs.python.org/3/faq/gui.html" />
    
      
    

    
    <style>
      @media only screen {
        table.full-width-table {
            width: 100%;
        }
      }
    </style>
 

  </head><body>


    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <section id="graphic-user-interface-faq">
<h1><a class="toc-backref" href="#id2" role="doc-backlink">图形用户界面（GUI）常见问题</a></h1>
<nav class="contents" id="id1">
<p class="topic-title">目录</p>
<ul class="simple">
<li><p><a class="reference internal" href="#graphic-user-interface-faq" id="id2">图形用户界面（GUI）常见问题</a></p>
<ul>
<li><p><a class="reference internal" href="#general-gui-questions" id="id3">图形界面常见问题</a></p></li>
<li><p><a class="reference internal" href="#what-gui-toolkits-exist-for-python" id="id4">Python 有哪些 GUI 工具包？</a></p></li>
<li><p><a class="reference internal" href="#tkinter-questions" id="id5">有关Tkinter的问题</a></p>
<ul>
<li><p><a class="reference internal" href="#how-do-i-freeze-tkinter-applications" id="id6">我怎样“冻结”Tkinter程序？</a></p></li>
<li><p><a class="reference internal" href="#can-i-have-tk-events-handled-while-waiting-for-i-o" id="id7">在等待 I/O 操作时能够处理 Tk 事件吗？</a></p></li>
<li><p><a class="reference internal" href="#i-can-t-get-key-bindings-to-work-in-tkinter-why" id="id8">在Tkinter中键绑定不工作：为什么？</a></p></li>
</ul>
</li>
</ul>
</li>
</ul>
</nav>
<section id="general-gui-questions">
<h2><a class="toc-backref" href="#id3" role="doc-backlink">图形界面常见问题</a></h2>
</section>
<section id="what-gui-toolkits-exist-for-python">
<h2><a class="toc-backref" href="#id4" role="doc-backlink">Python 有哪些 GUI 工具包？</a></h2>
<p>Python 的标准构建包括一个指向 Tcl/Tk 部件集的面向对象的接口，称为 <a class="reference internal" href="../library/tk.xhtml#tkinter"><span class="std std-ref">tkinter</span></a> 。 这可能是最容易安装（因为它包含在大多数 Python 的 <a class="reference external" href="https://www.python.org/downloads/">二进制发行版</a><span class="link-target"> [https://www.python.org/downloads/]</span> 中）和使用的。关于 Tk 的更多信息，包括指向源代码的信息，见 <a class="reference external" href="https://www.tcl.tk">Tcl/Tk 主页</a><span class="link-target"> [https://www.tcl.tk]</span> 。 Tcl/Tk 可以完全移植到 macOS 、 Windows 和 Unix 平台。</p>
<p>存在多种选项，具体取决于你的目标平台。 Python Wiki 上提供了一个 <a class="reference external" href="https://wiki.python.org/moin/GuiProgramming#Cross-Platform_Frameworks">跨平台</a><span class="link-target"> [https://wiki.python.org/moin/GuiProgramming#Cross-Platform_Frameworks]</span> 和 <a class="reference external" href="https://wiki.python.org/moin/GuiProgramming#Platform-specific_Frameworks">平台专属</a><span class="link-target"> [https://wiki.python.org/moin/GuiProgramming#Platform-specific_Frameworks]</span> 的 GUI 框架列表。</p>
</section>
<section id="tkinter-questions">
<h2><a class="toc-backref" href="#id5" role="doc-backlink">有关Tkinter的问题</a></h2>
<section id="how-do-i-freeze-tkinter-applications">
<h3><a class="toc-backref" href="#id6" role="doc-backlink">我怎样“冻结”Tkinter程序？</a></h3>
<p>Freeze （意为 “冻结”）是一个用来创建独立应用程序的工具。 当 “冻结” Tkinter 程序时，程序并不是真的能够独立运行，因为程序仍然需要 Tcl 和 Tk 库。</p>
<p>一种解决方案是将应用程序与 Tcl 和 Tk 库同一起发布，并在运行时使用 <code class="xref std std-envvar docutils literal notranslate"><span class="pre">TCL_LIBRARY</span></code> 和 <code class="xref std std-envvar docutils literal notranslate"><span class="pre">TK_LIBRARY</span></code> 环境变量指向它们的位置。</p>
<p>To get truly stand-alone applications, the Tcl scripts that form the library
have to be integrated into the application as well. One tool supporting that is
SAM (stand-alone modules), which is part of the Tix distribution
(<a class="reference external" href="https://tix.sourceforge.net/">https://tix.sourceforge.net/</a>).</p>
<p>Build Tix with SAM enabled, perform the appropriate call to
<code class="xref c c-func docutils literal notranslate"><span class="pre">Tclsam_init()</span></code>, etc. inside Python's
<code class="file docutils literal notranslate"><span class="pre">Modules/tkappinit.c</span></code>, and link with libtclsam and libtksam (you
might include the Tix libraries as well).</p>
</section>
<section id="can-i-have-tk-events-handled-while-waiting-for-i-o">
<h3><a class="toc-backref" href="#id7" role="doc-backlink">在等待 I/O 操作时能够处理 Tk 事件吗？</a></h3>
<p>在 Windows 以外的平台上，你甚至不需要使用线程！ 但您必须稍微调整一下你的 I/O 代码。 Tk 有与 Xt 的 <code class="xref c c-func docutils literal notranslate"><span class="pre">XtAddInput()</span></code> 对应的调用，它允许你注册一个回调函数，当可以对一个文件描述符进行 I/O 操作时，该函数将从 Tk 的主循环中被调用。 参见 <a class="reference internal" href="../library/tkinter.xhtml#tkinter-file-handlers"><span class="std std-ref">文件处理程序</span></a>。</p>
</section>
<section id="i-can-t-get-key-bindings-to-work-in-tkinter-why">
<h3><a class="toc-backref" href="#id8" role="doc-backlink">在Tkinter中键绑定不工作：为什么？</a></h3>
<p>一个经常听到的抱怨是：已经通过 <code class="xref py py-meth docutils literal notranslate"><span class="pre">bind()</span></code> 方法 <a class="reference internal" href="../library/tkinter.xhtml#bindings-and-events"><span class="std std-ref">绑定</span></a> 到事件的事件处理器在对应的键被按下时并没有被处理。</p>
<p>最常见的原因是，那个绑定的控件没有“键盘焦点”。请在 Tk 文档中查找 focus 指令。通常一个控件要获得“键盘焦点”，需要点击那个控件（而不是标签；请查看 takefocus 选项）。</p>
</section>
</section>
</section>


            <div class="clearer"></div>
          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>