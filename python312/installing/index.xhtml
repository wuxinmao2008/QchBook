<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta name="viewport" content="width=device-width, initial-scale=1" />
<meta property="og:title" content="安装 Python 模块" />
<meta property="og:type" content="website" />
<meta property="og:url" content="https://docs.python.org/3/installing/index.xhtml" />
<meta property="og:site_name" content="Python documentation" />
<meta property="og:description" content="电子邮箱, distutils-sig@python.org,. 作为一个流行的开源开发项目，Python拥有一个活跃的贡献者和用户支持社区，这些社区也可以让他们的软件可供其他Python开发人员在开源许可条款下使用。 这允许Python用户有效地共享和协作，从其他人已经创建的解决方案中受益于常见（有时甚至是罕见的）问题，以及可以提供他们自己的解决方案。 本指南涵盖了安装部分的流程。 有关创..." />
<meta property="og:image" content="https://docs.python.org/3/_static/og-image.png" />
<meta property="og:image:alt" content="Python documentation" />
<meta name="description" content="电子邮箱, distutils-sig@python.org,. 作为一个流行的开源开发项目，Python拥有一个活跃的贡献者和用户支持社区，这些社区也可以让他们的软件可供其他Python开发人员在开源许可条款下使用。 这允许Python用户有效地共享和协作，从其他人已经创建的解决方案中受益于常见（有时甚至是罕见的）问题，以及可以提供他们自己的解决方案。 本指南涵盖了安装部分的流程。 有关创..." />
<meta property="og:image:width" content="200" />
<meta property="og:image:height" content="200" />
<meta name="theme-color" content="#3776ab" />

    <title>安装 Python 模块</title>
    <link rel="stylesheet" type="text/css" href="../_static/pygments.css" />
    <link rel="stylesheet" type="text/css" href="../_static/epub.css" />
    <link rel="canonical" href="https://docs.python.org/3/installing/index.html" />
    
      
    

    
    <style>
      @media only screen {
        table.full-width-table {
            width: 100%;
        }
      }
    </style>
 

  </head><body>


    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <section id="installing-python-modules">
<span id="installing-index"></span><h1>安装 Python 模块</h1>
<dl class="field-list simple">
<dt class="field-odd">电子邮箱<span class="colon">:</span></dt>
<dd class="field-odd"><p><a class="reference external" href="mailto:distutils-sig&#37;&#52;&#48;python&#46;org">distutils-sig<span>&#64;</span>python<span>&#46;</span>org</a></p>
</dd>
</dl>
<p>作为一个流行的开源开发项目，Python拥有一个活跃的贡献者和用户支持社区，这些社区也可以让他们的软件可供其他Python开发人员在开源许可条款下使用。</p>
<p>这允许Python用户有效地共享和协作，从其他人已经创建的解决方案中受益于常见（有时甚至是罕见的）问题，以及可以提供他们自己的解决方案。</p>
<p>本指南涵盖了安装部分的流程。 有关创建和共享自己的 Python 项目的指导，请参阅 <a class="reference external" href="https://packaging.python.org/en/latest/tutorials/packaging-projects/">Python packaging user guide</a><span class="link-target"> [https://packaging.python.org/en/latest/tutorials/packaging-projects/]</span>。</p>
<div class="admonition note">
<p class="admonition-title">备注</p>
<p>对于企业和其他机构用户，请注意许多组织都有自己的政策来使用和贡献开源软件。在使用Python提供的分发和安装工具时，请考虑这些政策。</p>
</div>
<section id="key-terms">
<h2>关键术语</h2>
<ul class="simple">
<li><p><code class="docutils literal notranslate"><span class="pre">pip</span></code> 是首选的安装程序。从Python 3.4开始，它默认包含在Python二进制安装程序中。</p></li>
<li><p><em>virtual environment</em> 是一种半隔离的 Python 环境，允许为特定的应用安装各自的包，而不是安装到整个系统。</p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">venv</span></code> 是创建虚拟环境的标准工具，从 Python 3.3 开始成为 Python 的组成部分。 从 Python 3.4 开始，它会默认安装 <code class="docutils literal notranslate"><span class="pre">pip</span></code> 到所创建的全部虚拟环境。</p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">virtualenv</span></code> 是 <code class="docutils literal notranslate"><span class="pre">venv</span></code> 的第三方替代（及其前身）。 它允许在 Python 3.4 之前的版本中使用虚拟环境，那些版本或是完全不提供 <code class="docutils literal notranslate"><span class="pre">venv</span></code>，或是不会自动安装 <code class="docutils literal notranslate"><span class="pre">pip</span></code> 到所创建的虚拟环境。</p></li>
<li><p><a class="reference external" href="https://pypi.org">Python Package Index</a><span class="link-target"> [https://pypi.org]</span> 是一个开源许可的软件包公共存储库，可供所有 Python 用户使用。</p></li>
<li><p><a class="reference external" href="https://www.pypa.io/">Python Packaging Authority</a><span class="link-target"> [https://www.pypa.io/]</span> 是负责标准打包工具以及相关元数据和文件格式标准维护与改进的开发人员和文档作者团队。 他们基于 <a class="reference external" href="https://github.com/pypa">GitHub</a><span class="link-target"> [https://github.com/pypa]</span> 维护着各种工具、文档和问题追踪系统。</p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">distutils</span></code> 是最初的构建和分发系统，于 1998 年首次加入 Python 标准库。 虽然直接使用 <code class="docutils literal notranslate"><span class="pre">distutils</span></code> 的方式已被淘汰，它仍然是当前打包和分发架构的基础，而且它不仅仍然是标准库的一部分，这个名称还以其他方式存在（例如用于协调 Python 打包标准开发流程的邮件列表就以此命名）。</p></li>
</ul>
<div class="versionchanged">
<p><span class="versionmodified changed">在 3.5 版本发生变更: </span>现在推荐使用 <code class="docutils literal notranslate"><span class="pre">venv</span></code> 来创建虚拟环境。</p>
</div>
<div class="admonition seealso">
<p class="admonition-title">参见</p>
<p><a class="reference external" href="https://packaging.python.org/installing/#creating-virtual-environments">Python 软件包用户指南：创建和使用虚拟环境</a><span class="link-target"> [https://packaging.python.org/installing/#creating-virtual-environments]</span></p>
</div>
</section>
<section id="basic-usage">
<h2>基本使用</h2>
<p>标准打包工具完全是针对命令行使用方式来设计的。</p>
<p>以下命令将从 Python Package Index 安装一个模块的最新版本及其依赖项:</p>
<div class="highlight-none notranslate"><div class="highlight"><pre><span></span>python -m pip install SomePackage
</pre></div>
</div>
<div class="admonition note">
<p class="admonition-title">备注</p>
<p>对于 POSIX 用户（包括 macOS 和 Linux 用户）本指南中的示例假定使用了 <a class="reference internal" href="../glossary.xhtml#term-virtual-environment"><span class="xref std std-term">virtual environment</span></a>。</p>
<p>对于 Windows 用户，本指南中的示例假定在安装 Python 时选择了修改系统 PATH 环境变量。</p>
</div>
<p>在命令行中指定一个准确或最小版本也是可以的。 当使用比较运算符例如 <code class="docutils literal notranslate"><span class="pre">&gt;</span></code>, <code class="docutils literal notranslate"><span class="pre">&lt;</span></code> 或其他某些可以被终端所解析的特殊字符时，包名称与版本号应当用双引号括起来:</p>
<div class="highlight-none notranslate"><div class="highlight"><pre><span></span>python -m pip install SomePackage==1.0.4    # specific version
python -m pip install &quot;SomePackage&gt;=1.0.4&quot;  # minimum version
</pre></div>
</div>
<p>通常，如果一个匹配的模块已安装，尝试再次安装将不会有任何效果。 要升级现有模块必须显式地发出请求:</p>
<div class="highlight-none notranslate"><div class="highlight"><pre><span></span>python -m pip install --upgrade SomePackage
</pre></div>
</div>
<p>更多有关 <code class="docutils literal notranslate"><span class="pre">pip</span></code> 及其功能的信息和资源可以在 <a class="reference external" href="https://packaging.python.org">Python 软件包用户指南</a><span class="link-target"> [https://packaging.python.org]</span> 中找到。</p>
<p>虚拟环境的创建可使用 <a class="reference internal" href="../library/venv.xhtml#module-venv" title="venv: Creation of virtual environments."><code class="xref py py-mod docutils literal notranslate"><span class="pre">venv</span></code></a> 模块来完成。 向已激活虚拟环境安装软件包可使用上文所介绍的命令。</p>
<div class="admonition seealso">
<p class="admonition-title">参见</p>
<p><a class="reference external" href="https://packaging.python.org/installing/">Python 软件包用户指南：安装 Python 分发包</a><span class="link-target"> [https://packaging.python.org/installing/]</span></p>
</div>
</section>
<section id="how-do-i">
<h2>我应如何 ...？</h2>
<p>这是一些常见任务的快速解答或相关链接。</p>
<section id="install-pip-in-versions-of-python-prior-to-python-3-4">
<h3>... 在 Python 3.4 之前的 Python 版本中安装 <code class="docutils literal notranslate"><span class="pre">pip</span></code> ？</h3>
<p>Python 捆绑 <code class="docutils literal notranslate"><span class="pre">pip</span></code> 是从 Python 3.4 才开始的。 对于更早的版本，<code class="docutils literal notranslate"><span class="pre">pip</span></code> 需要“引导安装”，具体说明参见 Python 软件包用户指南。</p>
<div class="admonition seealso">
<p class="admonition-title">参见</p>
<p><a class="reference external" href="https://packaging.python.org/installing/#requirements-for-installing-packages">Python 软件包用户指南：安装软件包的前提要求</a><span class="link-target"> [https://packaging.python.org/installing/#requirements-for-installing-packages]</span></p>
</div>
</section>
<section id="install-packages-just-for-the-current-user">
<h3>... 只为当前用户安装软件包？</h3>
<p>将 <code class="docutils literal notranslate"><span class="pre">--user</span></code> 选项传入 <code class="docutils literal notranslate"><span class="pre">python</span> <span class="pre">-m</span> <span class="pre">pip</span> <span class="pre">install</span></code> 将只为当前用户而非为系统中的所有用户安装软件包。</p>
</section>
<section id="install-scientific-python-packages">
<h3>... 安装科学计算类 Python 软件包？</h3>
<p>许多科学计算类 Python 软件包都有复杂的二进制编译文件依赖，直接使用 <code class="docutils literal notranslate"><span class="pre">pip</span></code> 安装目前并不太容易。 在当前情况下，通过 <a class="reference external" href="https://packaging.python.org/science/">其他方式</a><span class="link-target"> [https://packaging.python.org/science/]</span> 而非尝试用 <code class="docutils literal notranslate"><span class="pre">pip</span></code> 安装这些软件包对用户来说通常会更容易。</p>
<div class="admonition seealso">
<p class="admonition-title">参见</p>
<p><a class="reference external" href="https://packaging.python.org/science/">Python 软件包用户指南：安装科学计算类软件包</a><span class="link-target"> [https://packaging.python.org/science/]</span></p>
</div>
</section>
<section id="work-with-multiple-versions-of-python-installed-in-parallel">
<h3>... 使用并行安装的多个 Python 版本？</h3>
<p>在 Linux, macOS 以及其他 POSIX 系统中，使用带版本号的 Python 命令配合 <code class="docutils literal notranslate"><span class="pre">-m</span></code> 开关选项来运行特定版本的 <code class="docutils literal notranslate"><span class="pre">pip</span></code>:</p>
<div class="highlight-none notranslate"><div class="highlight"><pre><span></span>python2   -m pip install SomePackage  # default Python 2
python2.7 -m pip install SomePackage  # specifically Python 2.7
python3   -m pip install SomePackage  # default Python 3
python3.4 -m pip install SomePackage  # specifically Python 3.4
</pre></div>
</div>
<p>也可以使用带特定版本号的 <code class="docutils literal notranslate"><span class="pre">pip</span></code> 命令。</p>
<p>在 Windows 中，使用 <code class="docutils literal notranslate"><span class="pre">py</span></code> Python 启动器命令配合 <code class="docutils literal notranslate"><span class="pre">-m</span></code> 开关选项:</p>
<div class="highlight-none notranslate"><div class="highlight"><pre><span></span>py -2   -m pip install SomePackage  # default Python 2
py -2.7 -m pip install SomePackage  # specifically Python 2.7
py -3   -m pip install SomePackage  # default Python 3
py -3.4 -m pip install SomePackage  # specifically Python 3.4
</pre></div>
</div>
</section>
</section>
<section id="common-installation-issues">
<h2>常见的安装问题</h2>
<section id="installing-into-the-system-python-on-linux">
<h3>在 Linux 的系统 Python 版本上安装</h3>
<p>Linux 系统通常会将某个 Python 版本作为发行版的一部分包含在内。 将软件包安装到这个 Python 版本上需要系统 root 权限，并可能会干扰到系统包管理器和其他系统组件的运作，如果这些组件在使用 <code class="docutils literal notranslate"><span class="pre">pip</span></code> 时被意外升级的话。</p>
<p>在这样的系统上，通过 <code class="docutils literal notranslate"><span class="pre">pip</span></code> 安装软件包通常最好是使用虚拟环境或分用户安装。</p>
</section>
<section id="pip-not-installed">
<h3>未安装 pip</h3>
<p>默认情况下可能未安装 <code class="docutils literal notranslate"><span class="pre">pip</span></code>，一种可选解决方案是:</p>
<div class="highlight-none notranslate"><div class="highlight"><pre><span></span>python -m ensurepip --default-pip
</pre></div>
</div>
<p>还有其他附加资源可用来 <a class="reference external" href="https://packaging.python.org/en/latest/tutorials/installing-packages/#ensure-pip-setuptools-and-wheel-are-up-to-date">安装 pip。</a><span class="link-target"> [https://packaging.python.org/en/latest/tutorials/installing-packages/#ensure-pip-setuptools-and-wheel-are-up-to-date]</span></p>
</section>
<section id="installing-binary-extensions">
<h3>安装二进制编译扩展</h3>
<p>Python 通常非常依赖基于源代码的发布方式，也就是期望最终用户在安装过程中使用源码来编译生成扩展模块。</p>
<p>随着对二进制码 <code class="docutils literal notranslate"><span class="pre">wheel</span></code> 格式支持的引入，以及通过 Python Package Index 至少发布 Windows 和 macOS 版的 wheel 文件，预计此问题将逐步得到解决，因为用户将能够更频繁地安装预编译扩展，而不再需要自己编译它们。</p>
<p>某些用来安装 <a class="reference external" href="https://packaging.python.org/science/">科学计算类软件包</a><span class="link-target"> [https://packaging.python.org/science/]</span> 的解决方案对于尚未提供预编译 <code class="docutils literal notranslate"><span class="pre">wheel</span></code> 文件的那些扩展模块来说，也有助于用户在无需进行本机编译的情况下获取二进制码扩展模块。</p>
<div class="admonition seealso">
<p class="admonition-title">参见</p>
<p><a class="reference external" href="https://packaging.python.org/extensions/">Python 软件包用户指南：二进制码扩展</a><span class="link-target"> [https://packaging.python.org/extensions/]</span></p>
</div>
</section>
</section>
</section>


            <div class="clearer"></div>
          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>