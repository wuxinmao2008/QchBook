<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta name="viewport" content="width=device-width, initial-scale=1" />
<meta property="og:title" content="12. 虚拟环境和包" />
<meta property="og:type" content="website" />
<meta property="og:url" content="https://docs.python.org/3/tutorial/venv.xhtml" />
<meta property="og:site_name" content="Python documentation" />
<meta property="og:description" content="概述: Python应用程序通常会使用不在标准库内的软件包和模块。应用程序有时需要特定版本的库，因为应用程序可能需要修复特定的错误，或者可以使用库的过时版本的接口编写应用程序。 这意味着一个Python安装可能无法满足每个应用程序的要求。如果应用程序A需要特定模块的1.0版本但应用程序B需要2.0版本，则需求存在冲突，安装版本1.0或2.0将导致某一个应用程序无法运行。 这个问题的解决方案是..." />
<meta property="og:image" content="https://docs.python.org/3/_static/og-image.png" />
<meta property="og:image:alt" content="Python documentation" />
<meta name="description" content="概述: Python应用程序通常会使用不在标准库内的软件包和模块。应用程序有时需要特定版本的库，因为应用程序可能需要修复特定的错误，或者可以使用库的过时版本的接口编写应用程序。 这意味着一个Python安装可能无法满足每个应用程序的要求。如果应用程序A需要特定模块的1.0版本但应用程序B需要2.0版本，则需求存在冲突，安装版本1.0或2.0将导致某一个应用程序无法运行。 这个问题的解决方案是..." />
<meta property="og:image:width" content="200" />
<meta property="og:image:height" content="200" />
<meta name="theme-color" content="#3776ab" />

    <title>12. 虚拟环境和包</title>
    <link rel="stylesheet" type="text/css" href="../_static/pygments.css" />
    <link rel="stylesheet" type="text/css" href="../_static/epub.css" />
    <link rel="canonical" href="https://docs.python.org/3/tutorial/venv.html" />
    
      
    

    
    <style>
      @media only screen {
        table.full-width-table {
            width: 100%;
        }
      }
    </style>
 

  </head><body>


    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <section id="virtual-environments-and-packages">
<span id="tut-venv"></span><h1><span class="section-number">12. </span>虚拟环境和包</h1>
<section id="introduction">
<h2><span class="section-number">12.1. </span>概述</h2>
<p>Python应用程序通常会使用不在标准库内的软件包和模块。应用程序有时需要特定版本的库，因为应用程序可能需要修复特定的错误，或者可以使用库的过时版本的接口编写应用程序。</p>
<p>这意味着一个Python安装可能无法满足每个应用程序的要求。如果应用程序A需要特定模块的1.0版本但应用程序B需要2.0版本，则需求存在冲突，安装版本1.0或2.0将导致某一个应用程序无法运行。</p>
<p>这个问题的解决方案是创建一个 <a class="reference internal" href="../glossary.xhtml#term-virtual-environment"><span class="xref std std-term">virtual environment</span></a>，一个目录树，其中安装有特定Python版本，以及许多其他包。</p>
<p>然后，不同的应用将可以使用不同的虚拟环境。 要解决先前需求相冲突的例子，应用程序 A 可以拥有自己的 安装了 1.0 版本的虚拟环境，而应用程序 B 则拥有安装了 2.0 版本的另一个虚拟环境。 如果应用程序 B 要求将某个库升级到 3.0 版本，也不会影响应用程序 A 的环境。</p>
</section>
<section id="creating-virtual-environments">
<h2><span class="section-number">12.2. </span>创建虚拟环境</h2>
<p>The module used to create and manage virtual environments is called
<a class="reference internal" href="../library/venv.xhtml#module-venv" title="venv: Creation of virtual environments."><code class="xref py py-mod docutils literal notranslate"><span class="pre">venv</span></code></a>.  <a class="reference internal" href="../library/venv.xhtml#module-venv" title="venv: Creation of virtual environments."><code class="xref py py-mod docutils literal notranslate"><span class="pre">venv</span></code></a> will install the Python version from which
the command was run (as reported by the <a class="reference internal" href="../using/cmdline.xhtml#cmdoption-version"><code class="xref std std-option docutils literal notranslate"><span class="pre">--version</span></code></a> option).
For instance, executing the command with <code class="docutils literal notranslate"><span class="pre">python3.12</span></code> will install
version 3.12.</p>
<p>要创建虚拟环境，请确定要放置它的目录，并将 <a class="reference internal" href="../library/venv.xhtml#module-venv" title="venv: Creation of virtual environments."><code class="xref py py-mod docutils literal notranslate"><span class="pre">venv</span></code></a> 模块作为脚本运行目录路径:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="n">python</span> <span class="o">-</span><span class="n">m</span> <span class="n">venv</span> <span class="n">tutorial</span><span class="o">-</span><span class="n">env</span>
</pre></div>
</div>
<p>这将创建 <code class="docutils literal notranslate"><span class="pre">tutorial-env</span></code> 目录，如果它不存在的话，并在其中创建包含 Python 解释器副本和各种支持文件的目录。</p>
<p>虚拟环境的常用目录位置是 <code class="docutils literal notranslate"><span class="pre">.venv</span></code>。 这个名称通常会令该目录在你的终端中保持隐藏，从而避免需要对所在目录进行额外解释的一般名称。 它还能防止与某些工具所支持的 <code class="docutils literal notranslate"><span class="pre">.env</span></code> 环境变量定义文件发生冲突。</p>
<p>创建虚拟环境后，您可以激活它。</p>
<p>在Windows上，运行:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="n">tutorial</span><span class="o">-</span><span class="n">env</span>\<span class="n">Scripts</span>\<span class="n">activate</span>
</pre></div>
</div>
<p>在Unix或MacOS上，运行:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="n">source</span> <span class="n">tutorial</span><span class="o">-</span><span class="n">env</span><span class="o">/</span><span class="nb">bin</span><span class="o">/</span><span class="n">activate</span>
</pre></div>
</div>
<p>（这个脚本是为bash shell编写的。如果你使用 <strong class="program">csh</strong> 或 <strong class="program">fish</strong> shell，你应该改用 <code class="docutils literal notranslate"><span class="pre">activate.csh</span></code> 或 <code class="docutils literal notranslate"><span class="pre">activate.fish</span></code> 脚本。）</p>
<p>激活虚拟环境将改变你所用终端的提示符，以显示你正在使用的虚拟环境，并修改环境以使 <code class="docutils literal notranslate"><span class="pre">python</span></code> 命令所运行的将是已安装的特定 Python 版本。 例如：</p>
<div class="highlight-bash notranslate"><div class="highlight"><pre><span></span>$<span class="w"> </span><span class="nb">source</span><span class="w"> </span>~/envs/tutorial-env/bin/activate
<span class="o">(</span>tutorial-env<span class="o">)</span><span class="w"> </span>$<span class="w"> </span>python
Python<span class="w"> </span><span class="m">3</span>.5.1<span class="w"> </span><span class="o">(</span>default,<span class="w"> </span>May<span class="w">  </span><span class="m">6</span><span class="w"> </span><span class="m">2016</span>,<span class="w"> </span><span class="m">10</span>:59:36<span class="o">)</span>
<span class="w">  </span>...
&gt;&gt;&gt;<span class="w"> </span>import<span class="w"> </span>sys
&gt;&gt;&gt;<span class="w"> </span>sys.path
<span class="o">[</span><span class="s1">&#39;&#39;</span>,<span class="w"> </span><span class="s1">&#39;/usr/local/lib/python35.zip&#39;</span>,<span class="w"> </span>...,
<span class="s1">&#39;~/envs/tutorial-env/lib/python3.5/site-packages&#39;</span><span class="o">]</span>
&gt;&gt;&gt;
</pre></div>
</div>
<p>要撤销激活一个虚拟环境，请输入:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="n">deactivate</span>
</pre></div>
</div>
<p>到终端。</p>
</section>
<section id="managing-packages-with-pip">
<h2><span class="section-number">12.3. </span>使用pip管理包</h2>
<p>你可以使用一个名为 <strong class="program">pip</strong> 的程序来安装、升级和移除软件包。 默认情况下 <code class="docutils literal notranslate"><span class="pre">pip</span></code> 将从 <a class="reference external" href="https://pypi.org">Python Package Index</a><span class="link-target"> [https://pypi.org]</span> 安装软件包。 你可以在你的 web 浏览器中查看 Python Package Index。</p>
<p><code class="docutils literal notranslate"><span class="pre">pip</span></code> 有许多子命令: &quot;install&quot;, &quot;uninstall&quot;, &quot;freeze&quot; 等等。 （请在 <a class="reference internal" href="../installing/index.xhtml#installing-index"><span class="std std-ref">安装 Python 模块</span></a> 指南页查看完整的 <code class="docutils literal notranslate"><span class="pre">pip</span></code> 文档。）</p>
<p>您可以通过指定包的名称来安装最新版本的包：</p>
<div class="highlight-bash notranslate"><div class="highlight"><pre><span></span><span class="o">(</span>tutorial-env<span class="o">)</span><span class="w"> </span>$<span class="w"> </span>python<span class="w"> </span>-m<span class="w"> </span>pip<span class="w"> </span>install<span class="w"> </span>novas
Collecting<span class="w"> </span>novas
<span class="w">  </span>Downloading<span class="w"> </span>novas-3.1.1.3.tar.gz<span class="w"> </span><span class="o">(</span>136kB<span class="o">)</span>
Installing<span class="w"> </span>collected<span class="w"> </span>packages:<span class="w"> </span>novas
<span class="w">  </span>Running<span class="w"> </span>setup.py<span class="w"> </span>install<span class="w"> </span><span class="k">for</span><span class="w"> </span>novas
Successfully<span class="w"> </span>installed<span class="w"> </span>novas-3.1.1.3
</pre></div>
</div>
<p>您还可以通过提供包名称后跟 <code class="docutils literal notranslate"><span class="pre">==</span></code> 和版本号来安装特定版本的包：</p>
<div class="highlight-bash notranslate"><div class="highlight"><pre><span></span><span class="o">(</span>tutorial-env<span class="o">)</span><span class="w"> </span>$<span class="w"> </span>python<span class="w"> </span>-m<span class="w"> </span>pip<span class="w"> </span>install<span class="w"> </span><span class="nv">requests</span><span class="o">==</span><span class="m">2</span>.6.0
Collecting<span class="w"> </span><span class="nv">requests</span><span class="o">==</span><span class="m">2</span>.6.0
<span class="w">  </span>Using<span class="w"> </span>cached<span class="w"> </span>requests-2.6.0-py2.py3-none-any.whl
Installing<span class="w"> </span>collected<span class="w"> </span>packages:<span class="w"> </span>requests
Successfully<span class="w"> </span>installed<span class="w"> </span>requests-2.6.0
</pre></div>
</div>
<p>如果你重新运行这个命令，<code class="docutils literal notranslate"><span class="pre">pip</span></code> 会注意到已经安装了所请求的版本因而不做任何事。 你可以提供不同的版本号来获取相应版本，或者你可以运行 <code class="docutils literal notranslate"><span class="pre">python</span> <span class="pre">-m</span> <span class="pre">pip</span> <span class="pre">install</span> <span class="pre">--upgrade</span></code> 以将软件包升级到最新版本:</p>
<div class="highlight-bash notranslate"><div class="highlight"><pre><span></span><span class="o">(</span>tutorial-env<span class="o">)</span><span class="w"> </span>$<span class="w"> </span>python<span class="w"> </span>-m<span class="w"> </span>pip<span class="w"> </span>install<span class="w"> </span>--upgrade<span class="w"> </span>requests
Collecting<span class="w"> </span>requests
Installing<span class="w"> </span>collected<span class="w"> </span>packages:<span class="w"> </span>requests
<span class="w">  </span>Found<span class="w"> </span>existing<span class="w"> </span>installation:<span class="w"> </span>requests<span class="w"> </span><span class="m">2</span>.6.0
<span class="w">    </span>Uninstalling<span class="w"> </span>requests-2.6.0:
<span class="w">      </span>Successfully<span class="w"> </span>uninstalled<span class="w"> </span>requests-2.6.0
Successfully<span class="w"> </span>installed<span class="w"> </span>requests-2.7.0
</pre></div>
</div>
<p><code class="docutils literal notranslate"><span class="pre">python</span> <span class="pre">-m</span> <span class="pre">pip</span> <span class="pre">uninstall</span></code> 后跟一个或多个要从虚拟环境中删除的包所对应的名称。</p>
<p><code class="docutils literal notranslate"><span class="pre">python</span> <span class="pre">-m</span> <span class="pre">pip</span> <span class="pre">show</span></code> 将显示有关某个特定包的信息:</p>
<div class="highlight-bash notranslate"><div class="highlight"><pre><span></span><span class="o">(</span>tutorial-env<span class="o">)</span><span class="w"> </span>$<span class="w"> </span>python<span class="w"> </span>-m<span class="w"> </span>pip<span class="w"> </span>show<span class="w"> </span>requests
---
Metadata-Version:<span class="w"> </span><span class="m">2</span>.0
Name:<span class="w"> </span>requests
Version:<span class="w"> </span><span class="m">2</span>.7.0
Summary:<span class="w"> </span>Python<span class="w"> </span>HTTP<span class="w"> </span><span class="k">for</span><span class="w"> </span>Humans.
Home-page:<span class="w"> </span>http://python-requests.org
Author:<span class="w"> </span>Kenneth<span class="w"> </span>Reitz
Author-email:<span class="w"> </span>me@kennethreitz.com
License:<span class="w"> </span>Apache<span class="w"> </span><span class="m">2</span>.0
Location:<span class="w"> </span>/Users/akuchling/envs/tutorial-env/lib/python3.4/site-packages
Requires:
</pre></div>
</div>
<p><code class="docutils literal notranslate"><span class="pre">python</span> <span class="pre">-m</span> <span class="pre">pip</span> <span class="pre">list</span></code> 将显示所有在虚拟环境中安装的包:</p>
<div class="highlight-bash notranslate"><div class="highlight"><pre><span></span><span class="o">(</span>tutorial-env<span class="o">)</span><span class="w"> </span>$<span class="w"> </span>python<span class="w"> </span>-m<span class="w"> </span>pip<span class="w"> </span>list
novas<span class="w"> </span><span class="o">(</span><span class="m">3</span>.1.1.3<span class="o">)</span>
numpy<span class="w"> </span><span class="o">(</span><span class="m">1</span>.9.2<span class="o">)</span>
pip<span class="w"> </span><span class="o">(</span><span class="m">7</span>.0.3<span class="o">)</span>
requests<span class="w"> </span><span class="o">(</span><span class="m">2</span>.7.0<span class="o">)</span>
setuptools<span class="w"> </span><span class="o">(</span><span class="m">16</span>.0<span class="o">)</span>
</pre></div>
</div>
<p><code class="docutils literal notranslate"><span class="pre">python</span> <span class="pre">-m</span> <span class="pre">pip</span> <span class="pre">freeze</span></code> 将产生一个类似的已安装包列表，但其输出会使用 <code class="docutils literal notranslate"><span class="pre">python</span> <span class="pre">-m</span> <span class="pre">pip</span> <span class="pre">install</span></code> 所期望的格式。 一个常见的约定是将此列表放在 <code class="docutils literal notranslate"><span class="pre">requirements.txt</span></code> 文件中:</p>
<div class="highlight-bash notranslate"><div class="highlight"><pre><span></span><span class="o">(</span>tutorial-env<span class="o">)</span><span class="w"> </span>$<span class="w"> </span>python<span class="w"> </span>-m<span class="w"> </span>pip<span class="w"> </span>freeze<span class="w"> </span>&gt;<span class="w"> </span>requirements.txt
<span class="o">(</span>tutorial-env<span class="o">)</span><span class="w"> </span>$<span class="w"> </span>cat<span class="w"> </span>requirements.txt
<span class="nv">novas</span><span class="o">==</span><span class="m">3</span>.1.1.3
<span class="nv">numpy</span><span class="o">==</span><span class="m">1</span>.9.2
<span class="nv">requests</span><span class="o">==</span><span class="m">2</span>.7.0
</pre></div>
</div>
<p>然后可以将 <code class="docutils literal notranslate"><span class="pre">requirements.txt</span></code> 提交给版本控制并作为应用程序的一部分提供。然后用户可以使用 <code class="docutils literal notranslate"><span class="pre">install</span> <span class="pre">-r</span></code> 安装所有必需的包：</p>
<div class="highlight-bash notranslate"><div class="highlight"><pre><span></span><span class="o">(</span>tutorial-env<span class="o">)</span><span class="w"> </span>$<span class="w"> </span>python<span class="w"> </span>-m<span class="w"> </span>pip<span class="w"> </span>install<span class="w"> </span>-r<span class="w"> </span>requirements.txt
Collecting<span class="w"> </span><span class="nv">novas</span><span class="o">==</span><span class="m">3</span>.1.1.3<span class="w"> </span><span class="o">(</span>from<span class="w"> </span>-r<span class="w"> </span>requirements.txt<span class="w"> </span><span class="o">(</span>line<span class="w"> </span><span class="m">1</span><span class="o">))</span>
<span class="w">  </span>...
Collecting<span class="w"> </span><span class="nv">numpy</span><span class="o">==</span><span class="m">1</span>.9.2<span class="w"> </span><span class="o">(</span>from<span class="w"> </span>-r<span class="w"> </span>requirements.txt<span class="w"> </span><span class="o">(</span>line<span class="w"> </span><span class="m">2</span><span class="o">))</span>
<span class="w">  </span>...
Collecting<span class="w"> </span><span class="nv">requests</span><span class="o">==</span><span class="m">2</span>.7.0<span class="w"> </span><span class="o">(</span>from<span class="w"> </span>-r<span class="w"> </span>requirements.txt<span class="w"> </span><span class="o">(</span>line<span class="w"> </span><span class="m">3</span><span class="o">))</span>
<span class="w">  </span>...
Installing<span class="w"> </span>collected<span class="w"> </span>packages:<span class="w"> </span>novas,<span class="w"> </span>numpy,<span class="w"> </span>requests
<span class="w">  </span>Running<span class="w"> </span>setup.py<span class="w"> </span>install<span class="w"> </span><span class="k">for</span><span class="w"> </span>novas
Successfully<span class="w"> </span>installed<span class="w"> </span>novas-3.1.1.3<span class="w"> </span>numpy-1.9.2<span class="w"> </span>requests-2.7.0
</pre></div>
</div>
<p><code class="docutils literal notranslate"><span class="pre">pip</span></code> 有更多的选项。 有关 <code class="docutils literal notranslate"><span class="pre">pip</span></code> 的完整文档请查阅 <a class="reference internal" href="../installing/index.xhtml#installing-index"><span class="std std-ref">安装 Python 模块</span></a> 指南。 当你编写了一个软件包并希望将其放在 Python Package Index 中时，请查阅 <a class="reference external" href="https://packaging.python.org/en/latest/tutorials/packaging-projects/">Python packaging user guide</a><span class="link-target"> [https://packaging.python.org/en/latest/tutorials/packaging-projects/]</span>。</p>
</section>
</section>


            <div class="clearer"></div>
          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>