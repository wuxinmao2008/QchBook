<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta name="viewport" content="width=device-width, initial-scale=1" />
<meta property="og:title" content="布尔对象" />
<meta property="og:type" content="website" />
<meta property="og:url" content="https://docs.python.org/3/c-api/bool.xhtml" />
<meta property="og:site_name" content="Python documentation" />
<meta property="og:description" content="在 Python 中布尔值是作为整数的子类实现的。 只有两个布尔值， Py_False 和 Py_True 。 因此，正常的创建和删除功能不适用于布尔值。 不过，下列的宏则是可用的。" />
<meta property="og:image" content="https://docs.python.org/3/_static/og-image.png" />
<meta property="og:image:alt" content="Python documentation" />
<meta name="description" content="在 Python 中布尔值是作为整数的子类实现的。 只有两个布尔值， Py_False 和 Py_True 。 因此，正常的创建和删除功能不适用于布尔值。 不过，下列的宏则是可用的。" />
<meta property="og:image:width" content="200" />
<meta property="og:image:height" content="200" />
<meta name="theme-color" content="#3776ab" />

    <title>布尔对象</title>
    <link rel="stylesheet" type="text/css" href="../_static/pygments.css" />
    <link rel="stylesheet" type="text/css" href="../_static/epub.css" />
    <link rel="canonical" href="https://docs.python.org/3/c-api/bool.html" />
    
      
    

    
    <style>
      @media only screen {
        table.full-width-table {
            width: 100%;
        }
      }
    </style>
 

  </head><body>


    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <section id="boolean-objects">
<span id="boolobjects"></span><h1>布尔对象</h1>
<p>在 Python 中布尔值是作为整数的子类实现的。 只有两个布尔值，<a class="reference internal" href="#c.Py_False" title="Py_False"><code class="xref c c-data docutils literal notranslate"><span class="pre">Py_False</span></code></a> 和 <a class="reference internal" href="#c.Py_True" title="Py_True"><code class="xref c c-data docutils literal notranslate"><span class="pre">Py_True</span></code></a>。 因此，正常的创建和删除功能不适用于布尔值。 不过，下列的宏则是可用的。</p>
<dl class="c var">
<dt class="sig sig-object c" id="c.PyBool_Type">
<a class="reference internal" href="type.xhtml#c.PyTypeObject" title="PyTypeObject"><span class="n"><span class="pre">PyTypeObject</span></span></a><span class="w"> </span><span class="sig-name descname"><span class="n"><span class="pre">PyBool_Type</span></span></span><br /></dt>
<dd><em class="stableabi"> 属于 <a class="reference internal" href="stable.xhtml#stable"><span class="std std-ref">稳定 ABI</span></a>.</em><p>这个 <a class="reference internal" href="type.xhtml#c.PyTypeObject" title="PyTypeObject"><code class="xref c c-type docutils literal notranslate"><span class="pre">PyTypeObject</span></code></a> 的实例代表一个 Python 布尔类型；它与 Python 层面的 <a class="reference internal" href="../library/functions.xhtml#bool" title="bool"><code class="xref py py-class docutils literal notranslate"><span class="pre">bool</span></code></a> 是相同的对象。</p>
</dd></dl>

<dl class="c function">
<dt class="sig sig-object c" id="c.PyBool_Check">
<span class="kt"><span class="pre">int</span></span><span class="w"> </span><span class="sig-name descname"><span class="n"><span class="pre">PyBool_Check</span></span></span><span class="sig-paren">(</span><a class="reference internal" href="structures.xhtml#c.PyObject" title="PyObject"><span class="n"><span class="pre">PyObject</span></span></a><span class="w"> </span><span class="p"><span class="pre">*</span></span><span class="n"><span class="pre">o</span></span><span class="sig-paren">)</span><br /></dt>
<dd><p>如果 <em>o</em> 的类型为 <a class="reference internal" href="#c.PyBool_Type" title="PyBool_Type"><code class="xref c c-data docutils literal notranslate"><span class="pre">PyBool_Type</span></code></a> 则返回真值。 此函数总是会成功执行。</p>
</dd></dl>

<dl class="c var">
<dt class="sig sig-object c" id="c.Py_False">
<a class="reference internal" href="structures.xhtml#c.PyObject" title="PyObject"><span class="n"><span class="pre">PyObject</span></span></a><span class="w"> </span><span class="p"><span class="pre">*</span></span><span class="sig-name descname"><span class="n"><span class="pre">Py_False</span></span></span><br /></dt>
<dd><p>The Python <code class="docutils literal notranslate"><span class="pre">False</span></code> object.  This object has no methods and is
<a class="reference external" href="https://peps.python.org/pep-0683/">immortal</a><span class="link-target"> [https://peps.python.org/pep-0683/]</span>.</p>
</dd></dl>

<div class="versionchanged">
<p><span class="versionmodified changed">在 3.12 版本发生变更: </span><a class="reference internal" href="#c.Py_False" title="Py_False"><code class="xref c c-data docutils literal notranslate"><span class="pre">Py_False</span></code></a> is immortal.</p>
</div>
<dl class="c var">
<dt class="sig sig-object c" id="c.Py_True">
<a class="reference internal" href="structures.xhtml#c.PyObject" title="PyObject"><span class="n"><span class="pre">PyObject</span></span></a><span class="w"> </span><span class="p"><span class="pre">*</span></span><span class="sig-name descname"><span class="n"><span class="pre">Py_True</span></span></span><br /></dt>
<dd><p>The Python <code class="docutils literal notranslate"><span class="pre">True</span></code> object.  This object has no methods and is
<a class="reference external" href="https://peps.python.org/pep-0683/">immortal</a><span class="link-target"> [https://peps.python.org/pep-0683/]</span>.</p>
</dd></dl>

<div class="versionchanged">
<p><span class="versionmodified changed">在 3.12 版本发生变更: </span><a class="reference internal" href="#c.Py_True" title="Py_True"><code class="xref c c-data docutils literal notranslate"><span class="pre">Py_True</span></code></a> is immortal.</p>
</div>
<dl class="c macro">
<dt class="sig sig-object c" id="c.Py_RETURN_FALSE">
<span class="sig-name descname"><span class="n"><span class="pre">Py_RETURN_FALSE</span></span></span><br /></dt>
<dd><p>从一个函数返回 <a class="reference internal" href="#c.Py_False" title="Py_False"><code class="xref c c-data docutils literal notranslate"><span class="pre">Py_False</span></code></a>。</p>
</dd></dl>

<dl class="c macro">
<dt class="sig sig-object c" id="c.Py_RETURN_TRUE">
<span class="sig-name descname"><span class="n"><span class="pre">Py_RETURN_TRUE</span></span></span><br /></dt>
<dd><p>从一个函数返回 <a class="reference internal" href="#c.Py_True" title="Py_True"><code class="xref c c-data docutils literal notranslate"><span class="pre">Py_True</span></code></a>。</p>
</dd></dl>

<dl class="c function">
<dt class="sig sig-object c" id="c.PyBool_FromLong">
<a class="reference internal" href="structures.xhtml#c.PyObject" title="PyObject"><span class="n"><span class="pre">PyObject</span></span></a><span class="w"> </span><span class="p"><span class="pre">*</span></span><span class="sig-name descname"><span class="n"><span class="pre">PyBool_FromLong</span></span></span><span class="sig-paren">(</span><span class="kt"><span class="pre">long</span></span><span class="w"> </span><span class="n"><span class="pre">v</span></span><span class="sig-paren">)</span><br /></dt>
<dd><em class="refcount return_new_ref">返回值：新的引用。</em><em class="stableabi"> 属于 <a class="reference internal" href="stable.xhtml#stable"><span class="std std-ref">稳定 ABI</span></a>.</em><p>返回 <a class="reference internal" href="#c.Py_True" title="Py_True"><code class="xref c c-data docutils literal notranslate"><span class="pre">Py_True</span></code></a> 或 <a class="reference internal" href="#c.Py_False" title="Py_False"><code class="xref c c-data docutils literal notranslate"><span class="pre">Py_False</span></code></a>，具体取决于 <em>v</em> 的逻辑值。</p>
</dd></dl>

</section>


            <div class="clearer"></div>
          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>