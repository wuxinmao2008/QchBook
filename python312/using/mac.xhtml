<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta name="viewport" content="width=device-width, initial-scale=1" />
<meta property="og:title" content="5. 在 Mac 上使用 Python" />
<meta property="og:type" content="website" />
<meta property="og:url" content="https://docs.python.org/3/using/mac.xhtml" />
<meta property="og:site_name" content="Python documentation" />
<meta property="og:description" content="作者, Bob Savage < bobsavage@mac.com>,. 运行 macOS 的 Mac 上的 Python 在原则上与其他 Unix 平台上的 Python 非常相似，但有一些额外的特性 如集成开发环境（IDE）和包管理器值得指出。 获取和安装 Python: macOS 曾经在 10.8 至 12.3[https://developer.apple.com/documen..." />
<meta property="og:image" content="https://docs.python.org/3/_static/og-image.png" />
<meta property="og:image:alt" content="Python documentation" />
<meta name="description" content="作者, Bob Savage < bobsavage@mac.com>,. 运行 macOS 的 Mac 上的 Python 在原则上与其他 Unix 平台上的 Python 非常相似，但有一些额外的特性 如集成开发环境（IDE）和包管理器值得指出。 获取和安装 Python: macOS 曾经在 10.8 至 12.3[https://developer.apple.com/documen..." />
<meta property="og:image:width" content="200" />
<meta property="og:image:height" content="200" />
<meta name="theme-color" content="#3776ab" />

    <title>5. 在 Mac 上使用 Python</title>
    <link rel="stylesheet" type="text/css" href="../_static/pygments.css" />
    <link rel="stylesheet" type="text/css" href="../_static/epub.css" />
    <link rel="canonical" href="https://docs.python.org/3/using/mac.html" />
    
      
    

    
    <style>
      @media only screen {
        table.full-width-table {
            width: 100%;
        }
      }
    </style>
 

  </head><body>


    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <section id="using-python-on-a-mac">
<span id="using-on-mac"></span><h1><span class="section-number">5. </span>在 Mac 上使用 Python</h1>
<dl class="field-list simple">
<dt class="field-odd">作者<span class="colon">:</span></dt>
<dd class="field-odd"><p>Bob Savage &lt;<a class="reference external" href="mailto:bobsavage&#37;&#52;&#48;mac&#46;com">bobsavage<span>&#64;</span>mac<span>&#46;</span>com</a>&gt;</p>
</dd>
</dl>
<p>运行 macOS 的 Mac 上的 Python 在原则上与其他 Unix 平台上的 Python 非常相似，但有一些额外的特性 如集成开发环境（IDE）和包管理器值得指出。</p>
<section id="getting-and-installing-python">
<span id="getting-and-installing-macpython"></span><span id="getting-osx"></span><h2><span class="section-number">5.1. </span>获取和安装 Python</h2>
<p>macOS 曾经在 10.8 至 <a class="reference external" href="https://developer.apple.com/documentation/macos-release-notes/macos-12_3-release-notes#Python">12.3</a><span class="link-target"> [https://developer.apple.com/documentation/macos-release-notes/macos-12_3-release-notes#Python]</span> 版中预装了 Python 2.7。 建议你从 <a class="reference external" href="https://www.python.org/downloads/macos/">Python 网站</a><span class="link-target"> [https://www.python.org/downloads/macos/]</span> 安装最新版本的 Python 3。 那里也提供了当前的 Python &quot;universal2 binary&quot; 编译版，它可以在 Mac 的新式 Apple Silicon 和旧式 Intel 处理器上原生运行。</p>
<p>你安装后得到的东西有：</p>
<ul class="simple">
<li><p>你的 <code class="file docutils literal notranslate"><span class="pre">Applications</span></code> 文件夹中会有一个 <code class="docutils literal notranslate"><span class="pre">Python</span> <span class="pre">3.12</span></code> 文件夹。 你将在这里找到 IDLE，它是作为官方 Python 发行版标准组成部分的开发环境；以及 <strong class="program">Python Launcher</strong>，它负责处理在 Finder 中双击 Python 脚本的操作。</p></li>
<li><p>一个框架 <code class="file docutils literal notranslate"><span class="pre">/Library/Frameworks/Python.framework</span></code>，它包括 Python 可执行文件和库。 安装程序将此位置添加到 shell 路径。 要卸载 Python，你可以移除这三个项目。 将有一个 Python 可执行文件的符号链接放在 <code class="file docutils literal notranslate"><span class="pre">/usr/local/bin/</span></code> 中。</p></li>
</ul>
<div class="admonition note">
<p class="admonition-title">备注</p>
<p>在 macOS 10.8-12.3 上，Apple 提供的 Python 版本将分别安装在 <code class="file docutils literal notranslate"><span class="pre">/System/Library/Frameworks/Python.framework</span></code> 和 <code class="file docutils literal notranslate"><span class="pre">/usr/bin/python</span></code>。 你绝不应当修改或删除这些内容，因为它们由 Apple 控制并由 Apple 或第三方软件使用。 请记住如果你选择从 python.org 安装较新的 Python 版本，那么你的计算机上将有两个不同但都可用的 Python 安装版，因此你的路径和用法与你想要执行的操作保持一致是非常重要的。</p>
</div>
<p>IDLE 包括一个 Help 菜单，允许你访问 Python 文件。 如果你是完全的 Python 新手那么你应当开始阅读该文档中的教程部分。</p>
<p>如果你熟悉其他 Unix 平台上的 Python ，那么你应该阅读有关从 Unix shell 运行 Python 脚本的部分。</p>
<section id="how-to-run-a-python-script">
<h3><span class="section-number">5.1.1. </span>如何运行 Python 脚本</h3>
<p>你在 macOS 上入门 Python 的最好方式是通过 IDLE 集成开发环境；请参阅 <a class="reference internal" href="#ide"><span class="std std-ref">IDE</span></a> 章节并在 IDE 运行时使用 Help 菜单。</p>
<p>如果你想从 Terminal 窗口命令行或 Finder 中运行 Python 脚本那么你首先需要用一个编辑器来创建你的脚本。 macOS 自带了多个标准的 Unix 命令行编辑器，其中包括 <strong class="program">vim</strong> <strong class="program">nano</strong>。 如果你想要一个更具 Mac 风格的编辑器，那么来自 Bare Bones Software 的 <strong class="program">BBEdit</strong> (参见 <a class="reference external" href="https://www.barebones.com/products/bbedit/index.html">https://www.barebones.com/products/bbedit/index.html</a>) 是一个很好的选择，还有 <strong class="program">TextMate</strong> (参见 <a class="reference external" href="https://macromates.com">https://macromates.com</a>)。 其他的编辑器包括 <strong class="program">MacVim</strong> (<a class="reference external" href="https://macvim.org">https://macvim.org</a>) 和 <strong class="program">Aquamacs</strong> (<a class="reference external" href="https://aquamacs.org">https://aquamacs.org</a>)。</p>
<p>要从终端窗口运行脚本，必须确保:file:<cite>/usr/local/bin</cite> 位于 shell 搜索路径中。</p>
<p>要从 Finder 运行你的脚本，你有两个选择：</p>
<ul class="simple">
<li><p>将其拖拽到 <strong class="program">Python Launcher</strong>。</p></li>
<li><p>选择 <strong class="program">Python Launcher</strong> 作为通过 finder Info 窗口打开脚本（或任何 <code class="docutils literal notranslate"><span class="pre">.py</span></code> 脚本）和双击它时的默认应用程序。 <strong class="program">Python Launcher</strong> 有各种首选项来控制脚本的启动方式。 选项拖拽允许你为单次发起调用更改这些首选项，或使用其 Preferences 菜单进行全局性的更改。</p></li>
</ul>
</section>
<section id="running-scripts-with-a-gui">
<span id="osx-gui-scripts"></span><h3><span class="section-number">5.1.2. </span>运行有图形界面的脚本</h3>
<p>对于旧版本的 Python ，有一个需要注意的 macOS 特殊问题：与 Aqua 窗口管理器通信的程序（换句话说，任何有 GUI 的程序）需要以特殊的方式运行。使用 <strong class="program">pythonw</strong> 而不是 <strong class="program">python</strong> 来启动此类脚本。</p>
<p>对于 Python 3.9，你可以使用 <strong class="program">python</strong> 或者 <strong class="program">pythonw</strong>。</p>
</section>
<section id="configuration">
<h3><span class="section-number">5.1.3. </span>配置</h3>
<p>macOS 上的 Python 遵循所有标准 Unix 环境变量例如 <span class="target" id="index-2"></span><a class="reference internal" href="cmdline.xhtml#envvar-PYTHONPATH"><code class="xref std std-envvar docutils literal notranslate"><span class="pre">PYTHONPATH</span></code></a>，但是为从 Finder 启动的程序设置这些变量是非标准的因为 Finder 在启动时不会读取你的 <code class="file docutils literal notranslate"><span class="pre">.profile</span></code> 或 <code class="file docutils literal notranslate"><span class="pre">.cshrc</span></code>。 你需要创建一个文件 <code class="file docutils literal notranslate"><span class="pre">~/.MacOSX/environment.plist</span></code>。 详情参见 Apple 的 <a class="reference external" href="https://developer.apple.com/library/archive/qa/qa1067/_index.html">Technical Q&amp;A QA1067</a><span class="link-target"> [https://developer.apple.com/library/archive/qa/qa1067/_index.html]</span>。</p>
<p>有关安装 Python 包的更多信息，请参阅 <a class="reference internal" href="#mac-package-manager"><span class="std std-ref">安装额外的 Python 包</span></a> 一节。</p>
</section>
</section>
<section id="the-ide">
<span id="ide"></span><h2><span class="section-number">5.2. </span>IDE</h2>
<p>Python 附带了标准的 IDLE 开发环境。 可以在 <a class="reference external" href="https://www.hashcollision.org/hkn/python/idle_intro/index.html">https://www.hashcollision.org/hkn/python/idle_intro/index.html</a> 找到一篇有关使用 IDLE 的介绍。</p>
</section>
<section id="installing-additional-python-packages">
<span id="mac-package-manager"></span><h2><span class="section-number">5.3. </span>安装额外的 Python 包</h2>
<p>本小节已移至 <a class="reference external" href="https://packaging.python.org/en/latest/tutorials/installing-packages/">Python Packaging User Guide</a><span class="link-target"> [https://packaging.python.org/en/latest/tutorials/installing-packages/]</span>。</p>
</section>
<section id="gui-programming">
<span id="gui-programming-on-the-mac"></span><h2><span class="section-number">5.4. </span>GUI 编程</h2>
<p>使用 Python 在 Mac 上构建 GUI 应用程序有多种选择。</p>
<p><em>PyObjC</em> 是一个针对 Apple 的 Objective-C/Cocoa 框架的 Python 绑定，该框架是大多数现代 Mac 开发的基础。 有关 PyObjC 的信息可在 <a class="reference external" href="https://pypi.org/project/pyobjc/">pyobjc</a><span class="link-target"> [https://pypi.org/project/pyobjc/]</span> 查看。</p>
<p>标准的 Python GUI 工具包是 <a class="reference internal" href="../library/tkinter.xhtml#module-tkinter" title="tkinter: Interface to Tcl/Tk for graphical user interfaces"><code class="xref py py-mod docutils literal notranslate"><span class="pre">tkinter</span></code></a>，基于跨平台的 Tk 工具包（<a class="reference external" href="https://www.tcl.tk">https://www.tcl.tk</a>）。 Apple 的 macOS 捆绑了 Aqua 原生版本的 Tk，其最新版本可以从 <a class="reference external" href="https://www.activestate.com">https://www.activestate.com</a> 下载和安装；它也可以从源代码构建。</p>
<p>有许多其他 macOS 的 GUI 工具包可供选择：</p>
<ul class="simple">
<li><p><a class="reference external" href="https://www.qt.io/qt-for-python">PySide</a><span class="link-target"> [https://www.qt.io/qt-for-python]</span>: <a class="reference external" href="https://qt.io">Qt GUI 工具包</a><span class="link-target"> [https://qt.io]</span> 的官方 Python 绑定包。</p></li>
<li><p><a class="reference external" href="https://riverbankcomputing.com/software/pyqt/intro">PyQt</a><span class="link-target"> [https://riverbankcomputing.com/software/pyqt/intro]</span>: Qt 的替代性 Python 绑定包。</p></li>
<li><p><a class="reference external" href="https://kivy.org">Kivy</a><span class="link-target"> [https://kivy.org]</span>: 一款支持桌面和移动设备的跨平台 GUI 工具包。</p></li>
<li><p><a class="reference external" href="https://toga.readthedocs.io">Toga</a><span class="link-target"> [https://toga.readthedocs.io]</span>: <a class="reference external" href="https://beeware.org">BeeWare 项目</a><span class="link-target"> [https://beeware.org]</span> 的一部分；支持桌面、移动设备、Web 和控制台应用。</p></li>
<li><p><a class="reference external" href="https://www.wxpython.org">wxPython</a><span class="link-target"> [https://www.wxpython.org]</span>: 一款支持桌面操作系统的跨平台工具包。</p></li>
</ul>
</section>
<section id="distributing-python-applications">
<span id="distributing-python-applications-on-the-mac"></span><h2><span class="section-number">5.5. </span>分发 Python 应用程序</h2>
<p>有一系列工具可将你的 Python 代码转换为独立发布的应用程序：</p>
<ul class="simple">
<li><p><a class="reference external" href="https://pypi.org/project/py2app/">py2app</a><span class="link-target"> [https://pypi.org/project/py2app/]</span>: 支持基于 Python 项目创建 macOS <code class="docutils literal notranslate"><span class="pre">.app</span></code> 软件包。</p></li>
<li><p><a class="reference external" href="https://briefcase.readthedocs.io">Briefcase</a><span class="link-target"> [https://briefcase.readthedocs.io]</span>: <a class="reference external" href="https://beeware.org">BeeWare 项目</a><span class="link-target"> [https://beeware.org]</span> 的一部分；一款支持在 macOS 上创建 <code class="docutils literal notranslate"><span class="pre">.app</span></code> 软件包，并能管理签名和公证的跨平台打包工具。</p></li>
<li><p><a class="reference external" href="https://pyinstaller.org/">PyInstaller</a><span class="link-target"> [https://pyinstaller.org/]</span>: 一款通过创建单独文件或目录作为可发布形式的跨平台打包工具。</p></li>
</ul>
</section>
<section id="other-resources">
<h2><span class="section-number">5.6. </span>其他资源</h2>
<p>Pythonmac-SIG 邮件列表是 Mac 上 Python 用户和开发人员的优秀支持资源：</p>
<p><a class="reference external" href="https://www.python.org/community/sigs/current/pythonmac-sig/">https://www.python.org/community/sigs/current/pythonmac-sig/</a></p>
<p>另一个有用的资源是 MacPython wiki ：</p>
<p><a class="reference external" href="https://wiki.python.org/moin/MacPython">https://wiki.python.org/moin/MacPython</a></p>
</section>
</section>


            <div class="clearer"></div>
          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>