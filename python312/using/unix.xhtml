<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta name="viewport" content="width=device-width, initial-scale=1" />
<meta property="og:title" content="2. 在类Unix环境下使用Python" />
<meta property="og:type" content="website" />
<meta property="og:url" content="https://docs.python.org/3/using/unix.xhtml" />
<meta property="og:site_name" content="Python documentation" />
<meta property="og:description" content="获得并安装Python的最新版本: 在Linux中: Python预装在大多数Linux发行版上，并作为一个包提供给所有其他用户。 但是，您可能想要使用的某些功能在发行版提供的软件包中不可用。这时您可以从源代码轻松编译最新版本的Python。 如果Python没有预先安装并且不在发行版提供的库中，您可以轻松地为自己使用的发行版创建包。 参阅以下链接： 在FreeBSD和OpenBSD上: F..." />
<meta property="og:image" content="https://docs.python.org/3/_static/og-image.png" />
<meta property="og:image:alt" content="Python documentation" />
<meta name="description" content="获得并安装Python的最新版本: 在Linux中: Python预装在大多数Linux发行版上，并作为一个包提供给所有其他用户。 但是，您可能想要使用的某些功能在发行版提供的软件包中不可用。这时您可以从源代码轻松编译最新版本的Python。 如果Python没有预先安装并且不在发行版提供的库中，您可以轻松地为自己使用的发行版创建包。 参阅以下链接： 在FreeBSD和OpenBSD上: F..." />
<meta property="og:image:width" content="200" />
<meta property="og:image:height" content="200" />
<meta name="theme-color" content="#3776ab" />

    <title>2. 在类Unix环境下使用Python</title>
    <link rel="stylesheet" type="text/css" href="../_static/pygments.css" />
    <link rel="stylesheet" type="text/css" href="../_static/epub.css" />
    <link rel="canonical" href="https://docs.python.org/3/using/unix.html" />
    
      
    

    
    <style>
      @media only screen {
        table.full-width-table {
            width: 100%;
        }
      }
    </style>
 

  </head><body>


    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <section id="using-python-on-unix-platforms">
<span id="using-on-unix"></span><h1><span class="section-number">2. </span>在类Unix环境下使用Python</h1>
<section id="getting-and-installing-the-latest-version-of-python">
<h2><span class="section-number">2.1. </span>获得并安装Python的最新版本</h2>
<section id="on-linux">
<h3><span class="section-number">2.1.1. </span>在Linux中</h3>
<p>Python预装在大多数Linux发行版上，并作为一个包提供给所有其他用户。 但是，您可能想要使用的某些功能在发行版提供的软件包中不可用。这时您可以从源代码轻松编译最新版本的Python。</p>
<p>如果Python没有预先安装并且不在发行版提供的库中，您可以轻松地为自己使用的发行版创建包。 参阅以下链接：</p>
<div class="admonition seealso">
<p class="admonition-title">参见</p>
<dl class="simple">
<dt><a class="reference external" href="https://www.debian.org/doc/manuals/maint-guide/first.en.html">https://www.debian.org/doc/manuals/maint-guide/first.en.html</a></dt><dd><p>对于Debian用户</p>
</dd>
<dt><a class="reference external" href="https://en.opensuse.org/Portal:Packaging">https://en.opensuse.org/Portal:Packaging</a></dt><dd><p>对于OpenSuse用户</p>
</dd>
<dt><a class="reference external" href="https://docs.fedoraproject.org/en-US/package-maintainers/Packaging_Tutorial_GNU_Hello/">https://docs.fedoraproject.org/en-US/package-maintainers/Packaging_Tutorial_GNU_Hello/</a></dt><dd><p>对于Fedora用户</p>
</dd>
<dt><a class="reference external" href="https://slackbook.org/html/package-management-making-packages.html">https://slackbook.org/html/package-management-making-packages.html</a></dt><dd><p>对于Slackware用户</p>
</dd>
</dl>
</div>
</section>
<section id="on-freebsd-and-openbsd">
<h3><span class="section-number">2.1.2. </span>在FreeBSD和OpenBSD上</h3>
<ul>
<li><p>FreeBSD用户，使用以下命令添加包:</p>
<div class="highlight-sh notranslate"><div class="highlight"><pre><span></span>pkg<span class="w"> </span>install<span class="w"> </span>python3
</pre></div>
</div>
</li>
<li><p>OpenBSD用户，使用以下命令添加包:</p>
<div class="highlight-sh notranslate"><div class="highlight"><pre><span></span>pkg_add<span class="w"> </span>-r<span class="w"> </span>python

pkg_add<span class="w"> </span>ftp://ftp.openbsd.org/pub/OpenBSD/4.2/packages/&lt;insert<span class="w"> </span>your<span class="w"> </span>architecture<span class="w"> </span>here&gt;/python-&lt;version&gt;.tgz
</pre></div>
</div>
<p>例如：i386用户获取Python 2.5.1的可用版本:</p>
<div class="highlight-sh notranslate"><div class="highlight"><pre><span></span>pkg_add<span class="w"> </span>ftp://ftp.openbsd.org/pub/OpenBSD/4.2/packages/i386/python-2.5.1p2.tgz
</pre></div>
</div>
</li>
</ul>
</section>
</section>
<section id="building-python">
<span id="building-python-on-unix"></span><h2><span class="section-number">2.2. </span>构建Python</h2>
<p>如果你想自己编译 CPython，首先要做的是获取 <a class="reference external" href="https://www.python.org/downloads/source/">源代码</a><span class="link-target"> [https://www.python.org/downloads/source/]</span>。 你可以下载最新发布版的 source 或是直接抓取最新的 <a class="reference external" href="https://devguide.python.org/setup/#get-the-source-code">clone</a><span class="link-target"> [https://devguide.python.org/setup/#get-the-source-code]</span>。 （如果你想要贡献补丁，那么你就必须先 clone。）</p>
<p>构建过程由常用命令组成：</p>
<div class="highlight-sh notranslate"><div class="highlight"><pre><span></span>./configure
make
make<span class="w"> </span>install
</pre></div>
</div>
<p>特定 Unix 平台的 <a class="reference internal" href="configure.xhtml#configure-options"><span class="std std-ref">配置选项</span></a> 和注意事项通常会详细地记录在 Python 源代码树的根目录下的 <a class="reference external" href="https://github.com/python/cpython/tree/3.12/README.rst">README.rst</a><span class="link-target"> [https://github.com/python/cpython/tree/3.12/README.rst]</span> 文件中。</p>
<div class="admonition warning">
<p class="admonition-title">警告</p>
<p><code class="docutils literal notranslate"><span class="pre">make</span> <span class="pre">install</span></code> 可以覆盖或伪装 <code class="file docutils literal notranslate"><span class="pre">python3</span></code> 二进制文件。因此，建议使用 <code class="docutils literal notranslate"><span class="pre">make</span> <span class="pre">altinstall</span></code> 而不是 <code class="docutils literal notranslate"><span class="pre">make</span> <span class="pre">install</span></code> ，因为后者只安装了 <code class="file docutils literal notranslate"><em><span class="pre">exec_prefix</span></em><span class="pre">/bin/python</span><em><span class="pre">version</span></em></code> 。</p>
</div>
</section>
<section id="python-related-paths-and-files">
<h2><span class="section-number">2.3. </span>与Python相关的路径和文件</h2>
<p>这些取决于本机安装惯例的不同；<a class="reference internal" href="configure.xhtml#cmdoption-prefix"><code class="xref std std-option docutils literal notranslate"><span class="pre">prefix</span></code></a> 和 <a class="reference internal" href="configure.xhtml#cmdoption-exec-prefix"><code class="xref std std-option docutils literal notranslate"><span class="pre">exec_prefix</span></code></a> 依赖于具体安装并且应当被解读为针对 GNU 软件；它们可能具有相同的含义。</p>
<p>例如，在大多数Linux系统上，两者的默认值是 <code class="file docutils literal notranslate"><span class="pre">/usr</span></code> 。</p>
<table class="docutils align-default">
<thead>
<tr class="row-odd"><th class="head"><p>文件/目录</p></th>
<th class="head"><p>含意</p></th>
</tr>
</thead>
<tbody>
<tr class="row-even"><td><p><code class="file docutils literal notranslate"><em><span class="pre">exec_prefix</span></em><span class="pre">/bin/python3</span></code></p></td>
<td><p>解释器的推荐位置</p></td>
</tr>
<tr class="row-odd"><td><p><code class="file docutils literal notranslate"><em><span class="pre">prefix</span></em><span class="pre">/lib/python</span><em><span class="pre">version</span></em></code>,
<code class="file docutils literal notranslate"><em><span class="pre">exec_prefix</span></em><span class="pre">/lib/python</span><em><span class="pre">version</span></em></code></p></td>
<td><p>包含标准模块的目录的推荐位置</p></td>
</tr>
<tr class="row-even"><td><p><code class="file docutils literal notranslate"><em><span class="pre">prefix</span></em><span class="pre">/include/python</span><em><span class="pre">version</span></em></code>,
<code class="file docutils literal notranslate"><em><span class="pre">exec_prefix</span></em><span class="pre">/include/python</span><em><span class="pre">version</span></em></code></p></td>
<td><p>包含开发Python扩展和嵌入解释器所需的include文件的目录的推荐位置</p></td>
</tr>
</tbody>
</table>
</section>
<section id="miscellaneous">
<h2><span class="section-number">2.4. </span>杂项</h2>
<p>要在Unix上使用Python脚本，需要添加可执行权限，例如：</p>
<div class="highlight-shell-session notranslate"><div class="highlight"><pre><span></span><span class="gp">$ </span>chmod<span class="w"> </span>+x<span class="w"> </span>script
</pre></div>
</div>
<p>并在脚本的顶部放置一个合适的Shebang线。一个很好的选择通常是:</p>
<div class="highlight-sh notranslate"><div class="highlight"><pre><span></span><span class="ch">#!/usr/bin/env python3</span>
</pre></div>
</div>
<p>将在整个 <span class="target" id="index-2"></span><code class="xref std std-envvar docutils literal notranslate"><span class="pre">PATH</span></code> 中搜索Python解释器。但是，某些Unix系统可能没有 <strong class="program">env</strong> 命令，因此可能需要将 <code class="docutils literal notranslate"><span class="pre">/usr/bin/python3</span></code> 硬编码为解释器路径。</p>
<p>要在Python脚本中使用shell命令，请查看 <a class="reference internal" href="../library/subprocess.xhtml#module-subprocess" title="subprocess: Subprocess management."><code class="xref py py-mod docutils literal notranslate"><span class="pre">subprocess</span></code></a> 模块。</p>
</section>
<section id="custom-openssl">
<span id="unix-custom-openssl"></span><h2><span class="section-number">2.5. </span>自定义 OpenSSL</h2>
<ol class="arabic">
<li><p>要使用发行商的 OpenSSL 配置和系统信任存储库，请找到包含 <code class="docutils literal notranslate"><span class="pre">openssl.cnf</span></code> 文件或符号链接的目录，它位于 <code class="docutils literal notranslate"><span class="pre">/etc</span></code> 中。 在大多数发行版上该文件是在 <code class="docutils literal notranslate"><span class="pre">/etc/ssl</span></code> 或者 <code class="docutils literal notranslate"><span class="pre">/etc/pki/tls</span></code> 中。 该目录还应当包含一个 <code class="docutils literal notranslate"><span class="pre">cert.pem</span></code> 文件和/或一个 <code class="docutils literal notranslate"><span class="pre">certs</span></code> 目录。</p>
<div class="highlight-shell-session notranslate"><div class="highlight"><pre><span></span><span class="gp">$ </span>find<span class="w"> </span>/etc/<span class="w"> </span>-name<span class="w"> </span>openssl.cnf<span class="w"> </span>-printf<span class="w"> </span><span class="s2">&quot;%h\n&quot;</span>
<span class="go">/etc/ssl</span>
</pre></div>
</div>
</li>
<li><p>下载、编译并安装 OpenSSL。 请确保你使用 <code class="docutils literal notranslate"><span class="pre">install_sw</span></code> 而不是 <code class="docutils literal notranslate"><span class="pre">install</span></code>。 <code class="docutils literal notranslate"><span class="pre">install_sw</span></code> 的目标不会覆盖 <code class="docutils literal notranslate"><span class="pre">openssl.cnf</span></code>。</p>
<div class="highlight-shell-session notranslate"><div class="highlight"><pre><span></span><span class="gp">$ </span>curl<span class="w"> </span>-O<span class="w"> </span>https://www.openssl.org/source/openssl-VERSION.tar.gz
<span class="gp">$ </span>tar<span class="w"> </span>xzf<span class="w"> </span>openssl-VERSION
<span class="gp">$ </span><span class="nb">pushd</span><span class="w"> </span>openssl-VERSION
<span class="gp">$ </span>./config<span class="w"> </span><span class="se">\</span>
<span class="w">    </span>--prefix<span class="o">=</span>/usr/local/custom-openssl<span class="w"> </span><span class="se">\</span>
<span class="w">    </span>--libdir<span class="o">=</span>lib<span class="w"> </span><span class="se">\</span>
<span class="w">    </span>--openssldir<span class="o">=</span>/etc/ssl
<span class="gp">$ </span>make<span class="w"> </span>-j1<span class="w"> </span>depend
<span class="gp">$ </span>make<span class="w"> </span>-j8
<span class="gp">$ </span>make<span class="w"> </span>install_sw
<span class="gp">$ </span><span class="nb">popd</span>
</pre></div>
</div>
</li>
<li><p>使用自定义的 OpenSSL 编译 Python （参考配置 <code class="docutils literal notranslate"><span class="pre">--with-openssl</span></code> 和 <code class="docutils literal notranslate"><span class="pre">--with-openssl-rpath</span></code> 选项）</p>
<div class="highlight-shell-session notranslate"><div class="highlight"><pre><span></span><span class="gp">$ </span><span class="nb">pushd</span><span class="w"> </span>python-3.x.x
<span class="gp">$ </span>./configure<span class="w"> </span>-C<span class="w"> </span><span class="se">\</span>
<span class="w">    </span>--with-openssl<span class="o">=</span>/usr/local/custom-openssl<span class="w"> </span><span class="se">\</span>
<span class="w">    </span>--with-openssl-rpath<span class="o">=</span>auto<span class="w"> </span><span class="se">\</span>
<span class="w">    </span>--prefix<span class="o">=</span>/usr/local/python-3.x.x
<span class="gp">$ </span>make<span class="w"> </span>-j8
<span class="gp">$ </span>make<span class="w"> </span>altinstall
</pre></div>
</div>
</li>
</ol>
<div class="admonition note">
<p class="admonition-title">备注</p>
<p>OpenSSL 的补丁发布版具有向下兼容的 ABI。 你不需要重新编译 Python 来更新 OpenSSL。 使用一个新的版本来替代自定义 OpenSSL 安装版就可以了。</p>
</div>
</section>
</section>


            <div class="clearer"></div>
          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>